{
  "version": 3,
  "sources": ["../../../src/utils.js", "../../../src/middleware.js", "../../../src/services/email-verification.js", "../../../src/handlers/auth.js", "../../../src/services/services.js", "../../../src/handlers/community.js", "../../../src/handlers/user.js", "../../../src/constants.js", "../../../src/services/search-sources-service.js", "../../../src/handlers/search-sources.js", "../../../src/handlers/system.js", "../../../src/config/parser-rules.js", "../../../src/utils/html-parser.js", "../../../src/services/extraction-validator.js", "../../../src/services/search-link-extractor.js", "../../../src/services/detail-content-parser.js", "../../../src/services/cache-manager.js", "../../../src/services/detail-extractor.js", "../../../src/services/detail-config-service.js", "../../../src/handlers/detail-helpers.js", "../../../src/handlers/detail.js", "../../../src/handlers/proxy.js", "../../../src/router.js", "../../../src/index.js"],
  "sourceRoot": "D:\\\u8BB8\u4E16\u5B89\\\u78C1\u529B\u5FEB\u641C\\codeseek-backend\\.wrangler\\tmp\\deploy-404lZf",
  "sourcesContent": ["// src/utils.js - \u5DE5\u5177\u51FD\u6570\u96C6\u5408\r\nexport const utils = {\r\n    generateId() {\r\n        return crypto.randomUUID();\r\n    },\r\n\r\n    async hashPassword(password) {\r\n        const encoder = new TextEncoder();\r\n        const data = encoder.encode(password);\r\n        const hashBuffer = await crypto.subtle.digest('SHA-256', data);\r\n        return Array.from(new Uint8Array(hashBuffer))\r\n            .map(b => b.toString(16).padStart(2, '0'))\r\n            .join('');\r\n    },\r\n\r\n    async generateJWT(payload, secret) {\r\n        const header = { alg: 'HS256', typ: 'JWT' };\r\n        const encodedHeader = btoa(JSON.stringify(header)).replace(/[=]/g, '');\r\n        const encodedPayload = btoa(JSON.stringify(payload)).replace(/[=]/g, '');\r\n        \r\n        const data = `${encodedHeader}.${encodedPayload}`;\r\n        const encoder = new TextEncoder();\r\n        const key = await crypto.subtle.importKey(\r\n            'raw',\r\n            encoder.encode(secret),\r\n            { name: 'HMAC', hash: 'SHA-256' },\r\n            false,\r\n            ['sign']\r\n        );\r\n        \r\n        const signature = await crypto.subtle.sign('HMAC', key, encoder.encode(data));\r\n        const encodedSignature = btoa(String.fromCharCode(...new Uint8Array(signature))).replace(/[=]/g, '');\r\n        \r\n        return `${data}.${encodedSignature}`;\r\n    },\r\n\r\n    async verifyJWT(token, secret) {\r\n        try {\r\n            const [encodedHeader, encodedPayload, encodedSignature] = token.split('.');\r\n            if (!encodedHeader || !encodedPayload || !encodedSignature) return null;\r\n\r\n            const data = `${encodedHeader}.${encodedPayload}`;\r\n            const encoder = new TextEncoder();\r\n            const key = await crypto.subtle.importKey(\r\n                'raw',\r\n                encoder.encode(secret),\r\n                { name: 'HMAC', hash: 'SHA-256' },\r\n                false,\r\n                ['verify']\r\n            );\r\n            \r\n            const padding = '='.repeat((4 - encodedSignature.length % 4) % 4);\r\n            const signature = Uint8Array.from(atob(encodedSignature + padding), c => c.charCodeAt(0));\r\n            const isValid = await crypto.subtle.verify('HMAC', key, signature, encoder.encode(data));\r\n            \r\n            if (!isValid) return null;\r\n            \r\n            const payloadPadding = '='.repeat((4 - encodedPayload.length % 4) % 4);\r\n            const payload = JSON.parse(atob(encodedPayload + payloadPadding));\r\n            \r\n            if (payload.exp && Date.now() > payload.exp * 1000) {\r\n                return null;\r\n            }\r\n            \r\n            return payload;\r\n        } catch (error) {\r\n            console.error('JWT\u9A8C\u8BC1\u5931\u8D25:', error);\r\n            return null;\r\n        }\r\n    },\r\n\r\n    getCorsHeaders(origin = '*') {\r\n        const allowedOrigins = ['http://localhost:3000', 'https://codeseek.pp.ua'];\r\n        const isAllowedOrigin = origin === '*' || allowedOrigins.some(allowed => {\r\n            if (allowed.includes('*')) {\r\n                const pattern = allowed.replace('*', '.*');\r\n                return new RegExp(pattern).test(origin);\r\n            }\r\n            return allowed === origin;\r\n        });\r\n\r\n        return {\r\n            'Access-Control-Allow-Origin': isAllowedOrigin ? origin : 'null',\r\n            'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\r\n            'Access-Control-Allow-Headers': 'Content-Type, Authorization, X-Requested-With',\r\n            'Access-Control-Max-Age': '86400',\r\n            'Access-Control-Allow-Credentials': 'true',\r\n            'Vary': 'Origin'\r\n        };\r\n    },\r\n\r\n    jsonResponse(data, status = 200, origin = '*') {\r\n        return new Response(JSON.stringify(data), {\r\n            status,\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                ...this.getCorsHeaders(origin)\r\n            }\r\n        });\r\n    },\r\n\r\n    getClientIP(request) {\r\n        return request.headers.get('CF-Connecting-IP') || \r\n               request.headers.get('X-Forwarded-For')?.split(',')[0]?.trim() || \r\n               request.headers.get('X-Real-IP') ||\r\n               'unknown';\r\n    },\r\n\r\n    async logUserAction(env, userId, action, data, request) {\r\n        try {\r\n            if (env.ENABLE_ACTION_LOGGING !== 'true') return;\r\n\r\n            const actionId = this.generateId();\r\n            const ip = this.getClientIP(request);\r\n            const userAgent = request.headers.get('User-Agent') || '';\r\n            \r\n            await env.DB.prepare(`\r\n                INSERT INTO user_actions (id, user_id, action, data, ip_address, user_agent, created_at)\r\n                VALUES (?, ?, ?, ?, ?, ?, ?)\r\n            `).bind(\r\n                actionId,\r\n                userId,\r\n                action,\r\n                JSON.stringify(data),\r\n                ip,\r\n                userAgent,\r\n                Date.now()\r\n            ).run();\r\n        } catch (error) {\r\n            console.error('\u8BB0\u5F55\u7528\u6237\u884C\u4E3A\u5931\u8D25:', error);\r\n        }\r\n    },\r\n\r\n    validateInput(data, rules) {\r\n        const errors = [];\r\n        for (const [field, rule] of Object.entries(rules)) {\r\n            const value = data[field];\r\n            \r\n            if (rule.required && (!value || value.toString().trim() === '')) {\r\n                errors.push(`${field}\u662F\u5FC5\u9700\u7684`);\r\n                continue;\r\n            }\r\n            \r\n            if (value && rule.minLength && value.length < rule.minLength) {\r\n                errors.push(`${field}\u81F3\u5C11\u9700\u8981${rule.minLength}\u4E2A\u5B57\u7B26`);\r\n            }\r\n            \r\n            if (value && rule.maxLength && value.length > rule.maxLength) {\r\n                errors.push(`${field}\u6700\u591A${rule.maxLength}\u4E2A\u5B57\u7B26`);\r\n            }\r\n            \r\n            if (value && rule.pattern && !rule.pattern.test(value)) {\r\n                errors.push(rule.message || `${field}\u683C\u5F0F\u4E0D\u6B63\u786E`);\r\n            }\r\n        }\r\n        return errors;\r\n    },\r\n\r\n    successResponse(data = {}, origin = '*') {\r\n        return this.jsonResponse({\r\n            success: true,\r\n            timestamp: Date.now(),\r\n            ...data\r\n        }, 200, origin);\r\n    },\r\n\r\n    errorResponse(message, status = 400, origin = '*', errorCode = null) {\r\n        return this.jsonResponse({\r\n            success: false,\r\n            error: true,\r\n            message,\r\n            code: errorCode,\r\n            timestamp: Date.now()\r\n        }, status, origin);\r\n    },\r\n\r\n    validateRequiredParams(body, requiredFields) {\r\n        const missing = [];\r\n        for (const field of requiredFields) {\r\n            if (!body[field] || \r\n                (typeof body[field] === 'string' && body[field].trim() === '')) {\r\n                missing.push(field);\r\n            }\r\n        }\r\n        return missing;\r\n    },\r\n\r\n    async safeJsonParse(request, fallback = {}) {\r\n        try {\r\n            return await request.json();\r\n        } catch (error) {\r\n            console.warn('JSON\u89E3\u6790\u5931\u8D25:', error);\r\n            return fallback;\r\n        }\r\n    },\r\n\t\r\n\t    // \u6DFB\u52A0\u5EF6\u8FDF\u5DE5\u5177\u51FD\u6570\uFF08\u5982\u679C\u8FD8\u6CA1\u6709\u7684\u8BDD\uFF09\r\n    delay(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    },\r\n\r\n    // \u6DFB\u52A0\u6DF1\u5EA6\u514B\u9686\u51FD\u6570\uFF08\u5982\u679C\u9700\u8981\u7684\u8BDD\uFF09\r\n    deepClone(obj) {\r\n        if (obj === null || typeof obj !== 'object') return obj;\r\n        if (obj instanceof Date) return new Date(obj.getTime());\r\n        if (obj instanceof Array) return obj.map(item => this.deepClone(item));\r\n        if (typeof obj === 'object') {\r\n            const cloned = {};\r\n            Object.keys(obj).forEach(key => {\r\n                cloned[key] = this.deepClone(obj[key]);\r\n            });\r\n            return cloned;\r\n        }\r\n    },\r\n\r\n    // \u6DFB\u52A0\u5B89\u5168\u7684\u6570\u636E\u5E93\u64CD\u4F5C\u5305\u88C5\u5668\r\n    async safeDbOperation(operation, errorMessage = '\u6570\u636E\u5E93\u64CD\u4F5C\u5931\u8D25') {\r\n        try {\r\n            return await operation();\r\n        } catch (error) {\r\n            console.error(errorMessage + ':', error);\r\n            throw new Error(errorMessage + ': ' + error.message);\r\n        }\r\n    },\r\n};", "// src/middleware.js - \u8BA4\u8BC1\u548C\u5176\u4ED6\u4E2D\u95F4\u4EF6\r\nimport { utils } from './utils.js';\r\n\r\nexport async function authenticate(request, env) {\r\n    const authHeader = request.headers.get('Authorization');\r\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\r\n        return null;\r\n    }\r\n\r\n    const token = authHeader.substring(7);\r\n    const jwtSecret = env.JWT_SECRET;\r\n    if (!jwtSecret) {\r\n        console.error('JWT_SECRET \u73AF\u5883\u53D8\u91CF\u672A\u8BBE\u7F6E');\r\n        return null;\r\n    }\r\n\r\n    const payload = await utils.verifyJWT(token, jwtSecret);\r\n    if (!payload) return null;\r\n\r\n    try {\r\n        const tokenHash = await utils.hashPassword(token);\r\n        const session = await env.DB.prepare(`\r\n            SELECT u.* FROM users u\r\n            JOIN user_sessions s ON u.id = s.user_id\r\n            WHERE s.token_hash = ? AND s.expires_at > ?\r\n        `).bind(tokenHash, Date.now()).first();\r\n\r\n        if (!session) return null;\r\n\r\n        await env.DB.prepare(`\r\n            UPDATE user_sessions SET last_activity = ? WHERE token_hash = ?\r\n        `).bind(Date.now(), tokenHash).run();\r\n\r\n        return {\r\n            id: session.id,\r\n            username: session.username,\r\n            email: session.email,\r\n            permissions: JSON.parse(session.permissions || '[]'),\r\n            settings: JSON.parse(session.settings || '{}')\r\n        };\r\n    } catch (error) {\r\n        console.error('\u8BA4\u8BC1\u67E5\u8BE2\u5931\u8D25:', error);\r\n        return null;\r\n    }\r\n}", "// src/services/email-verification.js - \u589E\u5F3A\u7248\u672C\uFF0C\u652F\u6301\u9A8C\u8BC1\u72B6\u6001\u68C0\u67E5\u548C\u6062\u590D\r\nimport { utils } from '../utils.js';\r\n\r\nexport class EmailVerificationService {\r\n    constructor(env) {\r\n        this.env = env;\r\n        this.resendApiKey = env.RESEND_API_KEY;\r\n        this.defaultFromEmail = env.DEFAULT_FROM_EMAIL || 'noreply@codeseek.pp.ua';\r\n        this.defaultFromName = env.DEFAULT_FROM_NAME || '\u78C1\u529B\u5FEB\u641C';\r\n        this.siteUrl = env.SITE_URL || 'https://codeseek.pp.ua';\r\n    }\r\n\r\n    // \uD83C\uDD95 \u65B0\u589E\uFF1A\u68C0\u67E5\u7528\u6237\u662F\u5426\u6709\u5F85\u9A8C\u8BC1\u7684\u9A8C\u8BC1\u7801\r\n    async getPendingVerification(email, verificationType, userId = null) {\r\n        const emailHash = await utils.hashPassword(email);\r\n        const now = Date.now();\r\n\r\n        const verification = await this.env.DB.prepare(`\r\n            SELECT * FROM email_verifications \r\n            WHERE email_hash = ? AND verification_type = ?\r\n            AND status = 'pending' AND expires_at > ?\r\n            ${userId ? 'AND user_id = ?' : 'AND user_id IS NULL'}\r\n            ORDER BY created_at DESC LIMIT 1\r\n        `).bind(emailHash, verificationType, now, ...(userId ? [userId] : [])).first();\r\n\r\n        if (!verification) {\r\n            return null;\r\n        }\r\n\r\n        const remainingTime = verification.expires_at - now;\r\n        const canResend = remainingTime <= 60000; // \u5269\u4F59\u65F6\u95F4\u5C11\u4E8E1\u5206\u949F\u65F6\u5141\u8BB8\u91CD\u65B0\u53D1\u9001\r\n\r\n        return {\r\n            id: verification.id,\r\n            email: emailVerificationUtils.maskEmail(email),\r\n            verificationType,\r\n            expiresAt: verification.expires_at,\r\n            remainingTime,\r\n            canResend,\r\n            attemptCount: verification.attempt_count,\r\n            maxAttempts: verification.max_attempts,\r\n            createdAt: verification.created_at,\r\n            metadata: JSON.parse(verification.metadata || '{}')\r\n        };\r\n    }\r\n\r\n    // \uD83C\uDD95 \u65B0\u589E\uFF1A\u83B7\u53D6\u7528\u6237\u6240\u6709\u5F85\u9A8C\u8BC1\u7684\u9A8C\u8BC1\u7801\u72B6\u6001\r\n    async getUserPendingVerifications(userId) {\r\n        const now = Date.now();\r\n\r\n        const verifications = await this.env.DB.prepare(`\r\n            SELECT * FROM email_verifications \r\n            WHERE user_id = ? AND status = 'pending' AND expires_at > ?\r\n            ORDER BY created_at DESC\r\n        `).bind(userId, now).all();\r\n\r\n        return verifications.results.map(verification => ({\r\n            id: verification.id,\r\n            email: emailVerificationUtils.maskEmail(verification.email),\r\n            verificationType: verification.verification_type,\r\n            expiresAt: verification.expires_at,\r\n            remainingTime: verification.expires_at - now,\r\n            canResend: (verification.expires_at - now) <= 60000,\r\n            attemptCount: verification.attempt_count,\r\n            maxAttempts: verification.max_attempts,\r\n            createdAt: verification.created_at,\r\n            metadata: JSON.parse(verification.metadata || '{}')\r\n        }));\r\n    }\r\n\r\n    // \uD83C\uDD95 \u65B0\u589E\uFF1A\u68C0\u67E5\u90AE\u7BB1\u66F4\u6539\u8BF7\u6C42\u72B6\u6001\r\n    async getPendingEmailChangeRequest(userId) {\r\n        const now = Date.now();\r\n\r\n        const request = await this.env.DB.prepare(`\r\n            SELECT * FROM email_change_requests \r\n            WHERE user_id = ? AND status = 'pending' AND expires_at > ?\r\n            ORDER BY created_at DESC LIMIT 1\r\n        `).bind(userId, now).first();\r\n\r\n        if (!request) {\r\n            return null;\r\n        }\r\n\r\n        // \u68C0\u67E5\u76F8\u5173\u7684\u9A8C\u8BC1\u7801\u72B6\u6001\r\n        const oldEmailVerification = await this.getPendingVerification(\r\n            request.old_email, 'email_change_old', userId\r\n        );\r\n        const newEmailVerification = await this.getPendingVerification(\r\n            request.new_email, 'email_change_new', userId\r\n        );\r\n\r\n        return {\r\n            id: request.id,\r\n            oldEmail: emailVerificationUtils.maskEmail(request.old_email),\r\n            newEmail: emailVerificationUtils.maskEmail(request.new_email),\r\n            oldEmailVerified: Boolean(request.old_email_verified),\r\n            newEmailVerified: Boolean(request.new_email_verified),\r\n            expiresAt: request.expires_at,\r\n            remainingTime: request.expires_at - now,\r\n            createdAt: request.created_at,\r\n            verifications: {\r\n                oldEmail: oldEmailVerification,\r\n                newEmail: newEmailVerification\r\n            }\r\n        };\r\n    }\r\n\r\n    // \uD83C\uDD95 \u65B0\u589E\uFF1A\u667A\u80FD\u83B7\u53D6\u9A8C\u8BC1\u72B6\u6001\uFF08\u6839\u636E\u9A8C\u8BC1\u7C7B\u578B\u81EA\u52A8\u5224\u65AD\uFF09\r\n    async getVerificationStatus(email, verificationType, userId = null) {\r\n        // \u5BF9\u4E8E\u90AE\u7BB1\u66F4\u6539\uFF0C\u9700\u8981\u7279\u6B8A\u5904\u7406\r\n        if (verificationType.includes('email_change') && userId) {\r\n            return await this.getPendingEmailChangeRequest(userId);\r\n        }\r\n\r\n        // \u5176\u4ED6\u7C7B\u578B\u7684\u9A8C\u8BC1\u76F4\u63A5\u67E5\u8BE2\r\n        return await this.getPendingVerification(email, verificationType, userId);\r\n    }\r\n\r\n    // \uD83C\uDD95 \u65B0\u589E\uFF1A\u68C0\u67E5\u662F\u5426\u53EF\u4EE5\u91CD\u65B0\u53D1\u9001\u9A8C\u8BC1\u7801\r\n    async canResendVerification(email, verificationType, userId = null) {\r\n        const pending = await this.getPendingVerification(email, verificationType, userId);\r\n        \r\n        if (!pending) {\r\n            return { canResend: true, reason: 'no_pending_verification' };\r\n        }\r\n\r\n        const timeSinceCreated = Date.now() - pending.createdAt;\r\n        const minResendInterval = 60000; // 1\u5206\u949F\u6700\u5C0F\u95F4\u9694\r\n\r\n        if (timeSinceCreated < minResendInterval) {\r\n            return {\r\n                canResend: false,\r\n                reason: 'too_soon',\r\n                waitTime: minResendInterval - timeSinceCreated,\r\n                remainingTime: pending.remainingTime\r\n            };\r\n        }\r\n\r\n        return {\r\n            canResend: true,\r\n            reason: 'can_resend',\r\n            existingVerification: pending\r\n        };\r\n    }\r\n\r\n    // \uD83C\uDD95 \u65B0\u589E\uFF1A\u6839\u636E\u9A8C\u8BC1\u72B6\u6001\u751F\u6210\u524D\u7AEF\u72B6\u6001\u6570\u636E\r\n    async getVerificationStateForFrontend(email, verificationType, userId = null, additionalData = {}) {\r\n        const status = await this.getVerificationStatus(email, verificationType, userId);\r\n        const canResend = await this.canResendVerification(email, verificationType, userId);\r\n\r\n        return {\r\n            hasPendingVerification: !!status,\r\n            verificationStatus: status,\r\n            canResend: canResend.canResend,\r\n            resendReason: canResend.reason,\r\n            waitTime: canResend.waitTime,\r\n            ...additionalData\r\n        };\r\n    }\r\n\r\n    // \u73B0\u6709\u65B9\u6CD5\u4FDD\u6301\u4E0D\u53D8\uFF0C\u6DFB\u52A0\u4E00\u4E9B\u4F18\u5316...\r\n\r\n    // \u751F\u62106\u4F4D\u6570\u5B57\u9A8C\u8BC1\u7801\r\n    generateVerificationCode() {\r\n        return Math.floor(100000 + Math.random() * 900000).toString();\r\n    }\r\n\r\n    // \u68C0\u67E5\u90AE\u4EF6\u53D1\u9001\u9891\u7387\u9650\u5236\r\n    async checkEmailRateLimit(email, ipAddress) {\r\n        const emailHash = await utils.hashPassword(email);\r\n        const now = Date.now();\r\n        const oneHourAgo = now - 3600000; \r\n        const oneDayAgo = now - 86400000; \r\n\r\n        // \u68C0\u67E5\u6BCF\u5C0F\u65F6\u9650\u5236\r\n        const hourlyCount = await this.env.DB.prepare(`\r\n            SELECT COUNT(*) as count FROM email_send_logs \r\n            WHERE (recipient_email = ? OR ip_address = ?) \r\n            AND created_at > ? AND send_status = 'sent'\r\n        `).bind(email, ipAddress, oneHourAgo).first();\r\n\r\n        const hourlyLimit = parseInt(this.env.EMAIL_RATE_LIMIT_PER_HOUR || '5');\r\n        if (hourlyCount.count >= hourlyLimit) {\r\n            throw new Error(`\u53D1\u9001\u9891\u7387\u8FC7\u5FEB\uFF0C\u8BF71\u5C0F\u65F6\u540E\u518D\u8BD5\uFF08\u6BCF\u5C0F\u65F6\u9650\u5236${hourlyLimit}\u6B21\uFF09`);\r\n        }\r\n\r\n        // \u68C0\u67E5\u6BCF\u65E5\u9650\u5236\r\n        const dailyCount = await this.env.DB.prepare(`\r\n            SELECT COUNT(*) as count FROM email_send_logs \r\n            WHERE (recipient_email = ? OR ip_address = ?) \r\n            AND created_at > ? AND send_status = 'sent'\r\n        `).bind(email, ipAddress, oneDayAgo).first();\r\n\r\n        const dailyLimit = parseInt(this.env.EMAIL_RATE_LIMIT_PER_DAY || '20');\r\n        if (dailyCount.count >= dailyLimit) {\r\n            throw new Error(`\u4ECA\u65E5\u53D1\u9001\u6B21\u6570\u5DF2\u8FBE\u4E0A\u9650\uFF0C\u8BF7\u660E\u5929\u518D\u8BD5\uFF08\u6BCF\u65E5\u9650\u5236${dailyLimit}\u6B21\uFF09`);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    // \u521B\u5EFA\u90AE\u7BB1\u9A8C\u8BC1\u8BB0\u5F55\uFF08\u4F18\u5316\u7248\u672C\uFF0C\u5148\u6E05\u7406\u76F8\u540C\u7C7B\u578B\u7684\u5F85\u9A8C\u8BC1\u8BB0\u5F55\uFF09\r\n    async createEmailVerification(email, verificationType, userId = null, metadata = {}) {\r\n        // \u5148\u6E05\u7406\u8BE5\u90AE\u7BB1\u8BE5\u7C7B\u578B\u7684\u5F85\u9A8C\u8BC1\u8BB0\u5F55\uFF0C\u907F\u514D\u91CD\u590D\r\n        const emailHash = await utils.hashPassword(email);\r\n        await this.env.DB.prepare(`\r\n            UPDATE email_verifications \r\n            SET status = 'expired'\r\n            WHERE email_hash = ? AND verification_type = ? AND status = 'pending'\r\n            ${userId ? 'AND user_id = ?' : 'AND user_id IS NULL'}\r\n        `).bind(emailHash, verificationType, ...(userId ? [userId] : [])).run();\r\n\r\n        const verificationCode = this.generateVerificationCode();\r\n        const codeHash = await utils.hashPassword(verificationCode);\r\n        const expiryTime = Date.now() + parseInt(this.env.VERIFICATION_CODE_EXPIRY || '900000'); // 15\u5206\u949F\r\n\r\n        const verificationId = utils.generateId();\r\n\r\n        await this.env.DB.prepare(`\r\n            INSERT INTO email_verifications (\r\n                id, user_id, email, email_hash, verification_code, code_hash,\r\n                verification_type, status, expires_at, created_at, metadata\r\n            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n        `).bind(\r\n            verificationId, userId, email, emailHash, verificationCode, codeHash,\r\n            verificationType, 'pending', expiryTime, Date.now(), JSON.stringify(metadata)\r\n        ).run();\r\n\r\n        return {\r\n            id: verificationId,\r\n            code: verificationCode,\r\n            expiresAt: expiryTime\r\n        };\r\n    }\r\n\r\n    // \u9A8C\u8BC1\u9A8C\u8BC1\u7801\r\n    async verifyCode(email, inputCode, verificationType, userId = null) {\r\n        const emailHash = await utils.hashPassword(email);\r\n        const codeHash = await utils.hashPassword(inputCode);\r\n        const now = Date.now();\r\n\r\n        // \u67E5\u627E\u6709\u6548\u7684\u9A8C\u8BC1\u8BB0\u5F55\r\n        const verification = await this.env.DB.prepare(`\r\n            SELECT * FROM email_verifications \r\n            WHERE email_hash = ? AND code_hash = ? AND verification_type = ?\r\n            AND status = 'pending' AND expires_at > ?\r\n            ${userId ? 'AND user_id = ?' : 'AND user_id IS NULL'}\r\n            ORDER BY created_at DESC LIMIT 1\r\n        `).bind(emailHash, codeHash, verificationType, now, ...(userId ? [userId] : [])).first();\r\n\r\n        if (!verification) {\r\n            // \u8BB0\u5F55\u5931\u8D25\u5C1D\u8BD5\r\n            await this.recordFailedAttempt(emailHash, inputCode, verificationType);\r\n            throw new Error('\u9A8C\u8BC1\u7801\u65E0\u6548\u6216\u5DF2\u8FC7\u671F');\r\n        }\r\n\r\n        // \u68C0\u67E5\u5C1D\u8BD5\u6B21\u6570\r\n        if (verification.attempt_count >= verification.max_attempts) {\r\n            throw new Error('\u9A8C\u8BC1\u5C1D\u8BD5\u6B21\u6570\u5DF2\u8FBE\u4E0A\u9650\uFF0C\u8BF7\u91CD\u65B0\u7533\u8BF7\u9A8C\u8BC1\u7801');\r\n        }\r\n\r\n        // \u6807\u8BB0\u9A8C\u8BC1\u7801\u4E3A\u5DF2\u4F7F\u7528\r\n        await this.env.DB.prepare(`\r\n            UPDATE email_verifications \r\n            SET status = 'used', used_at = ?\r\n            WHERE id = ?\r\n        `).bind(now, verification.id).run();\r\n\r\n        return {\r\n            success: true,\r\n            verificationId: verification.id,\r\n            metadata: JSON.parse(verification.metadata || '{}')\r\n        };\r\n    }\r\n\r\n    // \u8BB0\u5F55\u5931\u8D25\u5C1D\u8BD5\r\n    async recordFailedAttempt(emailHash, inputCode, verificationType) {\r\n        await this.env.DB.prepare(`\r\n            UPDATE email_verifications \r\n            SET attempt_count = attempt_count + 1, last_attempt_at = ?\r\n            WHERE email_hash = ? AND verification_type = ? AND status = 'pending'\r\n        `).bind(Date.now(), emailHash, verificationType).run();\r\n    }\r\n\r\n    // \u53D1\u9001\u9A8C\u8BC1\u90AE\u4EF6\r\n    async sendVerificationEmail(email, verificationCode, templateType, templateVars = {}) {\r\n        if (!this.resendApiKey) {\r\n            throw new Error('\u90AE\u4EF6\u670D\u52A1\u672A\u914D\u7F6E');\r\n        }\r\n        \r\n        // \u4F7F\u7528\u6620\u5C04\u540E\u7684\u6A21\u677F\u7C7B\u578B\r\n        templateType = this.getTemplateType(templateType);\r\n        const template = await this.getEmailTemplate(templateType);\r\n        \r\n        if (!template) {\r\n            throw new Error(`\u90AE\u4EF6\u6A21\u677F\u4E0D\u5B58\u5728: ${templateType}`);\r\n        }\r\n\r\n        // \u51C6\u5907\u6A21\u677F\u53D8\u91CF\r\n        const vars = {\r\n            siteName: '\u78C1\u529B\u5FEB\u641C',\r\n            siteUrl: this.siteUrl,\r\n            verificationCode,\r\n            expiryMinutes: Math.floor(parseInt(this.env.VERIFICATION_CODE_EXPIRY || '900000') / 60000),\r\n            ...templateVars\r\n        };\r\n\r\n        // \u6E32\u67D3\u6A21\u677F\r\n        const subject = this.renderTemplate(template.subject_template, vars);\r\n        const htmlContent = this.renderTemplate(template.html_template, vars);\r\n        const textContent = this.renderTemplate(template.text_template || '', vars);\r\n\r\n        try {\r\n            // \u8C03\u7528Resend API\r\n            const response = await fetch('https://api.resend.com/emails', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${this.resendApiKey}`,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    from: `${this.defaultFromName} <${this.defaultFromEmail}>`,\r\n                    to: [email],\r\n                    subject: subject,\r\n                    html: htmlContent,\r\n                    text: textContent,\r\n                    tags: [{\r\n                        name: 'type',\r\n                        value: templateType\r\n                    }, {\r\n                        name: 'source',\r\n                        value: 'email-verification'\r\n                    }]\r\n                }),\r\n            });\r\n\r\n            const result = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(result.message || '\u90AE\u4EF6\u53D1\u9001\u5931\u8D25');\r\n            }\r\n\r\n            // \u8BB0\u5F55\u53D1\u9001\u65E5\u5FD7\r\n            await this.logEmailSend(email, templateType, 'sent', {\r\n                messageId: result.id,\r\n                subject,\r\n                templateName: template.template_name\r\n            });\r\n\r\n            return {\r\n                success: true,\r\n                messageId: result.id,\r\n                message: '\u9A8C\u8BC1\u90AE\u4EF6\u5DF2\u53D1\u9001'\r\n            };\r\n\r\n        } catch (error) {\r\n            console.error('\u53D1\u9001\u90AE\u4EF6\u5931\u8D25:', error);\r\n            \r\n            // \u8BB0\u5F55\u53D1\u9001\u5931\u8D25\u65E5\u5FD7\r\n            await this.logEmailSend(email, templateType, 'failed', {\r\n                error: error.message,\r\n                subject,\r\n                templateName: template.template_name\r\n            });\r\n\r\n            throw new Error('\u90AE\u4EF6\u53D1\u9001\u5931\u8D25: ' + error.message);\r\n        }\r\n    }\r\n\r\n    // \u83B7\u53D6\u90AE\u4EF6\u6A21\u677F\r\n    async getEmailTemplate(templateType) {\r\n        return await this.env.DB.prepare(`\r\n            SELECT * FROM email_templates \r\n            WHERE template_type = ? AND is_active = 1\r\n            ORDER BY version DESC LIMIT 1\r\n        `).bind(templateType).first();\r\n    }\r\n\r\n    // \u6E32\u67D3\u6A21\u677F\r\n    renderTemplate(template, vars) {\r\n        if (!template) return '';\r\n        \r\n        let rendered = template;\r\n        for (const [key, value] of Object.entries(vars)) {\r\n            const regex = new RegExp(`\\\\{\\\\{${key}\\\\}\\\\}`, 'g');\r\n            rendered = rendered.replace(regex, value || '');\r\n        }\r\n        return rendered;\r\n    }\r\n\r\n    // \u8BB0\u5F55\u90AE\u4EF6\u53D1\u9001\u65E5\u5FD7\r\n    async logEmailSend(email, emailType, status, details = {}) {\r\n        const logId = utils.generateId();\r\n        await this.env.DB.prepare(`\r\n            INSERT INTO email_send_logs (\r\n                id, recipient_email, email_type, send_status, provider,\r\n                provider_message_id, template_name, subject, send_error,\r\n                created_at, sent_at\r\n            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n        `).bind(\r\n            logId, email, emailType, status, 'resend',\r\n            details.messageId || null, details.templateName || null,\r\n            details.subject || null, details.error || null,\r\n            Date.now(), status === 'sent' ? Date.now() : null\r\n        ).run();\r\n    }\r\n\r\n    // \u6E05\u7406\u8FC7\u671F\u9A8C\u8BC1\u7801\r\n    async cleanupExpiredVerifications() {\r\n        const deleted = await this.env.DB.prepare(`\r\n            DELETE FROM email_verifications \r\n            WHERE expires_at < ? AND status = 'pending'\r\n        `).bind(Date.now()).run();\r\n\r\n        return deleted.changes || 0;\r\n    }\r\n\r\n    // \u83B7\u53D6\u7528\u6237\u672A\u5B8C\u6210\u7684\u90AE\u7BB1\u66F4\u6539\u8BF7\u6C42\r\n    async getUserActiveEmailChangeRequest(userId) {\r\n        return await this.env.DB.prepare(`\r\n            SELECT * FROM email_change_requests \r\n            WHERE user_id = ? AND status = 'pending' AND expires_at > ?\r\n            ORDER BY created_at DESC LIMIT 1\r\n        `).bind(userId, Date.now()).first();\r\n    }\r\n\r\n    // \u521B\u5EFA\u90AE\u7BB1\u66F4\u6539\u8BF7\u6C42\r\n    async createEmailChangeRequest(userId, oldEmail, newEmail) {\r\n        const requestId = utils.generateId();\r\n        const newEmailHash = await utils.hashPassword(newEmail);\r\n        const expiryTime = Date.now() + 1800000; // 30\u5206\u949F\r\n\r\n        await this.env.DB.prepare(`\r\n            INSERT INTO email_change_requests (\r\n                id, user_id, old_email, new_email, new_email_hash,\r\n                status, expires_at, created_at\r\n            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\r\n        `).bind(\r\n            requestId, userId, oldEmail, newEmail, newEmailHash,\r\n            'pending', expiryTime, Date.now()\r\n        ).run();\r\n\r\n        return {\r\n            id: requestId,\r\n            expiresAt: expiryTime\r\n        };\r\n    }\r\n\r\n    // \u5B8C\u6210\u90AE\u7BB1\u66F4\u6539\r\n    async completeEmailChange(requestId, userId) {\r\n        const request = await this.env.DB.prepare(`\r\n            SELECT * FROM email_change_requests \r\n            WHERE id = ? AND user_id = ? AND status = 'pending'\r\n            AND expires_at > ?\r\n        `).bind(requestId, userId, Date.now()).first();\r\n\r\n        if (!request) {\r\n            throw new Error('\u90AE\u7BB1\u66F4\u6539\u8BF7\u6C42\u4E0D\u5B58\u5728\u6216\u5DF2\u8FC7\u671F');\r\n        }\r\n\r\n        if (!request.new_email_verified) {\r\n            throw new Error('\u65B0\u90AE\u7BB1\u5C1A\u672A\u9A8C\u8BC1');\r\n        }\r\n\r\n        // \u5F00\u59CB\u6570\u636E\u5E93\u4E8B\u52A1\r\n        try {\r\n            // \u66F4\u65B0\u7528\u6237\u90AE\u7BB1\r\n            await this.env.DB.prepare(`\r\n                UPDATE users SET email = ?, updated_at = ? WHERE id = ?\r\n            `).bind(request.new_email, Date.now(), userId).run();\r\n\r\n            // \u6807\u8BB0\u8BF7\u6C42\u4E3A\u5B8C\u6210\r\n            await this.env.DB.prepare(`\r\n                UPDATE email_change_requests \r\n                SET status = 'completed', completed_at = ?\r\n                WHERE id = ?\r\n            `).bind(Date.now(), requestId).run();\r\n\r\n            return {\r\n                success: true,\r\n                newEmail: request.new_email,\r\n                message: '\u90AE\u7BB1\u66F4\u6539\u6210\u529F'\r\n            };\r\n\r\n        } catch (error) {\r\n            console.error('\u5B8C\u6210\u90AE\u7BB1\u66F4\u6539\u5931\u8D25:', error);\r\n            throw new Error('\u90AE\u7BB1\u66F4\u6539\u5931\u8D25');\r\n        }\r\n    }\r\n\r\n    // \u6807\u8BB0\u90AE\u7BB1\u66F4\u6539\u8BF7\u6C42\u4E2D\u7684\u9A8C\u8BC1\u4E3A\u5B8C\u6210\r\n    async markEmailVerificationCompleted(requestId, verificationType) {\r\n        const updateField = verificationType === 'email_change_old' ? \r\n            'old_email_verified = 1' : 'new_email_verified = 1';\r\n\r\n        await this.env.DB.prepare(`\r\n            UPDATE email_change_requests \r\n            SET ${updateField}, updated_at = ?\r\n            WHERE id = ?\r\n        `).bind(Date.now(), requestId).run();\r\n    }\r\n\r\n    // \u83B7\u53D6\u90AE\u7BB1\u9A8C\u8BC1\u7EDF\u8BA1\r\n    async getVerificationStats(timeRange = 'day') {\r\n        const timeMap = {\r\n            day: Date.now() - 86400000,\r\n            week: Date.now() - 604800000,\r\n            month: Date.now() - 2592000000\r\n        };\r\n\r\n        const since = timeMap[timeRange] || timeMap.day;\r\n\r\n        const stats = await this.env.DB.prepare(`\r\n            SELECT \r\n                verification_type,\r\n                status,\r\n                COUNT(*) as count\r\n            FROM email_verifications \r\n            WHERE created_at > ?\r\n            GROUP BY verification_type, status\r\n        `).bind(since).all();\r\n\r\n        const emailStats = await this.env.DB.prepare(`\r\n            SELECT \r\n                send_status,\r\n                COUNT(*) as count\r\n            FROM email_send_logs \r\n            WHERE created_at > ?\r\n            GROUP BY send_status\r\n        `).bind(since).all();\r\n\r\n        return {\r\n            verifications: stats.results,\r\n            emails: emailStats.results,\r\n            period: timeRange\r\n        };\r\n    }\r\n    \r\n    // \u5728 sendVerificationEmail \u65B9\u6CD5\u4E2D\uFF0C\u6DFB\u52A0\u7C7B\u578B\u6620\u5C04\u51FD\u6570\r\n    getTemplateType(verificationType) {\r\n        const mapping = {\r\n            'registration': 'registration',\r\n            'password_reset': 'password_reset',\r\n            'forgot_password': 'password_reset',  // \u65B0\u589E\uFF1A\u5FD8\u8BB0\u5BC6\u7801\u6620\u5C04\u5230\u5BC6\u7801\u91CD\u7F6E\u6A21\u677F\r\n            'email_change_old': 'email_change',\r\n            'email_change_new': 'email_change', \r\n            'account_delete': 'account_delete'\r\n        };\r\n        return mapping[verificationType] || verificationType;\r\n    }\r\n\r\n    // \u65B0\u589E\uFF1A\u68C0\u67E5\u7528\u6237\u662F\u5426\u5B58\u5728\u4E14\u6FC0\u6D3B\uFF08\u7528\u4E8E\u5FD8\u8BB0\u5BC6\u7801\u529F\u80FD\uFF09\r\n    async getUserByEmail(email) {\r\n        const normalizedEmail = emailVerificationUtils.normalizeEmail(email);\r\n        return await this.env.DB.prepare(`\r\n            SELECT id, username, email, is_active \r\n            FROM users \r\n            WHERE email = ?\r\n        `).bind(normalizedEmail).first();\r\n    }\r\n\r\n    // \u65B0\u589E\uFF1A\u521B\u5EFA\u5FD8\u8BB0\u5BC6\u7801\u9A8C\u8BC1\u8BB0\u5F55\u7684\u8F85\u52A9\u65B9\u6CD5\r\n    async createForgotPasswordVerification(email, ipAddress) {\r\n        const user = await this.getUserByEmail(email);\r\n        if (!user || !user.is_active) {\r\n            // \u4E3A\u4E86\u5B89\u5168\uFF0C\u4E0D\u900F\u9732\u7528\u6237\u662F\u5426\u5B58\u5728\r\n            return null;\r\n        }\r\n\r\n        const verification = await this.createEmailVerification(\r\n            email, 'forgot_password', user.id, { \r\n                ipAddress,\r\n                requestedAt: Date.now()\r\n            }\r\n        );\r\n\r\n        return {\r\n            verification,\r\n            user\r\n        };\r\n    }\r\n\r\n    // \u65B0\u589E\uFF1A\u9A8C\u8BC1\u5FD8\u8BB0\u5BC6\u7801\u9A8C\u8BC1\u7801\u5E76\u83B7\u53D6\u7528\u6237\u4FE1\u606F\r\n    async verifyForgotPasswordCode(email, verificationCode) {\r\n        const user = await this.getUserByEmail(email);\r\n        if (!user || !user.is_active) {\r\n            throw new Error('\u7528\u6237\u4E0D\u5B58\u5728\u6216\u5DF2\u88AB\u7981\u7528');\r\n        }\r\n\r\n        const result = await this.verifyCode(email, verificationCode, 'forgot_password', user.id);\r\n        \r\n        return {\r\n            ...result,\r\n            userId: user.id,\r\n            username: user.username\r\n        };\r\n    }\r\n\r\n    // \u65B0\u589E\uFF1A\u6E05\u7406\u65E7\u7684\u9A8C\u8BC1\u8BB0\u5F55\uFF08\u907F\u514D\u6570\u636E\u5E93\u8FC7\u5927\uFF09\r\n    async cleanupOldVerifications(daysOld = 7) {\r\n        const cutoffTime = Date.now() - (daysOld * 24 * 60 * 60 * 1000);\r\n        \r\n        const deleted = await this.env.DB.prepare(`\r\n            DELETE FROM email_verifications \r\n            WHERE created_at < ? AND status IN ('used', 'expired', 'failed')\r\n        `).bind(cutoffTime).run();\r\n\r\n        return deleted.changes || 0;\r\n    }\r\n}\r\n\r\n// \u90AE\u7BB1\u9A8C\u8BC1\u5DE5\u5177\u51FD\u6570\r\nexport const emailVerificationUtils = {\r\n    // \u9A8C\u8BC1\u90AE\u7BB1\u683C\u5F0F\r\n    isValidEmail(email) {\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        return emailRegex.test(email);\r\n    },\r\n\r\n    // \u68C0\u67E5\u662F\u5426\u4E3A\u4E34\u65F6\u90AE\u7BB1\r\n    isTempEmail(email) {\r\n        const tempDomains = [\r\n            '10minutemail.com', 'guerrillamail.com', 'tempmail.org',\r\n            'temp-mail.org', 'throwaway.email', 'mailinator.com',\r\n            'yopmail.com', 'maildrop.cc', 'tempail.com', '10min.email',\r\n            'sharklasers.com', 'guerrillamailblock.com', 'pokemail.net',\r\n            'spam4.me', 'bccto.me', 'chacuo.net', 'dispostable.com',\r\n            'tempinbox.com', 'mohmal.com', 'emailondeck.com'\r\n        ];\r\n        \r\n        const domain = email.split('@')[1]?.toLowerCase();\r\n        return tempDomains.includes(domain);\r\n    },\r\n\r\n    // \u6807\u51C6\u5316\u90AE\u7BB1\u5730\u5740\r\n    normalizeEmail(email) {\r\n        return email.toLowerCase().trim();\r\n    },\r\n\r\n    // \u751F\u6210\u90AE\u7BB1\u63A9\u7801\uFF08\u7528\u4E8E\u663E\u793A\uFF09\r\n    maskEmail(email) {\r\n        const [localPart, domain] = email.split('@');\r\n        if (localPart.length <= 2) {\r\n            return `${localPart[0]}***@${domain}`;\r\n        }\r\n        const masked = localPart[0] + '*'.repeat(localPart.length - 2) + localPart[localPart.length - 1];\r\n        return `${masked}@${domain}`;\r\n    },\r\n\r\n    // \u9A8C\u8BC1\u9A8C\u8BC1\u7801\u683C\u5F0F\r\n    isValidVerificationCode(code) {\r\n        return /^\\d{6}$/.test(code);\r\n    },\r\n\r\n    // \u68C0\u67E5\u90AE\u7BB1\u57DF\u540D\u662F\u5426\u53EF\u4FE1\r\n    isTrustedEmailDomain(email) {\r\n        const trustedDomains = [\r\n            'gmail.com', 'outlook.com', 'hotmail.com', 'yahoo.com',\r\n            'qq.com', '163.com', '126.com', 'sina.com', 'sohu.com',\r\n            'foxmail.com', '139.com', 'yeah.net'\r\n        ];\r\n        \r\n        const domain = email.split('@')[1]?.toLowerCase();\r\n        return trustedDomains.includes(domain);\r\n    },\r\n\r\n    // \u751F\u6210\u5B89\u5168\u7684\u90AE\u7BB1\u94FE\u63A5\uFF08\u7528\u4E8E\u90AE\u4EF6\u4E2D\u7684\u94FE\u63A5\uFF09\r\n    generateSecureEmailLink(baseUrl, action, token) {\r\n        return `${baseUrl}/email/${action}?token=${encodeURIComponent(token)}`;\r\n    }\r\n};", "// src/handlers/auth.js - \u6269\u5C55\u7248\u672C\uFF0C\u6DFB\u52A0\u9A8C\u8BC1\u72B6\u6001\u68C0\u67E5API\r\nimport { utils } from '../utils.js';\r\nimport { authenticate } from '../middleware.js';\r\nimport { EmailVerificationService, emailVerificationUtils } from '../services/email-verification.js';\r\n\r\n// \uD83C\uDD95 \u65B0\u589E\uFF1A\u68C0\u67E5\u7528\u6237\u9A8C\u8BC1\u72B6\u6001\r\nexport async function authCheckVerificationStatusHandler(request, env) {\r\n    try {\r\n        const url = new URL(request.url);\r\n        const email = url.searchParams.get('email');\r\n        const verificationType = url.searchParams.get('type');\r\n        const userId = url.searchParams.get('userId'); // \u53EF\u9009\uFF0C\u7528\u4E8E\u5DF2\u767B\u5F55\u7528\u6237\r\n\r\n        if (!email || !verificationType) {\r\n            return utils.errorResponse('\u7F3A\u5C11\u5FC5\u8981\u53C2\u6570\uFF1Aemail \u548C type');\r\n        }\r\n\r\n        if (!emailVerificationUtils.isValidEmail(email)) {\r\n            return utils.errorResponse('\u90AE\u7BB1\u683C\u5F0F\u4E0D\u6B63\u786E');\r\n        }\r\n\r\n        const normalizedEmail = emailVerificationUtils.normalizeEmail(email);\r\n        const emailService = new EmailVerificationService(env);\r\n\r\n        // \u68C0\u67E5\u9A8C\u8BC1\u72B6\u6001\r\n        const verificationState = await emailService.getVerificationStateForFrontend(\r\n            normalizedEmail, verificationType, userId\r\n        );\r\n\r\n        return utils.successResponse({\r\n            message: '\u9A8C\u8BC1\u72B6\u6001\u67E5\u8BE2\u6210\u529F',\r\n            ...verificationState\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u68C0\u67E5\u9A8C\u8BC1\u72B6\u6001\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u68C0\u67E5\u9A8C\u8BC1\u72B6\u6001\u5931\u8D25', 500);\r\n    }\r\n}\r\n\r\n// \uD83C\uDD95 \u65B0\u589E\uFF1A\u83B7\u53D6\u5DF2\u767B\u5F55\u7528\u6237\u7684\u6240\u6709\u5F85\u9A8C\u8BC1\u72B6\u6001\r\nexport async function authGetUserVerificationStatusHandler(request, env) {\r\n    try {\r\n        const user = await authenticate(request, env);\r\n        if (!user) return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n\r\n        const emailService = new EmailVerificationService(env);\r\n        \r\n        // \u83B7\u53D6\u7528\u6237\u6240\u6709\u5F85\u9A8C\u8BC1\u72B6\u6001\r\n        const pendingVerifications = await emailService.getUserPendingVerifications(user.id);\r\n        const emailChangeRequest = await emailService.getPendingEmailChangeRequest(user.id);\r\n\r\n        return utils.successResponse({\r\n            message: '\u7528\u6237\u9A8C\u8BC1\u72B6\u6001\u67E5\u8BE2\u6210\u529F',\r\n            pendingVerifications,\r\n            emailChangeRequest,\r\n            hasAnyPendingVerifications: pendingVerifications.length > 0 || !!emailChangeRequest\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u7528\u6237\u9A8C\u8BC1\u72B6\u6001\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u83B7\u53D6\u7528\u6237\u9A8C\u8BC1\u72B6\u6001\u5931\u8D25', 500);\r\n    }\r\n}\r\n\r\n// \uD83C\uDD95 \u65B0\u589E\uFF1A\u667A\u80FD\u53D1\u9001\u9A8C\u8BC1\u7801\uFF08\u68C0\u67E5\u662F\u5426\u5DF2\u6709\u5F85\u9A8C\u8BC1\u7801\uFF09\r\nexport async function authSmartSendVerificationCodeHandler(request, env) {\r\n    try {\r\n        const body = await request.json().catch(() => ({}));\r\n        const { email, verificationType, force = false } = body;\r\n        \r\n        // \u6839\u636E\u9A8C\u8BC1\u7C7B\u578B\uFF0C\u53EF\u80FD\u9700\u8981\u7528\u6237\u8BA4\u8BC1\r\n        let user = null;\r\n        if (['password_reset', 'email_change', 'account_delete'].includes(verificationType)) {\r\n            user = await authenticate(request, env);\r\n            if (!user) return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n        }\r\n\r\n        if (!email || !verificationType) {\r\n            return utils.errorResponse('\u7F3A\u5C11\u5FC5\u8981\u53C2\u6570');\r\n        }\r\n\r\n        if (!emailVerificationUtils.isValidEmail(email)) {\r\n            return utils.errorResponse('\u90AE\u7BB1\u683C\u5F0F\u4E0D\u6B63\u786E');\r\n        }\r\n\r\n        const normalizedEmail = emailVerificationUtils.normalizeEmail(email);\r\n        const emailService = new EmailVerificationService(env);\r\n\r\n        // \u5982\u679C\u4E0D\u662F\u5F3A\u5236\u53D1\u9001\uFF0C\u5148\u68C0\u67E5\u662F\u5426\u5DF2\u6709\u5F85\u9A8C\u8BC1\u7801\r\n        if (!force) {\r\n            const canResend = await emailService.canResendVerification(\r\n                normalizedEmail, verificationType, user?.id\r\n            );\r\n\r\n            if (!canResend.canResend) {\r\n                return utils.successResponse({\r\n                    message: '\u5B58\u5728\u6709\u6548\u7684\u9A8C\u8BC1\u7801',\r\n                    canResend: false,\r\n                    reason: canResend.reason,\r\n                    waitTime: canResend.waitTime,\r\n                    existingVerification: canResend.existingVerification\r\n                });\r\n            }\r\n        }\r\n\r\n        // \u6839\u636E\u9A8C\u8BC1\u7C7B\u578B\u8C03\u7528\u76F8\u5E94\u7684\u53D1\u9001\u65B9\u6CD5\r\n        let result;\r\n        switch (verificationType) {\r\n            case 'registration':\r\n                result = await sendRegistrationCodeInternal(normalizedEmail, env);\r\n                break;\r\n            case 'forgot_password':\r\n                result = await sendForgotPasswordCodeInternal(normalizedEmail, env, request);\r\n                break;\r\n            case 'password_reset':\r\n                result = await sendPasswordResetCodeInternal(user, env, request);\r\n                break;\r\n            case 'email_change_new':\r\n            case 'email_change_old':\r\n                // \u90AE\u7BB1\u66F4\u6539\u9700\u8981\u7279\u6B8A\u5904\u7406\r\n                const changeRequest = await emailService.getPendingEmailChangeRequest(user.id);\r\n                if (!changeRequest) {\r\n                    return utils.errorResponse('\u6CA1\u6709\u8FDB\u884C\u4E2D\u7684\u90AE\u7BB1\u66F4\u6539\u8BF7\u6C42');\r\n                }\r\n                const targetEmail = verificationType === 'email_change_old' ? \r\n                    changeRequest.oldEmail : changeRequest.newEmail;\r\n                result = await sendEmailChangeCodeInternal(\r\n                    changeRequest.id, verificationType, targetEmail, user, env, request\r\n                );\r\n                break;\r\n            case 'account_delete':\r\n                result = await sendAccountDeleteCodeInternal(user, env, request);\r\n                break;\r\n            default:\r\n                return utils.errorResponse('\u4E0D\u652F\u6301\u7684\u9A8C\u8BC1\u7C7B\u578B');\r\n        }\r\n\r\n        return result;\r\n\r\n    } catch (error) {\r\n        console.error('\u667A\u80FD\u53D1\u9001\u9A8C\u8BC1\u7801\u5931\u8D25:', error);\r\n        return utils.errorResponse(error.message || '\u9A8C\u8BC1\u7801\u53D1\u9001\u5931\u8D25');\r\n    }\r\n}\r\n\r\n// \u5185\u90E8\u65B9\u6CD5\uFF1A\u53D1\u9001\u6CE8\u518C\u9A8C\u8BC1\u7801\r\nasync function sendRegistrationCodeInternal(email, env) {\r\n    // \u68C0\u67E5\u90AE\u7BB1\u662F\u5426\u5DF2\u6CE8\u518C\r\n    const existingUser = await env.DB.prepare(`\r\n        SELECT id FROM users WHERE email = ?\r\n    `).bind(email).first();\r\n\r\n    if (existingUser) {\r\n        throw new Error('\u8BE5\u90AE\u7BB1\u5DF2\u88AB\u6CE8\u518C');\r\n    }\r\n\r\n    // \u68C0\u67E5\u4E34\u65F6\u90AE\u7BB1\r\n    if (emailVerificationUtils.isTempEmail(email)) {\r\n        throw new Error('\u4E0D\u652F\u6301\u4E34\u65F6\u90AE\u7BB1\uFF0C\u8BF7\u4F7F\u7528\u5E38\u7528\u90AE\u7BB1');\r\n    }\r\n\r\n    const emailService = new EmailVerificationService(env);\r\n    const ipAddress = '127.0.0.1'; // \u8FD9\u91CC\u5E94\u8BE5\u4ECE\u8BF7\u6C42\u4E2D\u83B7\u53D6\u771F\u5B9EIP\r\n\r\n    // \u68C0\u67E5\u53D1\u9001\u9891\u7387\u9650\u5236\r\n    await emailService.checkEmailRateLimit(email, ipAddress);\r\n\r\n    // \u521B\u5EFA\u9A8C\u8BC1\u8BB0\u5F55\r\n    const verification = await emailService.createEmailVerification(\r\n        email, 'registration', null, { ipAddress }\r\n    );\r\n\r\n    // \u53D1\u9001\u9A8C\u8BC1\u90AE\u4EF6\r\n    await emailService.sendVerificationEmail(\r\n        email, \r\n        verification.code, \r\n        'registration',\r\n        { username: '\u65B0\u7528\u6237' }\r\n    );\r\n\r\n    return utils.successResponse({\r\n        message: `\u9A8C\u8BC1\u7801\u5DF2\u53D1\u9001\u5230 ${emailVerificationUtils.maskEmail(email)}`,\r\n        maskedEmail: emailVerificationUtils.maskEmail(email),\r\n        expiresAt: verification.expiresAt\r\n    });\r\n}\r\n\r\n// \u5185\u90E8\u65B9\u6CD5\uFF1A\u53D1\u9001\u5FD8\u8BB0\u5BC6\u7801\u9A8C\u8BC1\u7801\r\nasync function sendForgotPasswordCodeInternal(email, env, request) {\r\n    const user = await env.DB.prepare(`\r\n        SELECT id, username, email FROM users WHERE email = ? AND is_active = 1\r\n    `).bind(email).first();\r\n\r\n    if (!user) {\r\n        // \u4E3A\u4E86\u5B89\u5168\uFF0C\u4E0D\u900F\u9732\u7528\u6237\u662F\u5426\u5B58\u5728\uFF0C\u603B\u662F\u8FD4\u56DE\u6210\u529F\r\n        return utils.successResponse({\r\n            message: `\u5982\u679C\u8BE5\u90AE\u7BB1\u5DF2\u6CE8\u518C\uFF0C\u6211\u4EEC\u5DF2\u5411 ${emailVerificationUtils.maskEmail(email)} \u53D1\u9001\u5BC6\u7801\u91CD\u7F6E\u9A8C\u8BC1\u7801`,\r\n            maskedEmail: emailVerificationUtils.maskEmail(email)\r\n        });\r\n    }\r\n\r\n    const emailService = new EmailVerificationService(env);\r\n    const ipAddress = utils.getClientIP(request);\r\n\r\n    try {\r\n        // \u68C0\u67E5\u53D1\u9001\u9891\u7387\u9650\u5236\r\n        await emailService.checkEmailRateLimit(email, ipAddress);\r\n\r\n        // \u521B\u5EFA\u9A8C\u8BC1\u8BB0\u5F55\r\n        const verification = await emailService.createEmailVerification(\r\n            email, 'forgot_password', user.id, { \r\n                ipAddress,\r\n                requestedAt: Date.now()\r\n            }\r\n        );\r\n\r\n        // \u53D1\u9001\u9A8C\u8BC1\u90AE\u4EF6\r\n        await emailService.sendVerificationEmail(\r\n            email, \r\n            verification.code, \r\n            'password_reset',\r\n            { username: user.username }\r\n        );\r\n\r\n        await utils.logUserAction(env, user.id, 'password_reset_request', {\r\n            method: 'email_verification',\r\n            ipAddress\r\n        }, request);\r\n\r\n    } catch (error) {\r\n        console.error('\u53D1\u9001\u5BC6\u7801\u91CD\u7F6E\u9A8C\u8BC1\u7801\u5931\u8D25:', error);\r\n        // \u5373\u4F7F\u53D1\u9001\u5931\u8D25\uFF0C\u4E5F\u4E0D\u900F\u9732\u9519\u8BEF\u8BE6\u60C5\r\n    }\r\n\r\n    return utils.successResponse({\r\n        message: `\u5982\u679C\u8BE5\u90AE\u7BB1\u5DF2\u6CE8\u518C\uFF0C\u6211\u4EEC\u5DF2\u5411 ${emailVerificationUtils.maskEmail(email)} \u53D1\u9001\u5BC6\u7801\u91CD\u7F6E\u9A8C\u8BC1\u7801`,\r\n        maskedEmail: emailVerificationUtils.maskEmail(email)\r\n    });\r\n}\r\n\r\n// \u5185\u90E8\u65B9\u6CD5\uFF1A\u53D1\u9001\u5BC6\u7801\u91CD\u7F6E\u9A8C\u8BC1\u7801\uFF08\u5DF2\u767B\u5F55\u7528\u6237\uFF09\r\nasync function sendPasswordResetCodeInternal(user, env, request) {\r\n    const userRecord = await env.DB.prepare(`\r\n        SELECT * FROM users WHERE id = ?\r\n    `).bind(user.id).first();\r\n\r\n    if (!userRecord) {\r\n        throw new Error('\u7528\u6237\u4E0D\u5B58\u5728');\r\n    }\r\n\r\n    const emailService = new EmailVerificationService(env);\r\n    const ipAddress = utils.getClientIP(request);\r\n\r\n    // \u68C0\u67E5\u53D1\u9001\u9891\u7387\u9650\u5236\r\n    await emailService.checkEmailRateLimit(userRecord.email, ipAddress);\r\n\r\n    // \u521B\u5EFA\u9A8C\u8BC1\u8BB0\u5F55\r\n    const verification = await emailService.createEmailVerification(\r\n        userRecord.email, 'password_reset', user.id, { ipAddress }\r\n    );\r\n\r\n    // \u53D1\u9001\u9A8C\u8BC1\u90AE\u4EF6\r\n    await emailService.sendVerificationEmail(\r\n        userRecord.email, \r\n        verification.code, \r\n        'password_reset',\r\n        { username: userRecord.username }\r\n    );\r\n\r\n    return utils.successResponse({\r\n        message: `\u9A8C\u8BC1\u7801\u5DF2\u53D1\u9001\u5230 ${emailVerificationUtils.maskEmail(userRecord.email)}`,\r\n        maskedEmail: emailVerificationUtils.maskEmail(userRecord.email),\r\n        expiresAt: verification.expiresAt\r\n    });\r\n}\r\n\r\n// \u5185\u90E8\u65B9\u6CD5\uFF1A\u53D1\u9001\u90AE\u7BB1\u66F4\u6539\u9A8C\u8BC1\u7801\r\nasync function sendEmailChangeCodeInternal(requestId, emailType, targetEmail, user, env, request) {\r\n    const emailService = new EmailVerificationService(env);\r\n    const verificationType = emailType === 'email_change_old' ? 'email_change_old' : 'email_change_new';\r\n    const ipAddress = utils.getClientIP(request);\r\n\r\n    // \u68C0\u67E5\u53D1\u9001\u9891\u7387\u9650\u5236\r\n    await emailService.checkEmailRateLimit(targetEmail, ipAddress);\r\n\r\n    // \u521B\u5EFA\u9A8C\u8BC1\u8BB0\u5F55\r\n    const verification = await emailService.createEmailVerification(\r\n        targetEmail, verificationType, user.id, { \r\n            requestId, \r\n            emailType,\r\n            ipAddress \r\n        }\r\n    );\r\n\r\n    // \u83B7\u53D6\u7528\u6237\u4FE1\u606F\r\n    const userRecord = await env.DB.prepare(`\r\n        SELECT username FROM users WHERE id = ?\r\n    `).bind(user.id).first();\r\n\r\n    // \u83B7\u53D6\u90AE\u7BB1\u66F4\u6539\u8BF7\u6C42\u8BE6\u60C5\r\n    const changeRequest = await env.DB.prepare(`\r\n        SELECT * FROM email_change_requests WHERE id = ?\r\n    `).bind(requestId).first();\r\n\r\n    // \u53D1\u9001\u9A8C\u8BC1\u90AE\u4EF6\r\n    await emailService.sendVerificationEmail(\r\n        targetEmail, \r\n        verification.code, \r\n        'email_change',\r\n        { \r\n            username: userRecord.username,\r\n            oldEmail: changeRequest.old_email,\r\n            newEmail: changeRequest.new_email\r\n        }\r\n    );\r\n\r\n    return utils.successResponse({\r\n        message: `\u9A8C\u8BC1\u7801\u5DF2\u53D1\u9001\u5230 ${emailVerificationUtils.maskEmail(targetEmail)}`,\r\n        maskedEmail: emailVerificationUtils.maskEmail(targetEmail),\r\n        emailType,\r\n        expiresAt: verification.expiresAt\r\n    });\r\n}\r\n\r\n// \u5185\u90E8\u65B9\u6CD5\uFF1A\u53D1\u9001\u8D26\u6237\u5220\u9664\u9A8C\u8BC1\u7801\r\nasync function sendAccountDeleteCodeInternal(user, env, request) {\r\n    const userRecord = await env.DB.prepare(`\r\n        SELECT * FROM users WHERE id = ?\r\n    `).bind(user.id).first();\r\n\r\n    if (!userRecord) {\r\n        throw new Error('\u7528\u6237\u4E0D\u5B58\u5728');\r\n    }\r\n\r\n    const emailService = new EmailVerificationService(env);\r\n    const ipAddress = utils.getClientIP(request);\r\n\r\n    // \u68C0\u67E5\u53D1\u9001\u9891\u7387\u9650\u5236\r\n    await emailService.checkEmailRateLimit(userRecord.email, ipAddress);\r\n\r\n    // \u521B\u5EFA\u9A8C\u8BC1\u8BB0\u5F55\r\n    const verification = await emailService.createEmailVerification(\r\n        userRecord.email, 'account_delete', user.id, { ipAddress }\r\n    );\r\n\r\n    // \u53D1\u9001\u9A8C\u8BC1\u90AE\u4EF6\r\n    await emailService.sendVerificationEmail(\r\n        userRecord.email, \r\n        verification.code, \r\n        'account_delete',\r\n        { username: userRecord.username }\r\n    );\r\n\r\n    return utils.successResponse({\r\n        message: `\u9A8C\u8BC1\u7801\u5DF2\u53D1\u9001\u5230 ${emailVerificationUtils.maskEmail(userRecord.email)}`,\r\n        maskedEmail: emailVerificationUtils.maskEmail(userRecord.email),\r\n        expiresAt: verification.expiresAt\r\n    });\r\n}\r\n\r\n// \u4EE5\u4E0B\u662F\u539F\u6709\u7684\u5904\u7406\u5668\uFF08\u4FDD\u6301\u4E0D\u53D8\uFF09...\r\n\r\n// \u7528\u6237\u6CE8\u518C\uFF08\u96C6\u6210\u90AE\u7BB1\u9A8C\u8BC1\uFF09\r\nexport async function authRegisterHandler(request, env) {\r\n    try {\r\n        const body = await request.json().catch(() => ({}));\r\n        const { username, email, password, verificationCode } = body;\r\n\r\n        // \u521D\u59CB\u5316\u90AE\u7BB1\u9A8C\u8BC1\u72B6\u6001\r\n        let emailVerified = 0;\r\n\r\n        const errors = utils.validateInput({ username, email, password }, {\r\n            username: { \r\n                required: true, \r\n                minLength: 3, \r\n                maxLength: 20,\r\n                pattern: /^[a-zA-Z0-9_]+$/,\r\n                message: '\u7528\u6237\u540D\u53EA\u80FD\u5305\u542B\u5B57\u6BCD\u3001\u6570\u5B57\u548C\u4E0B\u5212\u7EBF'\r\n            },\r\n            email: { \r\n                required: true,\r\n                pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                message: '\u90AE\u7BB1\u683C\u5F0F\u4E0D\u6B63\u786E'\r\n            },\r\n            password: { \r\n                required: true, \r\n                minLength: 6,\r\n                maxLength: 50\r\n            }\r\n        });\r\n\r\n        if (errors.length > 0) {\r\n            return utils.errorResponse(errors[0]);\r\n        }\r\n\r\n        // \u6807\u51C6\u5316\u90AE\u7BB1\r\n        const normalizedEmail = emailVerificationUtils.normalizeEmail(email);\r\n\r\n        // \u68C0\u67E5\u4E34\u65F6\u90AE\u7BB1\r\n        if (emailVerificationUtils.isTempEmail(normalizedEmail)) {\r\n            return utils.errorResponse('\u4E0D\u652F\u6301\u4E34\u65F6\u90AE\u7BB1\uFF0C\u8BF7\u4F7F\u7528\u5E38\u7528\u90AE\u7BB1\u6CE8\u518C');\r\n        }\r\n\r\n        // \u68C0\u67E5\u7528\u6237\u540D\u548C\u90AE\u7BB1\u662F\u5426\u5DF2\u5B58\u5728\r\n        const existingUser = await env.DB.prepare(`\r\n            SELECT id FROM users WHERE username = ? OR email = ?\r\n        `).bind(username, normalizedEmail).first();\r\n\r\n        if (existingUser) {\r\n            return utils.errorResponse('\u7528\u6237\u540D\u6216\u90AE\u7BB1\u5DF2\u5B58\u5728');\r\n        }\r\n\r\n        const emailService = new EmailVerificationService(env);\r\n        const isEmailVerificationRequired = env.EMAIL_VERIFICATION_REQUIRED === 'true';\r\n\r\n        // \u5982\u679C\u542F\u7528\u4E86\u90AE\u7BB1\u9A8C\u8BC1\u4E14\u63D0\u4F9B\u4E86\u9A8C\u8BC1\u7801\r\n        if (isEmailVerificationRequired && verificationCode) {\r\n            try {\r\n                await emailService.verifyCode(normalizedEmail, verificationCode, 'registration');\r\n                // \u521B\u5EFA\u7528\u6237\u65F6\u76F4\u63A5\u8BBE\u7F6E\u4E3A\u5DF2\u9A8C\u8BC1\r\n                emailVerified = 1;\r\n            } catch (error) {\r\n                return utils.errorResponse(error.message);\r\n            }\r\n        }\r\n\r\n        const userId = utils.generateId();\r\n        const passwordHash = await utils.hashPassword(password);\r\n        const now = Date.now();\r\n\r\n        // \u521B\u5EFA\u7528\u6237\u8D26\u6237\r\n        await env.DB.prepare(`\r\n            INSERT INTO users (\r\n                id, username, email, password_hash, email_verified,\r\n                created_at, updated_at\r\n            ) VALUES (?, ?, ?, ?, ?, ?, ?)\r\n        `).bind(\r\n            userId, username, normalizedEmail, passwordHash, emailVerified,\r\n            now, now\r\n        ).run();\r\n\r\n        await utils.logUserAction(env, userId, 'register', { \r\n            emailVerified: Boolean(emailVerified)\r\n        }, request);\r\n\r\n        return utils.successResponse({ \r\n            message: '\u6CE8\u518C\u6210\u529F',\r\n            user: { \r\n                id: userId, \r\n                username, \r\n                email: normalizedEmail,\r\n                emailVerified: Boolean(emailVerified)\r\n            },\r\n            requiresEmailVerification: isEmailVerificationRequired && !verificationCode\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u6CE8\u518C\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u6CE8\u518C\u5931\u8D25\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5', 500);\r\n    }\r\n}\r\n\r\n// \u7528\u6237\u767B\u5F55\uFF08\u652F\u6301\u7528\u6237\u540D\u6216\u90AE\u7BB1\u767B\u5F55\uFF09\r\nexport async function authLoginHandler(request, env) {\r\n    try {\r\n        const body = await request.json().catch(() => ({}));\r\n        const { identifier, password } = body; // \u6539\u7528identifier\u652F\u6301\u7528\u6237\u540D\u6216\u90AE\u7BB1\r\n\r\n        const errors = utils.validateInput({ identifier, password }, {\r\n            identifier: { required: true, maxLength: 50 },\r\n            password: { required: true, maxLength: 50 }\r\n        });\r\n\r\n        if (errors.length > 0) {\r\n            return utils.errorResponse(errors[0], 400);\r\n        }\r\n\r\n        // \u5224\u65AD\u662F\u90AE\u7BB1\u8FD8\u662F\u7528\u6237\u540D\u767B\u5F55\r\n        const isEmail = emailVerificationUtils.isValidEmail(identifier);\r\n        const normalizedIdentifier = isEmail ? \r\n            emailVerificationUtils.normalizeEmail(identifier) : identifier;\r\n\r\n        // \u6839\u636E\u6807\u8BC6\u7B26\u7C7B\u578B\u67E5\u8BE2\u7528\u6237\r\n        const user = await env.DB.prepare(`\r\n            SELECT * FROM users WHERE ${isEmail ? 'email' : 'username'} = ?\r\n        `).bind(normalizedIdentifier).first();\r\n\r\n        if (!user) {\r\n            return utils.errorResponse('\u7528\u6237\u540D/\u90AE\u7BB1\u6216\u5BC6\u7801\u9519\u8BEF', 401);\r\n        }\r\n\r\n        const passwordHash = await utils.hashPassword(password);\r\n        if (passwordHash !== user.password_hash) {\r\n            return utils.errorResponse('\u7528\u6237\u540D/\u90AE\u7BB1\u6216\u5BC6\u7801\u9519\u8BEF', 401);\r\n        }\r\n\r\n        // \u68C0\u67E5\u7528\u6237\u662F\u5426\u88AB\u7981\u7528\r\n        if (!user.is_active) {\r\n            return utils.errorResponse('\u8D26\u6237\u5DF2\u88AB\u7981\u7528\uFF0C\u8BF7\u8054\u7CFB\u7BA1\u7406\u5458', 403);\r\n        }\r\n\r\n        const jwtSecret = env.JWT_SECRET;\r\n        if (!jwtSecret) {\r\n            console.error('JWT_SECRET \u73AF\u5883\u53D8\u91CF\u672A\u8BBE\u7F6E');\r\n            return utils.errorResponse('\u670D\u52A1\u5668\u914D\u7F6E\u9519\u8BEF', 500);\r\n        }\r\n\r\n        const expiryDays = parseInt(env.JWT_EXPIRY_DAYS || '30');\r\n        const expirySeconds = expiryDays * 24 * 60 * 60;\r\n\r\n        const payload = {\r\n            userId: user.id,\r\n            username: user.username,\r\n            iat: Math.floor(Date.now() / 1000),\r\n            exp: Math.floor(Date.now() / 1000) + expirySeconds\r\n        };\r\n\r\n        const token = await utils.generateJWT(payload, jwtSecret);\r\n        const tokenHash = await utils.hashPassword(token);\r\n\r\n        // \u6E05\u7406\u8FC7\u671F\u4F1A\u8BDD\r\n        await env.DB.prepare(`\r\n            DELETE FROM user_sessions WHERE user_id = ? AND expires_at < ?\r\n        `).bind(user.id, Date.now()).run();\r\n\r\n        const sessionId = utils.generateId();\r\n        const expiresAt = Date.now() + (expirySeconds * 1000);\r\n\r\n        await env.DB.prepare(`\r\n            INSERT INTO user_sessions (\r\n                id, user_id, token_hash, expires_at, created_at, \r\n                last_activity, ip_address, user_agent\r\n            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\r\n        `).bind(\r\n            sessionId, user.id, tokenHash, expiresAt, Date.now(), \r\n            Date.now(), utils.getClientIP(request), \r\n            request.headers.get('User-Agent') || ''\r\n        ).run();\r\n\r\n        // \u66F4\u65B0\u767B\u5F55\u7EDF\u8BA1\r\n        await env.DB.prepare(`\r\n            UPDATE users SET \r\n                last_login = ?, \r\n                login_count = login_count + 1 \r\n            WHERE id = ?\r\n        `).bind(Date.now(), user.id).run();\r\n\r\n        await utils.logUserAction(env, user.id, 'login', { \r\n            loginMethod: isEmail ? 'email' : 'username',\r\n            sessionId,\r\n            identifier: normalizedIdentifier\r\n        }, request);\r\n\r\n        return utils.successResponse({\r\n            message: '\u767B\u5F55\u6210\u529F',\r\n            token,\r\n            user: {\r\n                id: user.id,\r\n                username: user.username,\r\n                email: user.email,\r\n                emailVerified: Boolean(user.email_verified),\r\n                permissions: JSON.parse(user.permissions || '[]'),\r\n                settings: JSON.parse(user.settings || '{}')\r\n            }\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u767B\u5F55\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u767B\u5F55\u5931\u8D25\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5', 500);\r\n    }\r\n}\r\n\r\n// \u5FD8\u8BB0\u5BC6\u7801 - \u53D1\u9001\u91CD\u7F6E\u9A8C\u8BC1\u7801\r\nexport async function authForgotPasswordHandler(request, env) {\r\n    try {\r\n        const body = await request.json().catch(() => ({}));\r\n        const { email } = body;\r\n\r\n        if (!email || !emailVerificationUtils.isValidEmail(email)) {\r\n            return utils.errorResponse('\u8BF7\u8F93\u5165\u6709\u6548\u7684\u90AE\u7BB1\u5730\u5740');\r\n        }\r\n\r\n        const normalizedEmail = emailVerificationUtils.normalizeEmail(email);\r\n\r\n        // \u68C0\u67E5\u90AE\u7BB1\u662F\u5426\u5B58\u5728\r\n        const user = await env.DB.prepare(`\r\n            SELECT id, username, email FROM users WHERE email = ? AND is_active = 1\r\n        `).bind(normalizedEmail).first();\r\n\r\n        if (!user) {\r\n            // \u4E3A\u4E86\u5B89\u5168\uFF0C\u4E0D\u900F\u9732\u7528\u6237\u662F\u5426\u5B58\u5728\uFF0C\u603B\u662F\u8FD4\u56DE\u6210\u529F\r\n            return utils.successResponse({\r\n                message: `\u5982\u679C\u8BE5\u90AE\u7BB1\u5DF2\u6CE8\u518C\uFF0C\u6211\u4EEC\u5DF2\u5411 ${emailVerificationUtils.maskEmail(normalizedEmail)} \u53D1\u9001\u5BC6\u7801\u91CD\u7F6E\u9A8C\u8BC1\u7801`,\r\n                maskedEmail: emailVerificationUtils.maskEmail(normalizedEmail)\r\n            });\r\n        }\r\n\r\n        const emailService = new EmailVerificationService(env);\r\n        const ipAddress = utils.getClientIP(request);\r\n\r\n        try {\r\n            // \u68C0\u67E5\u53D1\u9001\u9891\u7387\u9650\u5236\r\n            await emailService.checkEmailRateLimit(normalizedEmail, ipAddress);\r\n\r\n            // \u521B\u5EFA\u9A8C\u8BC1\u8BB0\u5F55\r\n            const verification = await emailService.createEmailVerification(\r\n                normalizedEmail, 'forgot_password', user.id, { \r\n                    ipAddress,\r\n                    requestedAt: Date.now()\r\n                }\r\n            );\r\n\r\n            // \u53D1\u9001\u9A8C\u8BC1\u90AE\u4EF6\r\n            await emailService.sendVerificationEmail(\r\n                normalizedEmail, \r\n                verification.code, \r\n                'password_reset',\r\n                { username: user.username }\r\n            );\r\n\r\n            await utils.logUserAction(env, user.id, 'password_reset_request', {\r\n                method: 'email_verification',\r\n                ipAddress\r\n            }, request);\r\n\r\n        } catch (error) {\r\n            console.error('\u53D1\u9001\u5BC6\u7801\u91CD\u7F6E\u9A8C\u8BC1\u7801\u5931\u8D25:', error);\r\n            // \u5373\u4F7F\u53D1\u9001\u5931\u8D25\uFF0C\u4E5F\u4E0D\u900F\u9732\u9519\u8BEF\u8BE6\u60C5\r\n        }\r\n\r\n        return utils.successResponse({\r\n            message: `\u5982\u679C\u8BE5\u90AE\u7BB1\u5DF2\u6CE8\u518C\uFF0C\u6211\u4EEC\u5DF2\u5411 ${emailVerificationUtils.maskEmail(normalizedEmail)} \u53D1\u9001\u5BC6\u7801\u91CD\u7F6E\u9A8C\u8BC1\u7801`,\r\n            maskedEmail: emailVerificationUtils.maskEmail(normalizedEmail)\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u5FD8\u8BB0\u5BC6\u7801\u5904\u7406\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u670D\u52A1\u6682\u65F6\u4E0D\u53EF\u7528\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5', 500);\r\n    }\r\n}\r\n\r\n// \u91CD\u7F6E\u5BC6\u7801\uFF08\u4F7F\u7528\u9A8C\u8BC1\u7801\uFF09\r\nexport async function authResetPasswordHandler(request, env) {\r\n    try {\r\n        const body = await request.json().catch(() => ({}));\r\n        const { email, verificationCode, newPassword } = body;\r\n\r\n        const errors = utils.validateInput({ email, verificationCode, newPassword }, {\r\n            email: { \r\n                required: true,\r\n                pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                message: '\u90AE\u7BB1\u683C\u5F0F\u4E0D\u6B63\u786E'\r\n            },\r\n            verificationCode: { \r\n                required: true,\r\n                pattern: /^\\d{6}$/,\r\n                message: '\u9A8C\u8BC1\u7801\u5FC5\u987B\u662F6\u4F4D\u6570\u5B57'\r\n            },\r\n            newPassword: { \r\n                required: true, \r\n                minLength: 6,\r\n                maxLength: 50\r\n            }\r\n        });\r\n\r\n        if (errors.length > 0) {\r\n            return utils.errorResponse(errors[0]);\r\n        }\r\n\r\n        const normalizedEmail = emailVerificationUtils.normalizeEmail(email);\r\n\r\n        // \u68C0\u67E5\u7528\u6237\u662F\u5426\u5B58\u5728\u4E14\u6FC0\u6D3B\r\n        const user = await env.DB.prepare(`\r\n            SELECT * FROM users WHERE email = ? AND is_active = 1\r\n        `).bind(normalizedEmail).first();\r\n\r\n        if (!user) {\r\n            return utils.errorResponse('\u7528\u6237\u4E0D\u5B58\u5728\u6216\u5DF2\u88AB\u7981\u7528');\r\n        }\r\n\r\n        const emailService = new EmailVerificationService(env);\r\n\r\n        // \u9A8C\u8BC1\u90AE\u7BB1\u9A8C\u8BC1\u7801\r\n        try {\r\n            const verifyResult = await emailService.verifyCode(\r\n                normalizedEmail, verificationCode, 'forgot_password', user.id\r\n            );\r\n\r\n            if (!verifyResult.success) {\r\n                return utils.errorResponse('\u9A8C\u8BC1\u7801\u65E0\u6548\u6216\u5DF2\u8FC7\u671F');\r\n            }\r\n        } catch (error) {\r\n            return utils.errorResponse(error.message);\r\n        }\r\n\r\n        // \u66F4\u65B0\u5BC6\u7801\r\n        const newPasswordHash = await utils.hashPassword(newPassword);\r\n        await env.DB.prepare(`\r\n            UPDATE users SET \r\n                password_hash = ?, \r\n                updated_at = ? \r\n            WHERE id = ?\r\n        `).bind(newPasswordHash, Date.now(), user.id).run();\r\n\r\n        // \u6E05\u9664\u6240\u6709\u4F1A\u8BDD\uFF08\u5F3A\u5236\u91CD\u65B0\u767B\u5F55\uFF09\r\n        await env.DB.prepare(`\r\n            DELETE FROM user_sessions WHERE user_id = ?\r\n        `).bind(user.id).run();\r\n\r\n        await utils.logUserAction(env, user.id, 'password_reset', { \r\n            method: 'email_verification',\r\n            forced_relogin: true\r\n        }, request);\r\n\r\n        return utils.successResponse({ \r\n            message: '\u5BC6\u7801\u91CD\u7F6E\u6210\u529F\uFF0C\u8BF7\u4F7F\u7528\u65B0\u5BC6\u7801\u767B\u5F55',\r\n            requiresLogin: true\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u5BC6\u7801\u91CD\u7F6E\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u5BC6\u7801\u91CD\u7F6E\u5931\u8D25\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5', 500);\r\n    }\r\n}\r\n\r\n// \u5176\u4ED6\u539F\u6709\u5904\u7406\u5668\u4FDD\u6301\u4E0D\u53D8...\r\n// \uFF08\u8FD9\u91CC\u5305\u542B\u5176\u4ED6\u6240\u6709\u539F\u6709\u7684\u5904\u7406\u5668\u51FD\u6570\uFF0C\u5982\u4FEE\u6539\u5BC6\u7801\u3001\u90AE\u7BB1\u66F4\u6539\u3001\u8D26\u6237\u5220\u9664\u7B49\uFF09\r\n\r\nexport async function authChangePasswordHandler(request, env) {\r\n    try {\r\n        const user = await authenticate(request, env);\r\n        if (!user) return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n        \r\n        const body = await request.json();\r\n        const { currentPassword, newPassword, verificationCode } = body;\r\n        \r\n        if (!currentPassword || !newPassword) {\r\n            return utils.errorResponse('\u5F53\u524D\u5BC6\u7801\u548C\u65B0\u5BC6\u7801\u4E0D\u80FD\u4E3A\u7A7A');\r\n        }\r\n        \r\n        if (!verificationCode) {\r\n            return utils.errorResponse('\u8BF7\u5148\u83B7\u53D6\u90AE\u7BB1\u9A8C\u8BC1\u7801');\r\n        }\r\n\r\n        const userRecord = await env.DB.prepare(\r\n            `SELECT * FROM users WHERE id = ?`\r\n        ).bind(user.id).first();\r\n        \r\n        if (!userRecord) return utils.errorResponse('\u7528\u6237\u4E0D\u5B58\u5728', 404);\r\n        \r\n        // \u9A8C\u8BC1\u5F53\u524D\u5BC6\u7801\r\n        const currentHash = await utils.hashPassword(currentPassword);\r\n        if (currentHash !== userRecord.password_hash) {\r\n            return utils.errorResponse('\u5F53\u524D\u5BC6\u7801\u9519\u8BEF');\r\n        }\r\n\r\n        // \u9A8C\u8BC1\u90AE\u7BB1\u9A8C\u8BC1\u7801\r\n        const emailService = new EmailVerificationService(env);\r\n        try {\r\n            await emailService.verifyCode(userRecord.email, verificationCode, 'password_reset', user.id);\r\n        } catch (error) {\r\n            return utils.errorResponse(error.message);\r\n        }\r\n        \r\n        // \u66F4\u65B0\u5BC6\u7801\r\n        const newHash = await utils.hashPassword(newPassword);\r\n        await env.DB.prepare(\r\n            `UPDATE users SET password_hash = ?, updated_at = ? WHERE id = ?`\r\n        ).bind(newHash, Date.now(), user.id).run();\r\n        \r\n        // \u6E05\u9664\u6240\u6709\u4F1A\u8BDD\uFF08\u5F3A\u5236\u91CD\u65B0\u767B\u5F55\uFF09\r\n        await env.DB.prepare(\r\n            `DELETE FROM user_sessions WHERE user_id = ?`\r\n        ).bind(user.id).run();\r\n\r\n        await utils.logUserAction(env, user.id, 'password_change', { \r\n            method: 'email_verification' \r\n        }, request);\r\n\r\n        return utils.successResponse({ message: '\u5BC6\u7801\u4FEE\u6539\u6210\u529F\uFF0C\u8BF7\u91CD\u65B0\u767B\u5F55' });\r\n        \r\n    } catch (error) {\r\n        console.error('\u5BC6\u7801\u4FEE\u6539\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u5BC6\u7801\u4FEE\u6539\u5931\u8D25', 500);\r\n    }\r\n}\r\n\r\n// \u5176\u4ED6\u5904\u7406\u5668... \uFF08\u8FD9\u91CC\u7701\u7565\u5176\u4ED6\u5904\u7406\u5668\u7684\u5B8C\u6574\u4EE3\u7801\uFF0C\u5B9E\u9645\u4F7F\u7528\u65F6\u9700\u8981\u5305\u542B\u6240\u6709\u539F\u6709\u5904\u7406\u5668\uFF09\r\nexport async function authVerifyTokenHandler(request, env) {\r\n    try {\r\n        const body = await request.json().catch(() => ({}));\r\n        const { token } = body;\r\n\r\n        if (!token || typeof token !== 'string') {\r\n            return utils.errorResponse('Token\u53C2\u6570\u65E0\u6548', 400);\r\n        }\r\n\r\n        const jwtSecret = env.JWT_SECRET;\r\n        if (!jwtSecret) {\r\n            console.error('JWT_SECRET \u73AF\u5883\u53D8\u91CF\u672A\u8BBE\u7F6E');\r\n            return utils.errorResponse('\u670D\u52A1\u5668\u914D\u7F6E\u9519\u8BEF', 500);\r\n        }\r\n\r\n        const payload = await utils.verifyJWT(token, jwtSecret);\r\n        if (!payload) {\r\n            return utils.errorResponse('Token\u65E0\u6548\u6216\u5DF2\u8FC7\u671F', 401);\r\n        }\r\n\r\n        const tokenHash = await utils.hashPassword(token);\r\n        const session = await env.DB.prepare(`\r\n            SELECT u.* FROM users u\r\n            JOIN user_sessions s ON u.id = s.user_id\r\n            WHERE s.token_hash = ? AND s.expires_at > ?\r\n        `).bind(tokenHash, Date.now()).first();\r\n\r\n        if (!session) {\r\n            return utils.errorResponse('\u4F1A\u8BDD\u5DF2\u8FC7\u671F\u6216\u4E0D\u5B58\u5728', 401);\r\n        }\r\n\r\n        await env.DB.prepare(`\r\n            UPDATE user_sessions SET last_activity = ? WHERE token_hash = ?\r\n        `).bind(Date.now(), tokenHash).run();\r\n\r\n        const user = {\r\n            id: session.id,\r\n            username: session.username,\r\n            email: session.email,\r\n            emailVerified: Boolean(session.email_verified),\r\n            permissions: JSON.parse(session.permissions || '[]'),\r\n            settings: JSON.parse(session.settings || '{}')\r\n        };\r\n\r\n        return utils.successResponse({ \r\n            valid: true,\r\n            user,\r\n            message: 'Token\u9A8C\u8BC1\u6210\u529F'\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('Token\u9A8C\u8BC1\u5931\u8D25:', error);\r\n        return utils.errorResponse('Token\u9A8C\u8BC1\u5931\u8D25', 401);\r\n    }\r\n}\r\n\r\nexport async function authRefreshTokenHandler(request, env) {\r\n    try {\r\n        const user = await authenticate(request, env);\r\n        if (!user) return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n\r\n        const jwtSecret = env.JWT_SECRET;\r\n        if (!jwtSecret) {\r\n            console.error('JWT_SECRET \u73AF\u5883\u53D8\u91CF\u672A\u8BBE\u7F6E');\r\n            return utils.errorResponse('\u670D\u52A1\u5668\u914D\u7F6E\u9519\u8BEF', 500);\r\n        }\r\n\r\n        const expiryDays = parseInt(env.JWT_EXPIRY_DAYS || '30');\r\n        const expirySeconds = expiryDays * 24 * 60 * 60;\r\n\r\n        const payload = {\r\n            userId: user.id,\r\n            username: user.username,\r\n            iat: Math.floor(Date.now() / 1000),\r\n            exp: Math.floor(Date.now() / 1000) + expirySeconds\r\n        };\r\n\r\n        const newToken = await utils.generateJWT(payload, jwtSecret);\r\n        const newTokenHash = await utils.hashPassword(newToken);\r\n\r\n        const authHeader = request.headers.get('Authorization');\r\n        const oldToken = authHeader.substring(7);\r\n        const oldTokenHash = await utils.hashPassword(oldToken);\r\n\r\n        const expiresAt = Date.now() + (expirySeconds * 1000);\r\n        await env.DB.prepare(`\r\n            UPDATE user_sessions \r\n            SET token_hash = ?, expires_at = ?, last_activity = ?\r\n            WHERE token_hash = ? AND user_id = ?\r\n        `).bind(newTokenHash, expiresAt, Date.now(), oldTokenHash, user.id).run();\r\n\r\n        await utils.logUserAction(env, user.id, 'token_refresh', {}, request);\r\n\r\n        return utils.successResponse({\r\n            message: 'Token\u5237\u65B0\u6210\u529F',\r\n            token: newToken\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('Token\u5237\u65B0\u5931\u8D25:', error);\r\n        return utils.errorResponse('Token\u5237\u65B0\u5931\u8D25', 401);\r\n    }\r\n}\r\n\r\nexport async function authLogoutHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (user) {\r\n        const authHeader = request.headers.get('Authorization');\r\n        const token = authHeader.substring(7);\r\n        const tokenHash = await utils.hashPassword(token);\r\n\r\n        await env.DB.prepare(`\r\n            DELETE FROM user_sessions WHERE token_hash = ?\r\n        `).bind(tokenHash).run();\r\n\r\n        await utils.logUserAction(env, user.id, 'logout', {}, request);\r\n    }\r\n    return utils.successResponse({ message: '\u9000\u51FA\u6210\u529F' });\r\n}\r\n\r\n// \u53D1\u9001\u6CE8\u518C\u9A8C\u8BC1\u7801\r\nexport async function authSendRegistrationCodeHandler(request, env) {\r\n    try {\r\n        const body = await request.json().catch(() => ({}));\r\n        const { email } = body;\r\n\r\n        if (!email || !emailVerificationUtils.isValidEmail(email)) {\r\n            return utils.errorResponse('\u8BF7\u8F93\u5165\u6709\u6548\u7684\u90AE\u7BB1\u5730\u5740');\r\n        }\r\n\r\n        const normalizedEmail = emailVerificationUtils.normalizeEmail(email);\r\n\r\n        // \u68C0\u67E5\u90AE\u7BB1\u662F\u5426\u5DF2\u6CE8\u518C\r\n        const existingUser = await env.DB.prepare(`\r\n            SELECT id FROM users WHERE email = ?\r\n        `).bind(normalizedEmail).first();\r\n\r\n        if (existingUser) {\r\n            return utils.errorResponse('\u8BE5\u90AE\u7BB1\u5DF2\u88AB\u6CE8\u518C');\r\n        }\r\n\r\n        // \u68C0\u67E5\u4E34\u65F6\u90AE\u7BB1\r\n        if (emailVerificationUtils.isTempEmail(normalizedEmail)) {\r\n            return utils.errorResponse('\u4E0D\u652F\u6301\u4E34\u65F6\u90AE\u7BB1\uFF0C\u8BF7\u4F7F\u7528\u5E38\u7528\u90AE\u7BB1');\r\n        }\r\n\r\n        const emailService = new EmailVerificationService(env);\r\n        const ipAddress = utils.getClientIP(request);\r\n\r\n        // \u68C0\u67E5\u53D1\u9001\u9891\u7387\u9650\u5236\r\n        await emailService.checkEmailRateLimit(normalizedEmail, ipAddress);\r\n\r\n        // \u521B\u5EFA\u9A8C\u8BC1\u8BB0\u5F55\r\n        const verification = await emailService.createEmailVerification(\r\n            normalizedEmail, 'registration', null, { ipAddress }\r\n        );\r\n\r\n        // \u53D1\u9001\u9A8C\u8BC1\u90AE\u4EF6\r\n        await emailService.sendVerificationEmail(\r\n            normalizedEmail, \r\n            verification.code, \r\n            'registration',\r\n            { username: '\u65B0\u7528\u6237' }\r\n        );\r\n\r\n        return utils.successResponse({\r\n            message: `\u9A8C\u8BC1\u7801\u5DF2\u53D1\u9001\u5230 ${emailVerificationUtils.maskEmail(normalizedEmail)}`,\r\n            maskedEmail: emailVerificationUtils.maskEmail(normalizedEmail),\r\n            expiresAt: verification.expiresAt\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u53D1\u9001\u9A8C\u8BC1\u7801\u5931\u8D25:', error);\r\n        return utils.errorResponse(error.message || '\u9A8C\u8BC1\u7801\u53D1\u9001\u5931\u8D25');\r\n    }\r\n}\r\n\r\n// \u53D1\u9001\u5BC6\u7801\u91CD\u7F6E\u9A8C\u8BC1\u7801\uFF08\u5DF2\u767B\u5F55\u7528\u6237\uFF09\r\nexport async function authSendPasswordResetCodeHandler(request, env) {\r\n    try {\r\n        const user = await authenticate(request, env);\r\n        if (!user) return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n\r\n        const userRecord = await env.DB.prepare(`\r\n            SELECT * FROM users WHERE id = ?\r\n        `).bind(user.id).first();\r\n\r\n        if (!userRecord) {\r\n            return utils.errorResponse('\u7528\u6237\u4E0D\u5B58\u5728', 404);\r\n        }\r\n\r\n        const emailService = new EmailVerificationService(env);\r\n        const ipAddress = utils.getClientIP(request);\r\n\r\n        // \u68C0\u67E5\u53D1\u9001\u9891\u7387\u9650\u5236\r\n        await emailService.checkEmailRateLimit(userRecord.email, ipAddress);\r\n\r\n        // \u521B\u5EFA\u9A8C\u8BC1\u8BB0\u5F55\r\n        const verification = await emailService.createEmailVerification(\r\n            userRecord.email, 'password_reset', user.id, { ipAddress }\r\n        );\r\n\r\n        // \u53D1\u9001\u9A8C\u8BC1\u90AE\u4EF6\r\n        await emailService.sendVerificationEmail(\r\n            userRecord.email, \r\n            verification.code, \r\n            'password_reset',\r\n            { username: userRecord.username }\r\n        );\r\n\r\n        return utils.successResponse({\r\n            message: `\u9A8C\u8BC1\u7801\u5DF2\u53D1\u9001\u5230 ${emailVerificationUtils.maskEmail(userRecord.email)}`,\r\n            maskedEmail: emailVerificationUtils.maskEmail(userRecord.email),\r\n            expiresAt: verification.expiresAt\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u53D1\u9001\u5BC6\u7801\u91CD\u7F6E\u9A8C\u8BC1\u7801\u5931\u8D25:', error);\r\n        return utils.errorResponse(error.message || '\u9A8C\u8BC1\u7801\u53D1\u9001\u5931\u8D25');\r\n    }\r\n}\r\n\r\n// \u53D1\u8D77\u90AE\u7BB1\u66F4\u6539\u8BF7\u6C42\r\nexport async function authRequestEmailChangeHandler(request, env) {\r\n    try {\r\n        const user = await authenticate(request, env);\r\n        if (!user) return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n\r\n        const body = await request.json().catch(() => ({}));\r\n        const { newEmail, currentPassword } = body;\r\n\r\n        if (!newEmail || !emailVerificationUtils.isValidEmail(newEmail)) {\r\n            return utils.errorResponse('\u8BF7\u8F93\u5165\u6709\u6548\u7684\u65B0\u90AE\u7BB1\u5730\u5740');\r\n        }\r\n\r\n        if (!currentPassword) {\r\n            return utils.errorResponse('\u8BF7\u8F93\u5165\u5F53\u524D\u5BC6\u7801');\r\n        }\r\n\r\n        const normalizedNewEmail = emailVerificationUtils.normalizeEmail(newEmail);\r\n\r\n        // \u68C0\u67E5\u4E34\u65F6\u90AE\u7BB1\r\n        if (emailVerificationUtils.isTempEmail(normalizedNewEmail)) {\r\n            return utils.errorResponse('\u4E0D\u652F\u6301\u4E34\u65F6\u90AE\u7BB1');\r\n        }\r\n\r\n        const userRecord = await env.DB.prepare(`\r\n            SELECT * FROM users WHERE id = ?\r\n        `).bind(user.id).first();\r\n\r\n        if (!userRecord) {\r\n            return utils.errorResponse('\u7528\u6237\u4E0D\u5B58\u5728', 404);\r\n        }\r\n\r\n        // \u9A8C\u8BC1\u5F53\u524D\u5BC6\u7801\r\n        const currentHash = await utils.hashPassword(currentPassword);\r\n        if (currentHash !== userRecord.password_hash) {\r\n            return utils.errorResponse('\u5F53\u524D\u5BC6\u7801\u9519\u8BEF');\r\n        }\r\n\r\n        // \u68C0\u67E5\u65B0\u90AE\u7BB1\u662F\u5426\u4E0E\u5F53\u524D\u90AE\u7BB1\u76F8\u540C\r\n        if (normalizedNewEmail === userRecord.email) {\r\n            return utils.errorResponse('\u65B0\u90AE\u7BB1\u4E0D\u80FD\u4E0E\u5F53\u524D\u90AE\u7BB1\u76F8\u540C');\r\n        }\r\n\r\n        // \u68C0\u67E5\u65B0\u90AE\u7BB1\u662F\u5426\u5DF2\u88AB\u5176\u4ED6\u7528\u6237\u4F7F\u7528\r\n        const existingUser = await env.DB.prepare(`\r\n            SELECT id FROM users WHERE email = ? AND id != ?\r\n        `).bind(normalizedNewEmail, user.id).first();\r\n\r\n        if (existingUser) {\r\n            return utils.errorResponse('\u8BE5\u90AE\u7BB1\u5DF2\u88AB\u5176\u4ED6\u7528\u6237\u4F7F\u7528');\r\n        }\r\n\r\n        const emailService = new EmailVerificationService(env);\r\n\r\n        // \u68C0\u67E5\u662F\u5426\u6709\u8FDB\u884C\u4E2D\u7684\u90AE\u7BB1\u66F4\u6539\u8BF7\u6C42\r\n        const activeRequest = await emailService.getUserActiveEmailChangeRequest(user.id);\r\n        if (activeRequest) {\r\n            return utils.errorResponse('\u60A8\u5DF2\u6709\u8FDB\u884C\u4E2D\u7684\u90AE\u7BB1\u66F4\u6539\u8BF7\u6C42\uFF0C\u8BF7\u5148\u5B8C\u6210\u6216\u7B49\u5F85\u8FC7\u671F');\r\n        }\r\n\r\n        // \u521B\u5EFA\u90AE\u7BB1\u66F4\u6539\u8BF7\u6C42\r\n        const changeRequest = await emailService.createEmailChangeRequest(\r\n            user.id, userRecord.email, normalizedNewEmail\r\n        );\r\n\r\n        return utils.successResponse({\r\n            message: '\u90AE\u7BB1\u66F4\u6539\u8BF7\u6C42\u5DF2\u521B\u5EFA\uFF0C\u63A5\u4E0B\u6765\u9700\u8981\u9A8C\u8BC1\u65B0\u90AE\u7BB1',\r\n            requestId: changeRequest.id,\r\n            oldEmail: emailVerificationUtils.maskEmail(userRecord.email),\r\n            newEmail: emailVerificationUtils.maskEmail(normalizedNewEmail),\r\n            expiresAt: changeRequest.expiresAt\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u90AE\u7BB1\u66F4\u6539\u8BF7\u6C42\u5931\u8D25:', error);\r\n        return utils.errorResponse(error.message || '\u90AE\u7BB1\u66F4\u6539\u8BF7\u6C42\u5931\u8D25');\r\n    }\r\n}\r\n\r\n// \u53D1\u9001\u90AE\u7BB1\u66F4\u6539\u9A8C\u8BC1\u7801\r\nexport async function authSendEmailChangeCodeHandler(request, env) {\r\n    try {\r\n        const user = await authenticate(request, env);\r\n        if (!user) return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n\r\n        const body = await request.json().catch(() => ({}));\r\n        const { requestId, emailType } = body; // emailType: 'old' or 'new'\r\n\r\n        if (!requestId || !emailType || !['old', 'new'].includes(emailType)) {\r\n            return utils.errorResponse('\u53C2\u6570\u9519\u8BEF');\r\n        }\r\n\r\n        const emailService = new EmailVerificationService(env);\r\n        \r\n        // \u83B7\u53D6\u90AE\u7BB1\u66F4\u6539\u8BF7\u6C42\r\n        const changeRequest = await env.DB.prepare(`\r\n            SELECT * FROM email_change_requests \r\n            WHERE id = ? AND user_id = ? AND status = 'pending' AND expires_at > ?\r\n        `).bind(requestId, user.id, Date.now()).first();\r\n\r\n        if (!changeRequest) {\r\n            return utils.errorResponse('\u90AE\u7BB1\u66F4\u6539\u8BF7\u6C42\u4E0D\u5B58\u5728\u6216\u5DF2\u8FC7\u671F');\r\n        }\r\n\r\n        const targetEmail = emailType === 'old' ? changeRequest.old_email : changeRequest.new_email;\r\n        const verificationType = emailType === 'old' ? 'email_change_old' : 'email_change_new';\r\n        const ipAddress = utils.getClientIP(request);\r\n\r\n        // \u68C0\u67E5\u53D1\u9001\u9891\u7387\u9650\u5236\r\n        await emailService.checkEmailRateLimit(targetEmail, ipAddress);\r\n\r\n        // \u521B\u5EFA\u9A8C\u8BC1\u8BB0\u5F55\r\n        const verification = await emailService.createEmailVerification(\r\n            targetEmail, verificationType, user.id, { \r\n                requestId, \r\n                emailType,\r\n                ipAddress \r\n            }\r\n        );\r\n\r\n        // \u83B7\u53D6\u7528\u6237\u4FE1\u606F\r\n        const userRecord = await env.DB.prepare(`\r\n            SELECT username FROM users WHERE id = ?\r\n        `).bind(user.id).first();\r\n\r\n        // \u53D1\u9001\u9A8C\u8BC1\u90AE\u4EF6\r\n        await emailService.sendVerificationEmail(\r\n            targetEmail, \r\n            verification.code, \r\n            'email_change',\r\n            { \r\n                username: userRecord.username,\r\n                oldEmail: changeRequest.old_email,\r\n                newEmail: changeRequest.new_email\r\n            }\r\n        );\r\n\r\n        return utils.successResponse({\r\n            message: `\u9A8C\u8BC1\u7801\u5DF2\u53D1\u9001\u5230 ${emailVerificationUtils.maskEmail(targetEmail)}`,\r\n            maskedEmail: emailVerificationUtils.maskEmail(targetEmail),\r\n            emailType,\r\n            expiresAt: verification.expiresAt\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u53D1\u9001\u90AE\u7BB1\u66F4\u6539\u9A8C\u8BC1\u7801\u5931\u8D25:', error);\r\n        return utils.errorResponse(error.message || '\u9A8C\u8BC1\u7801\u53D1\u9001\u5931\u8D25');\r\n    }\r\n}\r\n\r\n// \u9A8C\u8BC1\u90AE\u7BB1\u66F4\u6539\u9A8C\u8BC1\u7801\r\nexport async function authVerifyEmailChangeCodeHandler(request, env) {\r\n    try {\r\n        const user = await authenticate(request, env);\r\n        if (!user) return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n\r\n        const body = await request.json().catch(() => ({}));\r\n        const { requestId, emailType, verificationCode } = body;\r\n\r\n        if (!requestId || !emailType || !verificationCode) {\r\n            return utils.errorResponse('\u53C2\u6570\u4E0D\u5B8C\u6574');\r\n        }\r\n\r\n        const emailService = new EmailVerificationService(env);\r\n        \r\n        // \u83B7\u53D6\u90AE\u7BB1\u66F4\u6539\u8BF7\u6C42\r\n        const changeRequest = await env.DB.prepare(`\r\n            SELECT * FROM email_change_requests \r\n            WHERE id = ? AND user_id = ? AND status = 'pending' AND expires_at > ?\r\n        `).bind(requestId, user.id, Date.now()).first();\r\n\r\n        if (!changeRequest) {\r\n            return utils.errorResponse('\u90AE\u7BB1\u66F4\u6539\u8BF7\u6C42\u4E0D\u5B58\u5728\u6216\u5DF2\u8FC7\u671F');\r\n        }\r\n\r\n        const targetEmail = emailType === 'old' ? changeRequest.old_email : changeRequest.new_email;\r\n        const verificationType = emailType === 'old' ? 'email_change_old' : 'email_change_new';\r\n\r\n        // \u9A8C\u8BC1\u9A8C\u8BC1\u7801\r\n        try {\r\n            await emailService.verifyCode(targetEmail, verificationCode, verificationType, user.id);\r\n        } catch (error) {\r\n            return utils.errorResponse(error.message);\r\n        }\r\n\r\n        // \u6807\u8BB0\u76F8\u5E94\u90AE\u7BB1\u4E3A\u5DF2\u9A8C\u8BC1\r\n        await emailService.markEmailVerificationCompleted(requestId, verificationType);\r\n\r\n        // \u83B7\u53D6\u66F4\u65B0\u540E\u7684\u8BF7\u6C42\u72B6\u6001\r\n        const updatedRequest = await env.DB.prepare(`\r\n            SELECT * FROM email_change_requests WHERE id = ?\r\n        `).bind(requestId).first();\r\n\r\n        // \u68C0\u67E5\u662F\u5426\u53EF\u4EE5\u5B8C\u6210\u90AE\u7BB1\u66F4\u6539\uFF08\u65B0\u90AE\u7BB1\u5DF2\u9A8C\u8BC1\uFF09\r\n        if (updatedRequest.new_email_verified) {\r\n            const result = await emailService.completeEmailChange(requestId, user.id);\r\n            \r\n            await utils.logUserAction(env, user.id, 'email_change', {\r\n                oldEmail: changeRequest.old_email,\r\n                newEmail: changeRequest.new_email\r\n            }, request);\r\n\r\n            return utils.successResponse({\r\n                message: '\u90AE\u7BB1\u66F4\u6539\u6210\u529F\uFF01',\r\n                completed: true,\r\n                newEmail: emailVerificationUtils.maskEmail(result.newEmail)\r\n            });\r\n        }\r\n\r\n        return utils.successResponse({\r\n            message: `${emailType === 'old' ? '\u539F' : '\u65B0'}\u90AE\u7BB1\u9A8C\u8BC1\u6210\u529F`,\r\n            completed: false,\r\n            nextStep: emailType === 'old' ? '\u8BF7\u9A8C\u8BC1\u65B0\u90AE\u7BB1' : '\u90AE\u7BB1\u66F4\u6539\u5373\u5C06\u5B8C\u6210'\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u90AE\u7BB1\u66F4\u6539\u9A8C\u8BC1\u5931\u8D25:', error);\r\n        return utils.errorResponse(error.message || '\u9A8C\u8BC1\u5931\u8D25');\r\n    }\r\n}\r\n\r\n// \u5220\u9664\u8D26\u53F7\uFF08\u96C6\u6210\u90AE\u7BB1\u9A8C\u8BC1\uFF09\r\nexport async function authDeleteAccountHandler(request, env) {\r\n    try {\r\n        const user = await authenticate(request, env);\r\n        if (!user) return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n\r\n        const body = await request.json().catch(() => ({}));\r\n        const { verificationCode, confirmText } = body;\r\n\r\n        if (!verificationCode) {\r\n            return utils.errorResponse('\u8BF7\u5148\u83B7\u53D6\u90AE\u7BB1\u9A8C\u8BC1\u7801');\r\n        }\r\n\r\n        if (confirmText !== '\u5220\u9664\u6211\u7684\u8D26\u6237') {\r\n            return utils.errorResponse('\u8BF7\u8F93\u5165\u786E\u8BA4\u6587\u672C\uFF1A\"\u5220\u9664\u6211\u7684\u8D26\u6237\"');\r\n        }\r\n\r\n        const userRecord = await env.DB.prepare(`\r\n            SELECT * FROM users WHERE id = ?\r\n        `).bind(user.id).first();\r\n\r\n        if (!userRecord) {\r\n            return utils.errorResponse('\u7528\u6237\u4E0D\u5B58\u5728', 404);\r\n        }\r\n\r\n        // \u9A8C\u8BC1\u90AE\u7BB1\u9A8C\u8BC1\u7801\r\n        const emailService = new EmailVerificationService(env);\r\n        try {\r\n            await emailService.verifyCode(userRecord.email, verificationCode, 'account_delete', user.id);\r\n        } catch (error) {\r\n            return utils.errorResponse(error.message);\r\n        }\r\n\r\n        await utils.logUserAction(env, user.id, 'account_delete', {\r\n            email: emailVerificationUtils.maskEmail(userRecord.email)\r\n        }, request);\r\n\r\n        // \u5220\u9664\u7528\u6237\u8D26\u6237\uFF08\u4F1A\u7EA7\u8054\u5220\u9664\u76F8\u5173\u6570\u636E\uFF09\r\n        await env.DB.prepare(`DELETE FROM users WHERE id = ?`).bind(user.id).run();\r\n        \r\n        return utils.successResponse({ message: \"\u8D26\u6237\u5DF2\u5220\u9664\" });\r\n\r\n    } catch (error) {\r\n        console.error('\u5220\u9664\u8D26\u6237\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u5220\u9664\u8D26\u6237\u5931\u8D25', 500);\r\n    }\r\n}\r\n\r\n// \u53D1\u9001\u8D26\u6237\u5220\u9664\u9A8C\u8BC1\u7801\r\nexport async function authSendAccountDeleteCodeHandler(request, env) {\r\n    try {\r\n        const user = await authenticate(request, env);\r\n        if (!user) return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n\r\n        const userRecord = await env.DB.prepare(`\r\n            SELECT * FROM users WHERE id = ?\r\n        `).bind(user.id).first();\r\n\r\n        if (!userRecord) {\r\n            return utils.errorResponse('\u7528\u6237\u4E0D\u5B58\u5728', 404);\r\n        }\r\n\r\n        const emailService = new EmailVerificationService(env);\r\n        const ipAddress = utils.getClientIP(request);\r\n\r\n        // \u68C0\u67E5\u53D1\u9001\u9891\u7387\u9650\u5236\r\n        await emailService.checkEmailRateLimit(userRecord.email, ipAddress);\r\n\r\n        // \u521B\u5EFA\u9A8C\u8BC1\u8BB0\u5F55\r\n        const verification = await emailService.createEmailVerification(\r\n            userRecord.email, 'account_delete', user.id, { ipAddress }\r\n        );\r\n\r\n        // \u53D1\u9001\u9A8C\u8BC1\u90AE\u4EF6\r\n        await emailService.sendVerificationEmail(\r\n            userRecord.email, \r\n            verification.code, \r\n            'account_delete',\r\n            { username: userRecord.username }\r\n        );\r\n\r\n        return utils.successResponse({\r\n            message: `\u9A8C\u8BC1\u7801\u5DF2\u53D1\u9001\u5230 ${emailVerificationUtils.maskEmail(userRecord.email)}`,\r\n            maskedEmail: emailVerificationUtils.maskEmail(userRecord.email),\r\n            expiresAt: verification.expiresAt\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u53D1\u9001\u8D26\u6237\u5220\u9664\u9A8C\u8BC1\u7801\u5931\u8D25:', error);\r\n        return utils.errorResponse(error.message || '\u9A8C\u8BC1\u7801\u53D1\u9001\u5931\u8D25');\r\n    }\r\n}", "// src/services.js - \u590D\u6742\u7684\u4E1A\u52A1\u903B\u8F91\u670D\u52A1\r\nimport { utils } from '../utils.js';\r\n\r\n// \u641C\u7D22\u6E90\u72B6\u6001\u68C0\u67E5\u76F8\u5173\r\nexport async function checkSingleSourceStatus(source, keyword, keywordHash, options = {}) {\r\n    const { timeout, checkContentMatch, env } = options;\r\n    const sourceId = source.id || source.name;\r\n    const startTime = Date.now();\r\n    \r\n    try {\r\n        // \u68C0\u67E5\u7F13\u5B58\r\n        const cached = await getCachedSourceStatus(env, sourceId, keywordHash);\r\n        if (cached && isCacheValid(cached)) {\r\n            console.log(`\u4F7F\u7528\u7F13\u5B58\u7ED3\u679C: ${sourceId}`);\r\n            return {\r\n                sourceId,\r\n                sourceName: source.name,\r\n                status: cached.status,\r\n                available: cached.available,\r\n                contentMatch: cached.content_match,\r\n                responseTime: cached.response_time,\r\n                lastChecked: cached.created_at,\r\n                fromCache: true\r\n            };\r\n        }\r\n        \r\n        // \u6784\u5EFA\u68C0\u67E5URL\r\n        const checkUrl = source.urlTemplate.replace('{keyword}', encodeURIComponent(keyword));\r\n        console.log(`\u68C0\u67E5URL: ${checkUrl}`);\r\n        \r\n        // \u6267\u884CHTTP\u68C0\u67E5\r\n        const controller = new AbortController();\r\n        const timeoutId = setTimeout(() => controller.abort(), timeout);\r\n        \r\n        const response = await fetch(checkUrl, {\r\n            method: 'GET',\r\n            signal: controller.signal,\r\n            headers: {\r\n                'User-Agent': 'MagnetSearch-StatusChecker/1.3.0',\r\n                'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\r\n                'Accept-Language': 'zh-CN,zh;q=0.8,en;q=0.6',\r\n                'Cache-Control': 'no-cache'\r\n            }\r\n        });\r\n        \r\n        clearTimeout(timeoutId);\r\n        const responseTime = Date.now() - startTime;\r\n        \r\n        // \u57FA\u7840\u53EF\u7528\u6027\u68C0\u67E5\r\n        const isAvailable = response.ok && response.status < 400;\r\n        let contentMatch = false;\r\n        let qualityScore = 0;\r\n        let matchDetails = {};\r\n        \r\n        // \u5185\u5BB9\u5339\u914D\u68C0\u67E5\r\n        if (isAvailable && checkContentMatch) {\r\n            try {\r\n                const content = await response.text();\r\n                const matchResult = analyzePageContent(content, keyword, source);\r\n                contentMatch = matchResult.hasMatch;\r\n                qualityScore = matchResult.qualityScore;\r\n                matchDetails = matchResult.details;\r\n                \r\n                console.log(`\u5185\u5BB9\u5339\u914D\u68C0\u67E5 ${sourceId}: ${contentMatch ? '\u5339\u914D' : '\u4E0D\u5339\u914D'}, \u8D28\u91CF\u5206\u6570: ${qualityScore}`);\r\n            } catch (contentError) {\r\n                console.warn(`\u5185\u5BB9\u68C0\u67E5\u5931\u8D25 ${sourceId}:`, contentError.message);\r\n            }\r\n        }\r\n        \r\n        // \u786E\u5B9A\u6700\u7EC8\u72B6\u6001\r\n        let finalStatus = 'error';\r\n        if (isAvailable) {\r\n            if (checkContentMatch) {\r\n                finalStatus = contentMatch ? 'available' : 'unavailable';\r\n            } else {\r\n                finalStatus = 'available';\r\n            }\r\n        } else if (response.status === 404) {\r\n            finalStatus = 'unavailable';\r\n        } else if (responseTime >= timeout * 0.9) {\r\n            finalStatus = 'timeout';\r\n        } else {\r\n            finalStatus = 'unavailable';\r\n        }\r\n        \r\n        const result = {\r\n            sourceId,\r\n            sourceName: source.name,\r\n            status: finalStatus,\r\n            available: finalStatus === 'available',\r\n            contentMatch,\r\n            responseTime,\r\n            qualityScore,\r\n            httpStatus: response.status,\r\n            lastChecked: Date.now(),\r\n            matchDetails,\r\n            fromCache: false\r\n        };\r\n        \r\n        // \u5F02\u6B65\u4FDD\u5B58\u5230\u7F13\u5B58\r\n        saveSingleStatusToCache(env, sourceId, keyword, keywordHash, result).catch(console.error);\r\n        \r\n        return result;\r\n        \r\n    } catch (error) {\r\n        const responseTime = Date.now() - startTime;\r\n        \r\n        console.error(`\u68C0\u67E5\u6E90\u5931\u8D25 ${sourceId}:`, error.message);\r\n        \r\n        let status = 'error';\r\n        if (error.name === 'AbortError' || error.message.includes('timeout')) {\r\n            status = 'timeout';\r\n        } else if (error.message.includes('network') || error.message.includes('fetch')) {\r\n            status = 'unavailable';\r\n        }\r\n        \r\n        const result = {\r\n            sourceId,\r\n            sourceName: source.name,\r\n            status,\r\n            available: false,\r\n            contentMatch: false,\r\n            responseTime,\r\n            qualityScore: 0,\r\n            lastChecked: Date.now(),\r\n            error: error.message,\r\n            fromCache: false\r\n        };\r\n        \r\n        // \u5F02\u6B65\u4FDD\u5B58\u9519\u8BEF\u7ED3\u679C\u5230\u7F13\u5B58\r\n        saveSingleStatusToCache(env, sourceId, keyword, keywordHash, result).catch(console.error);\r\n        \r\n        return result;\r\n    }\r\n}\r\n\r\nexport function analyzePageContent(content, keyword, source) {\r\n    const lowerContent = content.toLowerCase();\r\n    const lowerKeyword = keyword.toLowerCase();\r\n    \r\n    let qualityScore = 0;\r\n    const details = {\r\n        titleMatch: false,\r\n        bodyMatch: false,\r\n        exactMatch: false,\r\n        partialMatch: false,\r\n        resultCount: 0,\r\n        keywordPositions: []\r\n    };\r\n    \r\n    // \u68C0\u67E5\u7CBE\u786E\u5339\u914D\r\n    if (lowerContent.includes(lowerKeyword)) {\r\n        details.exactMatch = true;\r\n        qualityScore += 50;\r\n        \r\n        // \u627E\u5230\u6240\u6709\u5173\u952E\u8BCD\u4F4D\u7F6E\r\n        let position = 0;\r\n        while ((position = lowerContent.indexOf(lowerKeyword, position)) !== -1) {\r\n            details.keywordPositions.push(position);\r\n            position += lowerKeyword.length;\r\n        }\r\n    }\r\n    \r\n    // \u68C0\u67E5\u6807\u9898\u5339\u914D\r\n    const titleMatch = content.match(/<title[^>]*>([^<]*)</i);\r\n    if (titleMatch && titleMatch[1].toLowerCase().includes(lowerKeyword)) {\r\n        details.titleMatch = true;\r\n        qualityScore += 30;\r\n    }\r\n    \r\n    // \u68C0\u67E5\u756A\u53F7\u683C\u5F0F\uFF08\u5982\u679C\u662F\u756A\u53F7\u641C\u7D22\uFF09\r\n    if (/^[A-Za-z]+-?\\d+$/i.test(keyword)) {\r\n        const numberPattern = keyword.replace('-', '-?');\r\n        const regex = new RegExp(numberPattern, 'gi');\r\n        const matches = content.match(regex);\r\n        if (matches) {\r\n            details.exactMatch = true;\r\n            qualityScore += 40;\r\n            details.resultCount = matches.length;\r\n        }\r\n    }\r\n    \r\n    // \u68C0\u67E5\u90E8\u5206\u5339\u914D\uFF08\u5173\u952E\u8BCD\u7684\u5404\u90E8\u5206\uFF09\r\n    if (!details.exactMatch && keyword.length > 3) {\r\n        const parts = keyword.split(/[-_\\s]+/);\r\n        let partialMatches = 0;\r\n        \r\n        parts.forEach(part => {\r\n            if (part.length > 2 && lowerContent.includes(part.toLowerCase())) {\r\n                partialMatches++;\r\n            }\r\n        });\r\n        \r\n        if (partialMatches > 0) {\r\n            details.partialMatch = true;\r\n            qualityScore += Math.min(partialMatches * 10, 30);\r\n        }\r\n    }\r\n    \r\n    // \u68C0\u67E5\u662F\u5426\u6709\u641C\u7D22\u7ED3\u679C\u5217\u8868\r\n    const resultIndicators = [\r\n        /result/gi,\r\n        /search.*result/gi,\r\n        /\u627E\u5230.*\u7ED3\u679C/gi,\r\n        /\u5171.*\u6761/gi,\r\n        /<div[^>]*class[^>]*result/gi\r\n    ];\r\n    \r\n    let resultCount = 0;\r\n    resultIndicators.forEach(indicator => {\r\n        const matches = content.match(indicator);\r\n        if (matches) resultCount += matches.length;\r\n    });\r\n    \r\n    if (resultCount > 0) {\r\n        details.resultCount = resultCount;\r\n        qualityScore += Math.min(resultCount * 5, 20);\r\n    }\r\n    \r\n    // \u68C0\u67E5\u662F\u5426\u662F\"\u65E0\u7ED3\u679C\"\u9875\u9762\r\n    const noResultIndicators = [\r\n        /no.*result/gi,\r\n        /not.*found/gi,\r\n        /\u6CA1\u6709.*\u7ED3\u679C/gi,\r\n        /\u672A\u627E\u5230/gi,\r\n        /\u6682\u65E0.*\u5185\u5BB9/gi\r\n    ];\r\n    \r\n    const hasNoResultIndicator = noResultIndicators.some(indicator => \r\n        content.match(indicator)\r\n    );\r\n    \r\n    if (hasNoResultIndicator) {\r\n        qualityScore = Math.max(0, qualityScore - 30);\r\n    }\r\n    \r\n    // \u6700\u7EC8\u8D28\u91CF\u8BC4\u5206\r\n    qualityScore = Math.min(100, Math.max(0, qualityScore));\r\n    \r\n    const hasMatch = details.exactMatch || (details.partialMatch && qualityScore > 20);\r\n    \r\n    return {\r\n        hasMatch,\r\n        qualityScore,\r\n        details\r\n    };\r\n}\r\n\r\nexport async function updateTagUsageCount(env, tagIds, increment = 1) {\r\n    if (!Array.isArray(tagIds) || tagIds.length === 0) {\r\n        return;\r\n    }\r\n    \r\n    try {\r\n        for (const tagId of tagIds) {\r\n            if (tagId && typeof tagId === 'string') {\r\n                await env.DB.prepare(`\r\n                    UPDATE community_source_tags \r\n                    SET usage_count = usage_count + ?, updated_at = ?\r\n                    WHERE id = ? AND tag_active = 1\r\n                `).bind(increment, Date.now(), tagId).run();\r\n            }\r\n        }\r\n    } catch (error) {\r\n        console.error('\u66F4\u65B0\u6807\u7B7E\u4F7F\u7528\u7EDF\u8BA1\u5931\u8D25:', error);\r\n    }\r\n}\r\n\r\n// \u7F13\u5B58\u76F8\u5173\u670D\u52A1\r\nexport async function getCachedSourceStatus(env, sourceId, keywordHash) {\r\n    try {\r\n        return await env.DB.prepare(`\r\n            SELECT * FROM source_status_cache \r\n            WHERE source_id = ? AND keyword_hash = ? \r\n            ORDER BY created_at DESC \r\n            LIMIT 1\r\n        `).bind(sourceId, keywordHash).first();\r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u7F13\u5B58\u72B6\u6001\u5931\u8D25:', error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function isCacheValid(cached, maxAge = 300000) { // 5\u5206\u949F\u9ED8\u8BA4\u7F13\u5B58\r\n    if (!cached) return false;\r\n    return Date.now() - cached.created_at < maxAge;\r\n}\r\n\r\nexport async function saveSingleStatusToCache(env, sourceId, keyword, keywordHash, result) {\r\n    try {\r\n        const cacheId = utils.generateId();\r\n        await env.DB.prepare(`\r\n            INSERT INTO source_status_cache (\r\n                id, source_id, keyword, keyword_hash, status, available, content_match,\r\n                response_time, quality_score, match_details, page_info, check_error,\r\n                expires_at, created_at, last_accessed, access_count\r\n            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n        `).bind(\r\n            cacheId, sourceId, keyword, keywordHash, result.status,\r\n            result.available ? 1 : 0, result.contentMatch ? 1 : 0,\r\n            result.responseTime, result.qualityScore || 0,\r\n            JSON.stringify(result.matchDetails || {}),\r\n            JSON.stringify({ httpStatus: result.httpStatus }),\r\n            result.error || null,\r\n            Date.now() + 300000, // 5\u5206\u949F\u540E\u8FC7\u671F\r\n            Date.now(), Date.now(), 1\r\n        ).run();\r\n    } catch (error) {\r\n        console.error('\u4FDD\u5B58\u7F13\u5B58\u72B6\u6001\u5931\u8D25:', error);\r\n    }\r\n}\r\n\r\nexport async function saveStatusCheckResults(env, results, keyword) {\r\n    try {\r\n        // \u66F4\u65B0\u5065\u5EB7\u5EA6\u7EDF\u8BA1\r\n        for (const result of results) {\r\n            await updateSourceHealthStats(env, result);\r\n        }\r\n        \r\n        console.log(`\u5DF2\u4FDD\u5B58 ${results.length} \u4E2A\u641C\u7D22\u6E90\u7684\u72B6\u6001\u68C0\u67E5\u7ED3\u679C`);\r\n    } catch (error) {\r\n        console.error('\u4FDD\u5B58\u72B6\u6001\u68C0\u67E5\u7ED3\u679C\u5931\u8D25:', error);\r\n    }\r\n}\r\n\r\nexport async function updateSourceHealthStats(env, result) {\r\n    try {\r\n        const sourceId = result.sourceId;\r\n        \r\n        // \u83B7\u53D6\u5F53\u524D\u7EDF\u8BA1\r\n        const currentStats = await env.DB.prepare(`\r\n            SELECT * FROM source_health_stats WHERE source_id = ?\r\n        `).bind(sourceId).first();\r\n        \r\n        if (currentStats) {\r\n            // \u66F4\u65B0\u73B0\u6709\u7EDF\u8BA1\r\n            const newTotalChecks = currentStats.total_checks + 1;\r\n            const newSuccessfulChecks = currentStats.successful_checks + (result.available ? 1 : 0);\r\n            const newContentMatches = currentStats.content_matches + (result.contentMatch ? 1 : 0);\r\n            const newSuccessRate = newSuccessfulChecks / newTotalChecks;\r\n            \r\n            // \u66F4\u65B0\u5E73\u5747\u54CD\u5E94\u65F6\u95F4\r\n            const newAvgResponseTime = Math.round(\r\n                (currentStats.average_response_time * currentStats.total_checks + result.responseTime) / newTotalChecks\r\n            );\r\n            \r\n            // \u8BA1\u7B97\u5065\u5EB7\u5EA6\u5206\u6570\r\n            const healthScore = Math.round(newSuccessRate * 100);\r\n            \r\n            await env.DB.prepare(`\r\n                UPDATE source_health_stats SET\r\n                    total_checks = ?, successful_checks = ?, content_matches = ?,\r\n                    average_response_time = ?, success_rate = ?, health_score = ?,\r\n                    last_success = ?, last_failure = ?, updated_at = ?\r\n                WHERE source_id = ?\r\n            `).bind(\r\n                newTotalChecks, newSuccessfulChecks, newContentMatches,\r\n                newAvgResponseTime, newSuccessRate, healthScore,\r\n                result.available ? Date.now() : currentStats.last_success,\r\n                result.available ? currentStats.last_failure : Date.now(),\r\n                Date.now(), sourceId\r\n            ).run();\r\n        } else {\r\n            // \u521B\u5EFA\u65B0\u7EDF\u8BA1\r\n            const statsId = utils.generateId();\r\n            await env.DB.prepare(`\r\n                INSERT INTO source_health_stats (\r\n                    id, source_id, total_checks, successful_checks, content_matches,\r\n                    average_response_time, last_success, last_failure, success_rate,\r\n                    health_score, updated_at\r\n                ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n            `).bind(\r\n                statsId, sourceId, 1, result.available ? 1 : 0, result.contentMatch ? 1 : 0,\r\n                result.responseTime,\r\n                result.available ? Date.now() : null,\r\n                result.available ? null : Date.now(),\r\n                result.available ? 1.0 : 0.0,\r\n                result.available ? 100 : 0,\r\n                Date.now()\r\n            ).run();\r\n        }\r\n    } catch (error) {\r\n        console.error('\u66F4\u65B0\u6E90\u5065\u5EB7\u5EA6\u7EDF\u8BA1\u5931\u8D25:', error);\r\n    }\r\n}\r\n\r\n// \u6570\u636E\u5E93\u64CD\u4F5C\u670D\u52A1\r\nexport async function updateUserStatsAfterDelete(env, userId) {\r\n    try {\r\n        // \u91CD\u65B0\u8BA1\u7B97\u7528\u6237\u7684\u5206\u4EAB\u7EDF\u8BA1\uFF0C\u907F\u514D\u4F7F\u7528\u89E6\u53D1\u5668\r\n        const realStats = await env.DB.prepare(`\r\n            SELECT COUNT(*) as shared_count FROM community_shared_sources \r\n            WHERE user_id = ? AND status = 'active'\r\n        `).bind(userId).first();\r\n        \r\n        // \u66F4\u65B0\u6216\u63D2\u5165\u7EDF\u8BA1\u8BB0\u5F55\r\n        await env.DB.prepare(`\r\n            INSERT OR REPLACE INTO community_user_stats (\r\n                id, user_id, shared_sources_count, updated_at,\r\n                total_downloads, total_likes, total_views, reviews_given,\r\n                sources_downloaded, tags_created, reputation_score, contribution_level,\r\n                created_at\r\n            ) VALUES (\r\n                COALESCE((SELECT id FROM community_user_stats WHERE user_id = ?), ? || '_stats'),\r\n                ?,\r\n                ?,\r\n                ?,\r\n                COALESCE((SELECT total_downloads FROM community_user_stats WHERE user_id = ?), 0),\r\n                COALESCE((SELECT total_likes FROM community_user_stats WHERE user_id = ?), 0),\r\n                COALESCE((SELECT total_views FROM community_user_stats WHERE user_id = ?), 0),\r\n                COALESCE((SELECT reviews_given FROM community_user_stats WHERE user_id = ?), 0),\r\n                COALESCE((SELECT sources_downloaded FROM community_user_stats WHERE user_id = ?), 0),\r\n                COALESCE((SELECT tags_created FROM community_user_stats WHERE user_id = ?), 0),\r\n                COALESCE((SELECT reputation_score FROM community_user_stats WHERE user_id = ?), 0),\r\n                COALESCE((SELECT contribution_level FROM community_user_stats WHERE user_id = ?), 'beginner'),\r\n                COALESCE((SELECT created_at FROM community_user_stats WHERE user_id = ?), strftime('%s', 'now') * 1000)\r\n            )\r\n        `).bind(\r\n            userId, userId, // for id generation\r\n            userId, // user_id\r\n            realStats.shared_count || 0, // shared_sources_count\r\n            Date.now(), // updated_at\r\n            userId, userId, userId, userId, userId, userId, userId, userId, userId // for COALESCE selects\r\n        ).run();\r\n        \r\n        console.log('\u7528\u6237\u7EDF\u8BA1\u66F4\u65B0\u6210\u529F\uFF0C\u65B0\u7684\u5206\u4EAB\u6570:', realStats.shared_count);\r\n        \r\n    } catch (error) {\r\n        console.error('\u66F4\u65B0\u7528\u6237\u7EDF\u8BA1\u5931\u8D25:', error);\r\n        // \u4E0D\u8981\u629B\u51FA\u9519\u8BEF\uFF0C\u907F\u514D\u5F71\u54CD\u4E3B\u5220\u9664\u64CD\u4F5C\r\n    }\r\n}", "// src/handlers/community.js - \u793E\u533A\u76F8\u5173\u8DEF\u7531\u5904\u7406\u5668\r\nimport { utils } from '../utils.js';\r\nimport { authenticate } from '../middleware.js';\r\nimport { updateUserStatsAfterDelete } from '../services/services.js';\r\n\r\n// ===================== \u6807\u7B7E\u7BA1\u7406\u76F8\u5173 =====================\r\n\r\n// \u83B7\u53D6\u6807\u7B7E\u5217\u8868\r\nexport async function communityGetTagsHandler(request, env) {\r\n    try {\r\n        const url = new URL(request.url);\r\n        const onlyActive = url.searchParams.get('active') !== 'false';\r\n        \r\n        let whereConditions = [];\r\n        let params = [];\r\n        \r\n        if (onlyActive) {\r\n            whereConditions.push('cst.tag_active = ?');\r\n            params.push(1);\r\n        }\r\n        \r\n        let query = `\r\n            SELECT \r\n                cst.id,\r\n                cst.tag_name,\r\n                cst.tag_description,\r\n                cst.tag_color,\r\n                cst.usage_count,\r\n                cst.is_official,\r\n                cst.tag_active,\r\n                cst.created_by,\r\n                u.username as creator_name,\r\n                cst.created_at,\r\n                cst.updated_at\r\n            FROM community_source_tags cst\r\n            LEFT JOIN users u ON cst.created_by = u.id\r\n        `;\r\n        \r\n        if (whereConditions.length > 0) {\r\n            query += ` WHERE ${whereConditions.join(' AND ')}`;\r\n        }\r\n        \r\n        query += ` ORDER BY cst.is_official DESC, cst.usage_count DESC, cst.created_at DESC`;\r\n        \r\n        const result = await env.DB.prepare(query).bind(...params).all();\r\n        \r\n        const tags = result.results.map(tag => ({\r\n            id: tag.id,\r\n            name: tag.tag_name,\r\n            description: tag.tag_description,\r\n            color: tag.tag_color,\r\n            usageCount: tag.usage_count || 0,\r\n            isOfficial: Boolean(tag.is_official),\r\n            isActive: Boolean(tag.tag_active),\r\n            creator: {\r\n                id: tag.created_by,\r\n                name: tag.creator_name || 'System'\r\n            },\r\n            createdAt: tag.created_at,\r\n            updatedAt: tag.updated_at\r\n        }));\r\n        \r\n        return utils.successResponse({ \r\n            tags,\r\n            total: tags.length\r\n        });\r\n        \r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u6807\u7B7E\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u83B7\u53D6\u6807\u7B7E\u5931\u8D25: ' + error.message, 500);\r\n    }\r\n}\r\n\r\n// \u521B\u5EFA\u6807\u7B7E\r\nexport async function communityCreateTagHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    \r\n    try {\r\n        const body = await request.json().catch(() => ({}));\r\n        const { name, description, color } = body;\r\n        \r\n        if (!name || typeof name !== 'string' || name.trim().length === 0) {\r\n            return utils.errorResponse('\u6807\u7B7E\u540D\u79F0\u4E0D\u80FD\u4E3A\u7A7A', 400);\r\n        }\r\n        \r\n        const trimmedName = name.trim();\r\n        \r\n        if (trimmedName.length < 2 || trimmedName.length > 20) {\r\n            return utils.errorResponse('\u6807\u7B7E\u540D\u79F0\u957F\u5EA6\u5FC5\u987B\u57282-20\u4E2A\u5B57\u7B26\u4E4B\u95F4', 400);\r\n        }\r\n        \r\n        if (!/^[\\u4e00-\\u9fa5\\w\\s\\-]{2,20}$/.test(trimmedName)) {\r\n            return utils.errorResponse('\u6807\u7B7E\u540D\u79F0\u53EA\u80FD\u5305\u542B\u4E2D\u6587\u3001\u82F1\u6587\u3001\u6570\u5B57\u3001\u7A7A\u683C\u548C\u77ED\u6A2A\u7EBF', 400);\r\n        }\r\n        \r\n        const validColor = color && /^#[0-9a-fA-F]{6}$/.test(color) ? color : '#3b82f6';\r\n        \r\n        // \u79FB\u9664try-catch\uFF0C\u76F4\u63A5\u4F7F\u7528\u6B63\u786E\u7684\u5B57\u6BB5\u540D\r\n        const existingTag = await env.DB.prepare(`\r\n            SELECT id FROM community_source_tags WHERE LOWER(tag_name) = LOWER(?)\r\n        `).bind(trimmedName).first();\r\n        \r\n        if (existingTag) {\r\n            return utils.errorResponse('\u6807\u7B7E\u540D\u79F0\u5DF2\u5B58\u5728\uFF0C\u8BF7\u4F7F\u7528\u5176\u4ED6\u540D\u79F0', 400);\r\n        }\r\n        \r\n        const userTagCount = await env.DB.prepare(`\r\n            SELECT COUNT(*) as count FROM community_source_tags \r\n            WHERE created_by = ? AND tag_active = 1\r\n        `).bind(user.id).first().catch(() => ({ count: 0 }));\r\n        \r\n        const maxTagsPerUser = parseInt(env.MAX_TAGS_PER_USER || '50');\r\n        if (userTagCount.count >= maxTagsPerUser) {\r\n            return utils.errorResponse(`\u6BCF\u4E2A\u7528\u6237\u6700\u591A\u53EA\u80FD\u521B\u5EFA${maxTagsPerUser}\u4E2A\u6807\u7B7E`, 400);\r\n        }\r\n        \r\n        const tagId = utils.generateId();\r\n        const now = Date.now();\r\n        \r\n        // \u79FB\u9664try-catch\uFF0C\u76F4\u63A5\u4F7F\u7528\u6B63\u786E\u7684\u5B57\u6BB5\u540D\r\n        await env.DB.prepare(`\r\n            INSERT INTO community_source_tags (\r\n                id, tag_name, tag_description, tag_color, usage_count, \r\n                is_official, tag_active, created_by, created_at, updated_at\r\n            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n        `).bind(\r\n            tagId, trimmedName, description?.trim() || '', validColor, 0, \r\n            0, 1, user.id, now, now\r\n        ).run();\r\n        \r\n        await utils.logUserAction(env, user.id, 'tag_created', {\r\n            tagId,\r\n            tagName: trimmedName\r\n        }, request);\r\n        \r\n        return utils.successResponse({\r\n            message: '\u6807\u7B7E\u521B\u5EFA\u6210\u529F',\r\n            tag: {\r\n                id: tagId,\r\n                name: trimmedName,\r\n                description: description?.trim() || '',\r\n                color: validColor,\r\n                usageCount: 0,\r\n                isOfficial: false,\r\n                isActive: true,\r\n                creator: {\r\n                    id: user.id,\r\n                    name: user.username\r\n                },\r\n                createdAt: now\r\n            }\r\n        });\r\n        \r\n    } catch (error) {\r\n        console.error('\u521B\u5EFA\u6807\u7B7E\u5931\u8D25:', error);\r\n        \r\n        let errorMessage = '\u521B\u5EFA\u6807\u7B7E\u5931\u8D25';\r\n        if (error.message.includes('UNIQUE constraint')) {\r\n            errorMessage = '\u6807\u7B7E\u540D\u79F0\u5DF2\u5B58\u5728\uFF0C\u8BF7\u4F7F\u7528\u5176\u4ED6\u540D\u79F0';\r\n        } else if (error.message.includes('SQLITE_ERROR')) {\r\n            errorMessage = 'SQLite\u6570\u636E\u5E93\u9519\u8BEF\uFF0C\u8BF7\u68C0\u67E5\u670D\u52A1\u5668\u72B6\u6001';\r\n        } else {\r\n            errorMessage += ': ' + error.message;\r\n        }\r\n        \r\n        return utils.errorResponse(errorMessage, 500);\r\n    }\r\n}\r\n\r\n// \u66F4\u65B0\u6807\u7B7E\r\nexport async function communityUpdateTagHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    \r\n    try {\r\n        const tagId = request.params?.id;\r\n        \r\n        if (!tagId) {\r\n            return utils.errorResponse('\u6807\u7B7EID\u4E0D\u80FD\u4E3A\u7A7A', 400);\r\n        }\r\n        \r\n        const existingTag = await env.DB.prepare(`\r\n            SELECT * FROM community_source_tags WHERE id = ?\r\n        `).bind(tagId).first();\r\n        \r\n        if (!existingTag) {\r\n            return utils.errorResponse('\u6807\u7B7E\u4E0D\u5B58\u5728', 404);\r\n        }\r\n        \r\n        if (existingTag.created_by !== user.id && !existingTag.is_official) {\r\n            const userPermissions = JSON.parse(user.permissions || '[]');\r\n            if (!userPermissions.includes('admin') && !userPermissions.includes('tag_manage')) {\r\n                return utils.errorResponse('\u65E0\u6743\u4FEE\u6539\u6B64\u6807\u7B7E', 403);\r\n            }\r\n        }\r\n        \r\n        const body = await request.json().catch(() => ({}));\r\n        const { name, description, color, isActive } = body;\r\n        \r\n        if (name !== undefined) {\r\n            const trimmedName = name.trim();\r\n            if (trimmedName.length < 2 || trimmedName.length > 20) {\r\n                return utils.errorResponse('\u6807\u7B7E\u540D\u79F0\u957F\u5EA6\u5FC5\u987B\u57282-20\u4E2A\u5B57\u7B26\u4E4B\u95F4', 400);\r\n            }\r\n            \r\n            const duplicateTag = await env.DB.prepare(`\r\n                SELECT id FROM community_source_tags \r\n                WHERE LOWER(tag_name) = LOWER(?) AND id != ?\r\n            `).bind(trimmedName, tagId).first();\r\n            \r\n            if (duplicateTag) {\r\n                return utils.errorResponse('\u6807\u7B7E\u540D\u79F0\u5DF2\u5B58\u5728\uFF0C\u8BF7\u4F7F\u7528\u5176\u4ED6\u540D\u79F0', 400);\r\n            }\r\n        }\r\n        \r\n        let validColor = existingTag.tag_color;\r\n        if (color && /^#[0-9a-fA-F]{6}$/.test(color)) {\r\n            validColor = color;\r\n        } else if (color) {\r\n            return utils.errorResponse('\u989C\u8272\u683C\u5F0F\u4E0D\u6B63\u786E', 400);\r\n        }\r\n        \r\n        const now = Date.now();\r\n        \r\n        const updates = [];\r\n        const params = [];\r\n        \r\n        if (name !== undefined && name.trim() !== existingTag.tag_name) {\r\n            updates.push('tag_name = ?');\r\n            params.push(name.trim());\r\n        }\r\n        \r\n        if (description !== undefined && description.trim() !== (existingTag.tag_description || '')) {\r\n            updates.push('tag_description = ?');\r\n            params.push(description.trim());\r\n        }\r\n        \r\n        if (color !== undefined && color !== existingTag.tag_color) {\r\n            updates.push('tag_color = ?');\r\n            params.push(validColor);\r\n        }\r\n        \r\n        if (isActive !== undefined && Boolean(isActive) !== Boolean(existingTag.tag_active)) {\r\n            updates.push('tag_active = ?');\r\n            params.push(isActive ? 1 : 0);\r\n        }\r\n        \r\n        if (updates.length === 0) {\r\n            return utils.errorResponse('\u6CA1\u6709\u9700\u8981\u66F4\u65B0\u7684\u5185\u5BB9', 400);\r\n        }\r\n        \r\n        updates.push('updated_at = ?');\r\n        params.push(now);\r\n        params.push(tagId);\r\n        \r\n        const updateQuery = `\r\n            UPDATE community_source_tags \r\n            SET ${updates.join(', ')}\r\n            WHERE id = ?\r\n        `;\r\n        \r\n        await env.DB.prepare(updateQuery).bind(...params).run();\r\n        \r\n        await utils.logUserAction(env, user.id, 'tag_updated', {\r\n            tagId,\r\n            tagName: name || existingTag.tag_name,\r\n            changes: {\r\n                name: name !== undefined && name.trim() !== existingTag.tag_name,\r\n                description: description !== undefined,\r\n                color: color !== undefined,\r\n                isActive: isActive !== undefined\r\n            }\r\n        }, request);\r\n        \r\n        return utils.successResponse({\r\n            message: '\u6807\u7B7E\u66F4\u65B0\u6210\u529F',\r\n            tagId,\r\n            updatedFields: Object.keys(body).filter(key => ['name', 'description', 'color', 'isActive'].includes(key))\r\n        });\r\n        \r\n    } catch (error) {\r\n        console.error('\u66F4\u65B0\u6807\u7B7E\u5931\u8D25:', error);\r\n        \r\n        let errorMessage = '\u66F4\u65B0\u6807\u7B7E\u5931\u8D25';\r\n        if (error.message.includes('UNIQUE constraint')) {\r\n            errorMessage = '\u6807\u7B7E\u540D\u79F0\u5DF2\u5B58\u5728\uFF0C\u8BF7\u4F7F\u7528\u5176\u4ED6\u540D\u79F0';\r\n        } else {\r\n            errorMessage += ': ' + error.message;\r\n        }\r\n        \r\n        return utils.errorResponse(errorMessage, 500);\r\n    }\r\n}\r\n\r\n// \u5220\u9664\u6807\u7B7E\r\nexport async function communityDeleteTagHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    \r\n    try {\r\n        const tagId = request.params.id;\r\n        \r\n        if (!tagId) {\r\n            return utils.errorResponse('\u6807\u7B7EID\u4E0D\u80FD\u4E3A\u7A7A', 400);\r\n        }\r\n        \r\n        const existingTag = await env.DB.prepare(`\r\n            SELECT * FROM community_source_tags WHERE id = ?\r\n        `).bind(tagId).first();\r\n        \r\n        if (!existingTag) {\r\n            return utils.errorResponse('\u6807\u7B7E\u4E0D\u5B58\u5728', 404);\r\n        }\r\n        \r\n        if (existingTag.created_by !== user.id) {\r\n            return utils.errorResponse('\u65E0\u6743\u5220\u9664\u6B64\u6807\u7B7E', 403);\r\n        }\r\n        \r\n        if (existingTag.is_official) {\r\n            return utils.errorResponse('\u4E0D\u80FD\u5220\u9664\u5B98\u65B9\u6807\u7B7E', 403);\r\n        }\r\n        \r\n        if (existingTag.usage_count > 0) {\r\n            return utils.errorResponse('\u4E0D\u80FD\u5220\u9664\u6B63\u5728\u4F7F\u7528\u7684\u6807\u7B7E', 400);\r\n        }\r\n        \r\n        await env.DB.prepare(`\r\n            DELETE FROM community_source_tags WHERE id = ?\r\n        `).bind(tagId).run();\r\n        \r\n        await utils.logUserAction(env, user.id, 'tag_deleted', {\r\n            tagId,\r\n            tagName: existingTag.tag_name\r\n        }, request);\r\n        \r\n        return utils.successResponse({\r\n            message: '\u6807\u7B7E\u5220\u9664\u6210\u529F',\r\n            deletedId: tagId\r\n        });\r\n        \r\n    } catch (error) {\r\n        console.error('\u5220\u9664\u6807\u7B7E\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u5220\u9664\u6807\u7B7E\u5931\u8D25: ' + error.message, 500);\r\n    }\r\n}\r\n\r\n// ===================== \u793E\u533A\u641C\u7D22\u6E90\u76F8\u5173 =====================\r\n\r\n// \u83B7\u53D6\u793E\u533A\u641C\u7D22\u6E90\u5217\u8868\r\nexport async function communityGetSourcesHandler(request, env) {\r\n    try {\r\n        const url = new URL(request.url);\r\n        const page = Math.max(parseInt(url.searchParams.get('page') || '1'), 1);\r\n        const limit = Math.min(parseInt(url.searchParams.get('limit') || '20'), 50);\r\n        const offset = (page - 1) * limit;\r\n        \r\n        const category = url.searchParams.get('category') || 'all';\r\n        const sortBy = url.searchParams.get('sort') || 'created_at';\r\n        const order = url.searchParams.get('order') || 'desc';\r\n        const search = url.searchParams.get('search');\r\n        const tags = url.searchParams.get('tags');\r\n        const featured = url.searchParams.get('featured') === 'true';\r\n        const author = url.searchParams.get('author');\r\n        \r\n        console.log('\u83B7\u53D6\u793E\u533A\u641C\u7D22\u6E90\u5217\u8868:', { \r\n            page, limit, category, sortBy, order, search, author, featured, tags\r\n        });\r\n        \r\n        let whereConditions = ['css.status = ?'];\r\n        let params = ['active'];\r\n        \r\n        if (category !== 'all') {\r\n            whereConditions.push('css.source_category = ?');\r\n            params.push(category);\r\n        }\r\n        \r\n        if (search && search.trim()) {\r\n            whereConditions.push('(css.source_name LIKE ? OR css.description LIKE ?)');\r\n            const searchPattern = `%${search.trim()}%`;\r\n            params.push(searchPattern, searchPattern);\r\n        }\r\n        \r\n        if (author && author.trim()) {\r\n            whereConditions.push('u.username = ?');\r\n            params.push(author.trim());\r\n        }\r\n        \r\n        if (featured) {\r\n            whereConditions.push('css.is_featured = ?');\r\n            params.push(1);\r\n        }\r\n        \r\n        if (tags && tags.trim()) {\r\n            const tagIds = tags.split(',').map(t => t.trim()).filter(t => t.length > 0);\r\n            \r\n            if (tagIds.length > 0) {\r\n                console.log('\u6309\u6807\u7B7E\u8FC7\u6EE4\uFF0C\u6807\u7B7EIDs:', tagIds);\r\n                \r\n                const tagConditions = tagIds.map(() => \r\n                    `JSON_EXTRACT(css.tags, '$') LIKE ?`\r\n                ).join(' OR ');\r\n                \r\n                whereConditions.push(`(${tagConditions})`);\r\n                \r\n                tagIds.forEach(tagId => {\r\n                    params.push(`%\"${tagId}\"%`);\r\n                });\r\n            }\r\n        }\r\n        \r\n        const validSortColumns = ['created_at', 'updated_at', 'rating_score', 'download_count', 'like_count', 'view_count'];\r\n        const sortColumn = validSortColumns.includes(sortBy) ? sortBy : 'created_at';\r\n        const sortOrder = order.toLowerCase() === 'asc' ? 'ASC' : 'DESC';\r\n        \r\n        const countQuery = `\r\n            SELECT COUNT(*) as total \r\n            FROM community_shared_sources css\r\n            LEFT JOIN users u ON css.user_id = u.id\r\n            WHERE ${whereConditions.join(' AND ')}\r\n        `;\r\n        const countResult = await env.DB.prepare(countQuery).bind(...params).first();\r\n        const total = countResult.total || 0;\r\n        \r\n        const dataQuery = `\r\n            SELECT \r\n                css.*,\r\n                u.username as author_name,\r\n                (SELECT COUNT(*) FROM community_source_reviews WHERE shared_source_id = css.id) as review_count\r\n            FROM community_shared_sources css\r\n            LEFT JOIN users u ON css.user_id = u.id\r\n            WHERE ${whereConditions.join(' AND ')}\r\n            ORDER BY css.${sortColumn} ${sortOrder}\r\n            LIMIT ? OFFSET ?\r\n        `;\r\n        \r\n        const result = await env.DB.prepare(dataQuery).bind(...params, limit, offset).all();\r\n        \r\n        const allTagIds = [];\r\n        result.results.forEach(source => {\r\n            try {\r\n                const tagIds = source.tags ? JSON.parse(source.tags) : [];\r\n                allTagIds.push(...tagIds);\r\n            } catch (e) {\r\n                console.warn('\u89E3\u6790\u6807\u7B7EID\u5931\u8D25:', e);\r\n            }\r\n        });\r\n        \r\n        const uniqueTagIds = [...new Set(allTagIds)];\r\n        let tagMap = new Map();\r\n        \r\n    if (uniqueTagIds.length > 0) {\r\n    const tagQuery = `\r\n        SELECT id, tag_name as name, tag_color as color, is_official \r\n        FROM community_source_tags \r\n        WHERE id IN (${uniqueTagIds.map(() => '?').join(',')}) AND tag_active = 1\r\n    `;\r\n    const tagResult = await env.DB.prepare(tagQuery).bind(...uniqueTagIds).all();\r\n    \r\n    tagResult.results.forEach(tag => {\r\n        tagMap.set(tag.id, {\r\n            id: tag.id,\r\n            name: tag.name,\r\n            color: tag.color,\r\n            isOfficial: Boolean(tag.is_official)\r\n        });\r\n    });\r\n}\r\n        \r\n        const sources = result.results.map(source => {\r\n            let sourceTags = [];\r\n            \r\n            try {\r\n                const tagIds = source.tags ? JSON.parse(source.tags) : [];\r\n                sourceTags = tagIds.map(tagId => {\r\n                    const tagInfo = tagMap.get(tagId);\r\n                    return tagInfo || {\r\n                        id: tagId,\r\n                        name: `\u672A\u77E5\u6807\u7B7E-${tagId.slice(0, 8)}`,\r\n                        color: '#6b7280',\r\n                        isOfficial: false\r\n                    };\r\n                }).slice(0, 5);\r\n            } catch (e) {\r\n                console.warn('\u5904\u7406\u6E90\u6807\u7B7E\u65F6\u51FA\u9519:', e);\r\n                sourceTags = [];\r\n            }\r\n            \r\n            return {\r\n                id: source.id,\r\n                name: source.source_name,\r\n                subtitle: source.source_subtitle,\r\n                icon: source.source_icon,\r\n                urlTemplate: source.source_url_template,\r\n                category: source.source_category,\r\n                description: source.description,\r\n                tags: sourceTags,\r\n                author: {\r\n                    id: source.user_id,\r\n                    name: source.author_name\r\n                },\r\n                stats: {\r\n                    downloads: source.download_count || 0,\r\n                    likes: source.like_count || 0,\r\n                    views: source.view_count || 0,\r\n                    rating: source.rating_score || 0,\r\n                    reviewCount: source.review_count || 0\r\n                },\r\n                isVerified: Boolean(source.is_verified),\r\n                isFeatured: Boolean(source.is_featured),\r\n                createdAt: source.created_at,\r\n                updatedAt: source.updated_at,\r\n                lastTestedAt: source.last_tested_at\r\n            };\r\n        });\r\n        \r\n        const totalPages = Math.ceil(total / limit);\r\n        \r\n        return utils.successResponse({\r\n            sources,\r\n            pagination: {\r\n                page,\r\n                limit,\r\n                total,\r\n                totalPages,\r\n                hasNext: offset + limit < total,\r\n                hasPrev: page > 1\r\n            },\r\n            filters: {\r\n                category,\r\n                search,\r\n                author,\r\n                featured,\r\n                tags,\r\n                sort: sortBy,\r\n                order\r\n            }\r\n        });\r\n        \r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u793E\u533A\u641C\u7D22\u6E90\u5217\u8868\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u83B7\u53D6\u641C\u7D22\u6E90\u5217\u8868\u5931\u8D25: ' + error.message, 500);\r\n    }\r\n}\r\n\r\n// \u521B\u5EFA\u793E\u533A\u641C\u7D22\u6E90\r\nexport async function communityCreateSourceHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    \r\n    try {\r\n        const body = await request.json().catch(() => ({}));\r\n        const { name, subtitle, icon, urlTemplate, category, description, tags } = body;\r\n        \r\n        const missingFields = utils.validateRequiredParams(body, ['name', 'urlTemplate', 'category']);\r\n        if (missingFields.length > 0) {\r\n            return utils.errorResponse(`\u7F3A\u5C11\u5FC5\u586B\u5B57\u6BB5: ${missingFields.join(', ')}`);\r\n        }\r\n        \r\n        if (!urlTemplate.includes('{keyword}')) {\r\n            return utils.errorResponse('URL\u6A21\u677F\u5FC5\u987B\u5305\u542B{keyword}\u5360\u4F4D\u7B26');\r\n        }\r\n        \r\n        try {\r\n            new URL(urlTemplate.replace('{keyword}', 'test'));\r\n        } catch (error) {\r\n            return utils.errorResponse('URL\u683C\u5F0F\u65E0\u6548');\r\n        }\r\n        \r\n        const userShareCount = await env.DB.prepare(`\r\n            SELECT COUNT(*) as count FROM community_shared_sources \r\n            WHERE user_id = ? AND status IN ('active', 'pending')\r\n        `).bind(user.id).first();\r\n        \r\n        const maxShares = parseInt(env.COMMUNITY_MAX_SHARES_PER_USER || '50');\r\n        if (userShareCount.count >= maxShares) {\r\n            return utils.errorResponse(`\u6BCF\u4E2A\u7528\u6237\u6700\u591A\u53EA\u80FD\u5206\u4EAB${maxShares}\u4E2A\u641C\u7D22\u6E90`);\r\n        }\r\n        \r\n        const existingSource = await env.DB.prepare(`\r\n            SELECT id FROM community_shared_sources \r\n            WHERE (source_name = ? OR source_url_template = ?) \r\n            AND status = 'active'\r\n        `).bind(name, urlTemplate).first();\r\n        \r\n        if (existingSource) {\r\n            return utils.errorResponse('\u76F8\u540C\u540D\u79F0\u6216URL\u7684\u641C\u7D22\u6E90\u5DF2\u5B58\u5728');\r\n        }\r\n        \r\n        let processedTagIds = [];\r\nif (Array.isArray(tags) && tags.length > 0) {\r\n    const validTags = tags.slice(0, 10);\r\n    \r\n    if (validTags.length > 0) {\r\n        const tagQuery = `\r\n            SELECT id FROM community_source_tags \r\n            WHERE id IN (${validTags.map(() => '?').join(',')}) \r\n            AND tag_active = 1\r\n        `;\r\n        const tagResult = await env.DB.prepare(tagQuery).bind(...validTags).all();\r\n        processedTagIds = tagResult.results.map(tag => tag.id);\r\n    }\r\n}\r\n        \r\n        const sourceId = utils.generateId();\r\n        const now = Date.now();\r\n        \r\n        await env.DB.prepare(`\r\n            INSERT INTO community_shared_sources (\r\n                id, user_id, source_name, source_subtitle, source_icon, \r\n                source_url_template, source_category, description, tags,\r\n                status, created_at, updated_at\r\n            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n        `).bind(\r\n            sourceId, user.id, name.trim(), subtitle?.trim() || null, \r\n            icon?.trim() || '\uD83D\uDD0D', urlTemplate.trim(), category, \r\n            description?.trim() || null, JSON.stringify(processedTagIds),\r\n            env.COMMUNITY_REQUIRE_APPROVAL === 'true' ? 'pending' : 'active',\r\n            now, now\r\n        ).run();\r\n        \r\n        if (processedTagIds.length > 0) {\r\n            for (const tagId of processedTagIds) {\r\n                await env.DB.prepare(`\r\n                    UPDATE community_source_tags \r\n                    SET usage_count = usage_count + 1, updated_at = ?\r\n                    WHERE id = ?\r\n                `).bind(now, tagId).run();\r\n            }\r\n        }\r\n        \r\n        await utils.logUserAction(env, user.id, 'community_source_shared', {\r\n            sourceId,\r\n            sourceName: name,\r\n            category,\r\n            tagsCount: processedTagIds.length\r\n        }, request);\r\n        \r\n        const status = env.COMMUNITY_REQUIRE_APPROVAL === 'true' ? 'pending' : 'active';\r\n        const message = status === 'pending' ? \r\n            '\u641C\u7D22\u6E90\u5DF2\u63D0\u4EA4\uFF0C\u7B49\u5F85\u7BA1\u7406\u5458\u5BA1\u6838' : \r\n            '\u641C\u7D22\u6E90\u5206\u4EAB\u6210\u529F';\r\n        \r\n        return utils.successResponse({\r\n            message,\r\n            sourceId,\r\n            status\r\n        });\r\n        \r\n    } catch (error) {\r\n        console.error('\u5206\u4EAB\u641C\u7D22\u6E90\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u5206\u4EAB\u641C\u7D22\u6E90\u5931\u8D25: ' + error.message, 500);\r\n    }\r\n}\r\n\r\n// \u83B7\u53D6\u641C\u7D22\u6E90\u8BE6\u60C5\r\nexport async function communityGetSourceDetailHandler(request, env) {\r\n    try {\r\n        const sourceId = request.params.id;\r\n        \r\n        await env.DB.prepare(`\r\n            UPDATE community_shared_sources \r\n            SET view_count = view_count + 1 \r\n            WHERE id = ?\r\n        `).bind(sourceId).run();\r\n        \r\n        const sourceResult = await env.DB.prepare(`\r\n            SELECT \r\n                css.*,\r\n                u.username as author_name,\r\n                u.id as author_id,\r\n                cus.reputation_score as author_reputation,\r\n                cus.shared_sources_count as author_total_shares\r\n            FROM community_shared_sources css\r\n            LEFT JOIN users u ON css.user_id = u.id\r\n            LEFT JOIN community_user_stats cus ON css.user_id = cus.user_id\r\n            WHERE css.id = ? AND css.status = ?\r\n        `).bind(sourceId, 'active').first();\r\n        \r\n        if (!sourceResult) {\r\n            return utils.errorResponse('\u641C\u7D22\u6E90\u4E0D\u5B58\u5728', 404);\r\n        }\r\n        \r\n        const reviewsResult = await env.DB.prepare(`\r\n            SELECT \r\n                csr.*,\r\n                CASE WHEN csr.is_anonymous = 1 THEN '\u533F\u540D\u7528\u6237' ELSE u.username END as reviewer_name\r\n            FROM community_source_reviews csr\r\n            LEFT JOIN users u ON csr.user_id = u.id\r\n            WHERE csr.shared_source_id = ?\r\n            ORDER BY csr.created_at DESC\r\n            LIMIT 10\r\n        `).bind(sourceId).all();\r\n        \r\n        const reviews = reviewsResult.results.map(review => ({\r\n            id: review.id,\r\n            rating: review.rating,\r\n            comment: review.comment,\r\n            reviewerName: review.reviewer_name,\r\n            isAnonymous: Boolean(review.is_anonymous),\r\n            createdAt: review.created_at\r\n        }));\r\n        \r\n        let tagDetails = [];\r\n        const tagIds = sourceResult.tags ? JSON.parse(sourceResult.tags) : [];\r\n        \r\nif (tagIds.length > 0) {\r\n    const tagQuery = `\r\n        SELECT id, tag_name as name, tag_description as description, \r\n               tag_color as color, is_official, usage_count \r\n        FROM community_source_tags \r\n        WHERE id IN (${tagIds.map(() => '?').join(',')}) AND tag_active = 1\r\n    `;\r\n    const tagResult = await env.DB.prepare(tagQuery).bind(...tagIds).all();\r\n    \r\n    tagDetails = tagResult.results.map(tag => ({\r\n        id: tag.id,\r\n        name: tag.name,\r\n        description: tag.description,\r\n        color: tag.color,\r\n        isOfficial: Boolean(tag.is_official),\r\n        usageCount: tag.usage_count || 0\r\n    }));\r\n}\r\n        \r\n        const source = {\r\n            id: sourceResult.id,\r\n            name: sourceResult.source_name,\r\n            subtitle: sourceResult.source_subtitle,\r\n            icon: sourceResult.source_icon,\r\n            urlTemplate: sourceResult.source_url_template,\r\n            category: sourceResult.source_category,\r\n            description: sourceResult.description,\r\n            tags: tagDetails,\r\n            author: {\r\n                id: sourceResult.author_id,\r\n                name: sourceResult.author_name,\r\n                reputation: sourceResult.author_reputation || 0,\r\n                totalShares: sourceResult.author_total_shares || 0\r\n            },\r\n            stats: {\r\n                downloads: sourceResult.download_count,\r\n                likes: sourceResult.like_count,\r\n                views: sourceResult.view_count,\r\n                rating: sourceResult.rating_score,\r\n                reviewCount: sourceResult.rating_count\r\n            },\r\n            reviews,\r\n            isVerified: Boolean(sourceResult.is_verified),\r\n            isFeatured: Boolean(sourceResult.is_featured),\r\n            createdAt: sourceResult.created_at,\r\n            updatedAt: sourceResult.updated_at,\r\n            lastTestedAt: sourceResult.last_tested_at\r\n        };\r\n        \r\n        return utils.successResponse({ source });\r\n        \r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u641C\u7D22\u6E90\u8BE6\u60C5\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u83B7\u53D6\u641C\u7D22\u6E90\u8BE6\u60C5\u5931\u8D25', 500);\r\n    }\r\n}\r\n\r\n// \u66F4\u65B0\u641C\u7D22\u6E90\r\nexport async function communityUpdateSourceHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    \r\n    try {\r\n        const sourceId = request.params?.id;\r\n        \r\n        if (!sourceId || sourceId.length < 10) {\r\n            return utils.errorResponse('\u641C\u7D22\u6E90ID\u65E0\u6548', 400);\r\n        }\r\n\r\n        const existingSource = await env.DB.prepare(`\r\n            SELECT * FROM community_shared_sources \r\n            WHERE id = ? AND user_id = ?\r\n        `).bind(sourceId, user.id).first();\r\n        \r\n        if (!existingSource) {\r\n            return utils.errorResponse('\u641C\u7D22\u6E90\u4E0D\u5B58\u5728\u6216\u60A8\u65E0\u6743\u7F16\u8F91', 404);\r\n        }\r\n\r\n        const body = await request.json().catch(() => ({}));\r\n        const { name, subtitle, icon, description, tags, category } = body;\r\n\r\n        if (!name || name.trim().length < 2) {\r\n            return utils.errorResponse('\u641C\u7D22\u6E90\u540D\u79F0\u81F3\u5C11\u9700\u89812\u4E2A\u5B57\u7B26', 400);\r\n        }\r\n\r\n        if (category && !['jav', 'movie', 'torrent', 'other'].includes(category)) {\r\n            return utils.errorResponse('\u65E0\u6548\u7684\u5206\u7C7B', 400);\r\n        }\r\n\r\n        let processedTagIds = [];\r\nif (Array.isArray(tags)) {\r\n    const validTags = tags.slice(0, 10).filter(tagId => tagId && typeof tagId === 'string');\r\n    \r\n    if (validTags.length > 0) {\r\n        const tagQuery = `\r\n            SELECT id FROM community_source_tags \r\n            WHERE id IN (${validTags.map(() => '?').join(',')}) \r\n            AND tag_active = 1\r\n        `;\r\n        const tagResult = await env.DB.prepare(tagQuery).bind(...validTags).all();\r\n        processedTagIds = tagResult.results.map(tag => tag.id);\r\n    }\r\n}\r\n\r\n        const now = Date.now();\r\n        \r\n        await env.DB.prepare(`\r\n            UPDATE community_shared_sources SET\r\n                source_name = ?,\r\n                source_subtitle = ?,\r\n                source_icon = ?,\r\n                description = ?,\r\n                tags = ?,\r\n                source_category = ?,\r\n                updated_at = ?\r\n            WHERE id = ? AND user_id = ?\r\n        `).bind(\r\n            name.trim(),\r\n            subtitle?.trim() || existingSource.source_subtitle,\r\n            icon?.trim() || existingSource.source_icon,\r\n            description?.trim() || existingSource.description,\r\n            JSON.stringify(processedTagIds),\r\n            category || existingSource.source_category,\r\n            now,\r\n            sourceId,\r\n            user.id\r\n        ).run();\r\n\r\n        await utils.logUserAction(env, user.id, 'community_source_edited', {\r\n            sourceId,\r\n            sourceName: name,\r\n            changes: {\r\n                name: name !== existingSource.source_name,\r\n                subtitle: subtitle !== existingSource.source_subtitle,\r\n                description: description !== existingSource.description,\r\n                tags: JSON.stringify(processedTagIds) !== existingSource.tags,\r\n                category: category !== existingSource.source_category\r\n            }\r\n        }, request);\r\n\r\n        return utils.successResponse({\r\n            message: '\u641C\u7D22\u6E90\u66F4\u65B0\u6210\u529F',\r\n            sourceId,\r\n            updatedFields: Object.keys(body).filter(key => ['name', 'subtitle', 'icon', 'description', 'tags', 'category'].includes(key))\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u7F16\u8F91\u641C\u7D22\u6E90\u5931\u8D25:', error);\r\n        \r\n        let errorMessage = '\u7F16\u8F91\u641C\u7D22\u6E90\u5931\u8D25';\r\n        if (error.message.includes('UNIQUE constraint')) {\r\n            errorMessage = '\u641C\u7D22\u6E90\u540D\u79F0\u5DF2\u5B58\u5728\uFF0C\u8BF7\u4F7F\u7528\u5176\u4ED6\u540D\u79F0';\r\n        } else if (error.message.includes('FOREIGN KEY')) {\r\n            errorMessage = '\u6240\u9009\u6807\u7B7E\u4E0D\u5B58\u5728\uFF0C\u8BF7\u91CD\u65B0\u9009\u62E9';\r\n        } else {\r\n            errorMessage += ': ' + error.message;\r\n        }\r\n        \r\n        return utils.errorResponse(errorMessage, 500);\r\n    }\r\n}\r\n\r\n// \u5220\u9664\u641C\u7D22\u6E90\r\nexport async function communityDeleteSourceHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    \r\n    try {\r\n        let sourceId = request.params?.id;\r\n        \r\n        if (!sourceId) {\r\n            const url = new URL(request.url);\r\n            const pathParts = url.pathname.split('/');\r\n            sourceId = pathParts[pathParts.length - 1];\r\n        }\r\n        \r\n        console.log('\u5220\u9664\u641C\u7D22\u6E90ID:', sourceId);\r\n        \r\n        if (!sourceId || sourceId.length < 10) {\r\n            return utils.errorResponse('\u641C\u7D22\u6E90ID\u65E0\u6548', 400);\r\n        }\r\n\r\n        const source = await env.DB.prepare(`\r\n            SELECT id, user_id, source_name FROM community_shared_sources \r\n            WHERE id = ? AND user_id = ?\r\n        `).bind(sourceId, user.id).first();\r\n        \r\n        if (!source) {\r\n            return utils.errorResponse('\u641C\u7D22\u6E90\u4E0D\u5B58\u5728\u6216\u60A8\u65E0\u6743\u5220\u9664', 404);\r\n        }\r\n        \r\n        console.log('\u627E\u5230\u8981\u5220\u9664\u7684\u641C\u7D22\u6E90:', source.source_name);\r\n        \r\n        const deleteOperations = [];\r\n        \r\n        try {\r\n            const reviewsResult = await env.DB.prepare(`\r\n                DELETE FROM community_source_reviews WHERE shared_source_id = ?\r\n            `).bind(sourceId).run();\r\n            deleteOperations.push(`\u5220\u9664\u8BC4\u8BBA\u8BB0\u5F55: ${reviewsResult.changes}`);\r\n            \r\n            const likesResult = await env.DB.prepare(`\r\n                DELETE FROM community_source_likes WHERE shared_source_id = ?\r\n            `).bind(sourceId).run();\r\n            deleteOperations.push(`\u5220\u9664\u70B9\u8D5E\u8BB0\u5F55: ${likesResult.changes}`);\r\n            \r\n            const downloadsResult = await env.DB.prepare(`\r\n                DELETE FROM community_source_downloads WHERE shared_source_id = ?\r\n            `).bind(sourceId).run();\r\n            deleteOperations.push(`\u5220\u9664\u4E0B\u8F7D\u8BB0\u5F55: ${downloadsResult.changes}`);\r\n            \r\n            const reportsResult = await env.DB.prepare(`\r\n                DELETE FROM community_source_reports WHERE shared_source_id = ?\r\n            `).bind(sourceId).run();\r\n            deleteOperations.push(`\u5220\u9664\u4E3E\u62A5\u8BB0\u5F55: ${reportsResult.changes}`);\r\n            \r\n            const sourceResult = await env.DB.prepare(`\r\n                DELETE FROM community_shared_sources WHERE id = ? AND user_id = ?\r\n            `).bind(sourceId, user.id).run();\r\n            deleteOperations.push(`\u5220\u9664\u641C\u7D22\u6E90\u8BB0\u5F55: ${sourceResult.changes}`);\r\n            \r\n            if (sourceResult.changes === 0) {\r\n                throw new Error('\u5220\u9664\u5931\u8D25\uFF1A\u8BB0\u5F55\u4E0D\u5B58\u5728\u6216\u5DF2\u88AB\u5220\u9664');\r\n            }\r\n            \r\n            await updateUserStatsAfterDelete(env, user.id);\r\n            \r\n            console.log('\u5220\u9664\u64CD\u4F5C\u5B8C\u6210:', deleteOperations);\r\n            \r\n            await utils.logUserAction(env, user.id, 'community_source_deleted', {\r\n                sourceId,\r\n                sourceName: source.source_name,\r\n                deleteOperations\r\n            }, request).catch(error => {\r\n                console.warn('\u8BB0\u5F55\u7528\u6237\u884C\u4E3A\u5931\u8D25:', error);\r\n            });\r\n            \r\n            return utils.successResponse({\r\n                message: '\u641C\u7D22\u6E90\u5220\u9664\u6210\u529F',\r\n                deletedId: sourceId,\r\n                sourceName: source.source_name,\r\n                operations: deleteOperations\r\n            });\r\n            \r\n        } catch (deleteError) {\r\n            console.error('\u6267\u884C\u5220\u9664\u64CD\u4F5C\u65F6\u53D1\u751F\u9519\u8BEF:', deleteError);\r\n            throw deleteError;\r\n        }\r\n        \r\n    } catch (error) {\r\n        console.error('\u5220\u9664\u641C\u7D22\u6E90\u603B\u4F53\u5931\u8D25:', error);\r\n        \r\n        let errorMessage = '\u5220\u9664\u641C\u7D22\u6E90\u5931\u8D25';\r\n        \r\n        if (error.message.includes('GREATEST')) {\r\n            errorMessage = '\u6570\u636E\u5E93\u51FD\u6570\u4E0D\u517C\u5BB9\uFF0C\u7CFB\u7EDF\u6B63\u5728\u4FEE\u590D\u4E2D\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5';\r\n        } else if (error.message.includes('FOREIGN KEY')) {\r\n            errorMessage = '\u65E0\u6CD5\u5220\u9664\uFF1A\u5B58\u5728\u5173\u8054\u6570\u636E\uFF0C\u8BF7\u5148\u5904\u7406\u76F8\u5173\u5185\u5BB9';\r\n        } else if (error.message.includes('SQLITE_CONSTRAINT')) {\r\n            errorMessage = '\u5220\u9664\u5931\u8D25\uFF1A\u6570\u636E\u7EA6\u675F\u51B2\u7A81';\r\n        } else if (error.message.includes('database is locked')) {\r\n            errorMessage = '\u6570\u636E\u5E93\u5FD9\u788C\uFF0C\u8BF7\u7A0D\u540E\u91CD\u8BD5';\r\n        } else if (error.message.includes('no such table')) {\r\n            errorMessage = '\u6570\u636E\u5E93\u8868\u4E0D\u5B58\u5728\uFF0C\u8BF7\u8054\u7CFB\u7BA1\u7406\u5458';\r\n        } else {\r\n            errorMessage += ': ' + error.message;\r\n        }\r\n        \r\n        return utils.errorResponse(errorMessage, 500);\r\n    }\r\n}\r\n\r\n// \u4E0B\u8F7D\u641C\u7D22\u6E90\r\n// \u5B8C\u5168\u4FEE\u590D\u7248\u672C\u7684 communityDownloadSourceHandler \u51FD\u6570\r\n// \u5F7B\u5E95\u907F\u514D\u590D\u6742\u7684 LIKE \u6A21\u5F0F\uFF0C\u4F7F\u7528\u66F4\u5B89\u5168\u7684\u67E5\u8BE2\u65B9\u5F0F\r\n\r\nexport async function communityDownloadSourceHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    \r\n    try {\r\n        const sourceId = request.params.id;\r\n        \r\n        // \u83B7\u53D6\u793E\u533A\u641C\u7D22\u6E90\r\n        const source = await env.DB.prepare(`\r\n            SELECT * FROM community_shared_sources \r\n            WHERE id = ? AND status = 'active'\r\n        `).bind(sourceId).first();\r\n        \r\n        if (!source) {\r\n            return utils.errorResponse('\u641C\u7D22\u6E90\u4E0D\u5B58\u5728', 404);\r\n        }\r\n        \r\n        // \u65B9\u6CD51\uFF1A\u76F4\u63A5\u67E5\u8BE2\u907F\u514D\u590D\u6742\u6A21\u5F0F - \u68C0\u67E5\u662F\u5426\u5DF2\u6709\u76F8\u540C\u540D\u79F0\u6216URL\u7684\u6E90\r\n        const existingByNameOrUrl = await env.DB.prepare(`\r\n            SELECT id FROM search_sources \r\n            WHERE created_by = ? AND is_active = 1 AND (name = ? OR url_template = ?)\r\n        `).bind(user.id, source.source_name, source.source_url_template).first();\r\n        \r\n        if (existingByNameOrUrl) {\r\n            return utils.errorResponse('\u60A8\u5DF2\u7ECF\u6DFB\u52A0\u8FC7\u6B64\u641C\u7D22\u6E90\u6216\u76F8\u4F3C\u7684\u641C\u7D22\u6E90', 400);\r\n        }\r\n        \r\n        // \u65B9\u6CD52\uFF1A\u68C0\u67E5\u662F\u5426\u5DF2\u4ECE\u6B64\u793E\u533A\u6E90\u6DFB\u52A0\u8FC7 - \u907F\u514DJSON_EXTRACT\u548C\u590D\u6742LIKE\r\n        // \u83B7\u53D6\u7528\u6237\u6240\u6709\u641C\u7D22\u6E90\uFF0C\u7136\u540E\u5728\u5E94\u7528\u5C42\u68C0\u67E5\r\n        const userSources = await env.DB.prepare(`\r\n            SELECT id, supported_features FROM search_sources \r\n            WHERE created_by = ? AND is_active = 1\r\n        `).bind(user.id).all();\r\n        \r\n        // \u5728\u5E94\u7528\u5C42\u68C0\u67E5\u662F\u5426\u5DF2\u6DFB\u52A0\u8FC7\u6B64\u793E\u533A\u6E90\r\n        const alreadyAdded = userSources.results.some(userSource => {\r\n            try {\r\n                const features = userSource.supported_features ? JSON.parse(userSource.supported_features) : [];\r\n                return features.some(feature => \r\n                    typeof feature === 'string' && \r\n                    feature.includes('community_source_id') && \r\n                    feature.includes(sourceId)\r\n                );\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n        });\r\n        \r\n        if (alreadyAdded) {\r\n            return utils.errorResponse('\u60A8\u5DF2\u7ECF\u4ECE\u793E\u533A\u6DFB\u52A0\u8FC7\u6B64\u641C\u7D22\u6E90', 400);\r\n        }\r\n        \r\n        // \u5206\u7C7B\u6620\u5C04\u5173\u7CFB\r\n        const categoryMapping = {\r\n            'jav': 'database',\r\n            'movie': 'streaming',\r\n            'torrent': 'torrent',\r\n            'other': 'others'\r\n        };\r\n        \r\n        const categoryId = categoryMapping[source.source_category] || 'others';\r\n        \r\n        // \u9A8C\u8BC1\u5206\u7C7B\u662F\u5426\u5B58\u5728\r\n        const categoryExists = await env.DB.prepare(`\r\n            SELECT id FROM search_source_categories \r\n            WHERE id = ? AND is_active = 1\r\n        `).bind(categoryId).first();\r\n        \r\n        if (!categoryExists) {\r\n            throw new Error(`\u76EE\u6807\u5206\u7C7B ${categoryId} \u4E0D\u5B58\u5728`);\r\n        }\r\n        \r\n        // \u751F\u6210\u65B0\u7684\u641C\u7D22\u6E90ID\r\n        const newSourceId = utils.generateId();\r\n        const now = Date.now();\r\n        \r\n        // \u63D0\u53D6\u4E3B\u9875URL\r\n        let homepageUrl = null;\r\n        try {\r\n            const urlObj = new URL(source.source_url_template.replace('{keyword}', ''));\r\n            homepageUrl = `${urlObj.protocol}//${urlObj.host}`;\r\n        } catch (e) {\r\n            homepageUrl = null;\r\n        }\r\n        \r\n        // \u6784\u5EFA\u652F\u6301\u7684\u529F\u80FD\u6570\u7EC4 - \u4F7F\u7528\u7B80\u5355\u7684\u6807\u8BC6\u683C\u5F0F\r\n        const supportedFeatures = [\r\n            'community_source',\r\n            'custom_source'\r\n        ];\r\n        \r\n        // \u6DFB\u52A0\u793E\u533A\u6E90\u6807\u8BC6 - \u4F7F\u7528\u7B80\u5355\u683C\u5F0F\r\n        supportedFeatures.push(`community_source_id:${sourceId}`);\r\n        \r\n        if (source.description && source.description.trim()) {\r\n            supportedFeatures.push('description');\r\n        }\r\n        \r\n        // \u63D2\u5165\u5230\u641C\u7D22\u6E90\u8868\r\n        await env.DB.prepare(`\r\n            INSERT INTO search_sources (\r\n                id, category_id, name, subtitle, description, icon, url_template,\r\n                homepage_url, site_type, searchable, requires_keyword, search_priority,\r\n                supports_detail_extraction, extraction_quality, average_extraction_time,\r\n                supported_features, is_system, is_active, display_order, usage_count,\r\n                last_used_at, created_by, created_at, updated_at\r\n            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n        `).bind(\r\n            newSourceId,\r\n            categoryId,\r\n            source.source_name,\r\n            source.source_subtitle || null,\r\n            source.description || null,\r\n            source.source_icon || '\uD83D\uDD0D',\r\n            source.source_url_template,\r\n            homepageUrl,\r\n            'browse',\r\n            0, // searchable: \u9ED8\u8BA4\u4E0D\u53C2\u4E0E\u641C\u7D22\r\n            0, // requires_keyword: \u9ED8\u8BA4\u4E0D\u9700\u8981\u5173\u952E\u8BCD\r\n            5, // search_priority: \u9ED8\u8BA4\u4E2D\u7B49\u4F18\u5148\u7EA7\r\n            0, // supports_detail_extraction: \u9ED8\u8BA4\u4E0D\u652F\u6301\u8BE6\u60C5\u63D0\u53D6\r\n            'none', // extraction_quality\r\n            0, // average_extraction_time\r\n            JSON.stringify(supportedFeatures),\r\n            0, // is_system: \u7528\u6237\u81EA\u5B9A\u4E49\u6E90\r\n            1, // is_active: \u9ED8\u8BA4\u6FC0\u6D3B\r\n            999, // display_order\r\n            0, // usage_count\r\n            null, // last_used_at\r\n            user.id,\r\n            now,\r\n            now\r\n        ).run();\r\n        \r\n        // \u4E3A\u7528\u6237\u521B\u5EFA\u641C\u7D22\u6E90\u914D\u7F6E\r\n        const configId = utils.generateId();\r\n        await env.DB.prepare(`\r\n            INSERT INTO user_search_source_configs (\r\n                id, user_id, source_id, is_enabled, custom_priority,\r\n                custom_name, custom_subtitle, custom_icon, notes,\r\n                created_at, updated_at\r\n            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n        `).bind(\r\n            configId,\r\n            user.id,\r\n            newSourceId,\r\n            1, // is_enabled: \u9ED8\u8BA4\u53EF\u7528\r\n            null,\r\n            null,\r\n            null,\r\n            null,\r\n            `\u4ECE\u793E\u533A\u6DFB\u52A0\uFF1A${source.source_name}`,\r\n            now,\r\n            now\r\n        ).run();\r\n        \r\n        // \u8BB0\u5F55\u4E0B\u8F7D\u884C\u4E3A\r\n        const downloadId = utils.generateId();\r\n        const ip = utils.getClientIP(request);\r\n        const userAgent = request.headers.get('User-Agent') || '';\r\n        \r\n        await env.DB.prepare(`\r\n            INSERT INTO community_source_downloads (\r\n                id, shared_source_id, user_id, ip_address, user_agent, created_at\r\n            ) VALUES (?, ?, ?, ?, ?, ?)\r\n        `).bind(downloadId, sourceId, user.id, ip, userAgent, now).run();\r\n        \r\n        // \u66F4\u65B0\u4E0B\u8F7D\u8BA1\u6570\r\n        await env.DB.prepare(`\r\n            UPDATE community_shared_sources \r\n            SET download_count = download_count + 1 \r\n            WHERE id = ?\r\n        `).bind(sourceId).run();\r\n        \r\n        // \u8BB0\u5F55\u7528\u6237\u884C\u4E3A\r\n        await utils.logUserAction(env, user.id, 'community_source_downloaded_v3', {\r\n            communitySourceId: sourceId,\r\n            newSourceId,\r\n            sourceName: source.source_name,\r\n            category: source.source_category,\r\n            mappedCategoryId: categoryId\r\n        }, request);\r\n        \r\n        // \u83B7\u53D6\u5B8C\u6574\u7684\u641C\u7D22\u6E90\u4FE1\u606F\r\n        const createdSource = await env.DB.prepare(`\r\n            SELECT \r\n                ss.*,\r\n                sc.name as category_name,\r\n                sc.icon as category_icon,\r\n                mc.name as major_category_name\r\n            FROM search_sources ss\r\n            LEFT JOIN search_source_categories sc ON ss.category_id = sc.id\r\n            LEFT JOIN search_major_categories mc ON sc.major_category_id = mc.id\r\n            WHERE ss.id = ?\r\n        `).bind(newSourceId).first();\r\n        \r\n        return utils.successResponse({\r\n            message: '\u641C\u7D22\u6E90\u5DF2\u6210\u529F\u6DFB\u52A0\u5230\u60A8\u7684\u641C\u7D22\u6E90\u7BA1\u7406',\r\n            sourceId: newSourceId,\r\n            communitySourceId: sourceId,\r\n            source: {\r\n                id: createdSource.id,\r\n                name: createdSource.name,\r\n                subtitle: createdSource.subtitle,\r\n                icon: createdSource.icon,\r\n                urlTemplate: createdSource.url_template,\r\n                category: {\r\n                    id: createdSource.category_id,\r\n                    name: createdSource.category_name,\r\n                    icon: createdSource.category_icon\r\n                },\r\n                majorCategory: {\r\n                    name: createdSource.major_category_name\r\n                },\r\n                description: createdSource.description,\r\n                isFromCommunity: true,\r\n                createdAt: createdSource.created_at\r\n            }\r\n        });\r\n        \r\n    } catch (error) {\r\n        console.error('\u4E0B\u8F7D\u641C\u7D22\u6E90\u5931\u8D25:', error);\r\n        \r\n        let errorMessage = '\u6DFB\u52A0\u641C\u7D22\u6E90\u5931\u8D25';\r\n        if (error.message.includes('UNIQUE constraint')) {\r\n            errorMessage = '\u641C\u7D22\u6E90\u5DF2\u5B58\u5728\uFF0C\u8BF7\u52FF\u91CD\u590D\u6DFB\u52A0';\r\n        } else if (error.message.includes('FOREIGN KEY')) {\r\n            errorMessage = '\u76EE\u6807\u5206\u7C7B\u4E0D\u5B58\u5728\uFF0C\u8BF7\u8054\u7CFB\u7BA1\u7406\u5458';\r\n        } else if (error.message.includes('\u76EE\u6807\u5206\u7C7B')) {\r\n            errorMessage = error.message;\r\n        } else {\r\n            errorMessage += ': ' + error.message;\r\n        }\r\n        \r\n        return utils.errorResponse(errorMessage, 500);\r\n    }\r\n}\r\n\r\n// \u70B9\u8D5E\u641C\u7D22\u6E90\r\nexport async function communityLikeSourceHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    \r\n    try {\r\n        const sourceId = request.params.id;\r\n        const body = await request.json().catch(() => ({}));\r\n        const likeType = body.type || 'like';\r\n        \r\n        if (!['like', 'favorite', 'bookmark'].includes(likeType)) {\r\n            return utils.errorResponse('\u65E0\u6548\u7684\u64CD\u4F5C\u7C7B\u578B');\r\n        }\r\n        \r\n        const source = await env.DB.prepare(`\r\n            SELECT id FROM community_shared_sources \r\n            WHERE id = ? AND status = 'active'\r\n        `).bind(sourceId).first();\r\n        \r\n        if (!source) {\r\n            return utils.errorResponse('\u641C\u7D22\u6E90\u4E0D\u5B58\u5728', 404);\r\n        }\r\n        \r\n        const existingLike = await env.DB.prepare(`\r\n            SELECT id FROM community_source_likes \r\n            WHERE shared_source_id = ? AND user_id = ? AND like_type = ?\r\n        `).bind(sourceId, user.id, likeType).first();\r\n        \r\n        if (existingLike) {\r\n            await env.DB.prepare(`\r\n                DELETE FROM community_source_likes \r\n                WHERE id = ?\r\n            `).bind(existingLike.id).run();\r\n            \r\n            return utils.successResponse({\r\n                message: `\u5DF2\u53D6\u6D88${likeType === 'like' ? '\u70B9\u8D5E' : '\u6536\u85CF'}`,\r\n                action: 'removed'\r\n            });\r\n        } else {\r\n            const likeId = utils.generateId();\r\n            await env.DB.prepare(`\r\n                INSERT INTO community_source_likes (\r\n                    id, shared_source_id, user_id, like_type, created_at\r\n                ) VALUES (?, ?, ?, ?, ?)\r\n            `).bind(likeId, sourceId, user.id, likeType, Date.now()).run();\r\n            \r\n            return utils.successResponse({\r\n                message: `${likeType === 'like' ? '\u70B9\u8D5E' : '\u6536\u85CF'}\u6210\u529F`,\r\n                action: 'added'\r\n            });\r\n        }\r\n        \r\n    } catch (error) {\r\n        console.error('\u70B9\u8D5E/\u6536\u85CF\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u64CD\u4F5C\u5931\u8D25: ' + error.message, 500);\r\n    }\r\n}\r\n\r\n// \u8BC4\u4EF7\u641C\u7D22\u6E90\r\nexport async function communityReviewSourceHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    \r\n    try {\r\n        const sourceId = request.params.id;\r\n        const body = await request.json().catch(() => ({}));\r\n        const { rating, comment, isAnonymous } = body;\r\n        \r\n        if (!rating || rating < 1 || rating > 5) {\r\n            return utils.errorResponse('\u8BC4\u5206\u5FC5\u987B\u57281-5\u4E4B\u95F4');\r\n        }\r\n        \r\n        const source = await env.DB.prepare(`\r\n            SELECT id, user_id FROM community_shared_sources \r\n            WHERE id = ? AND status = 'active'\r\n        `).bind(sourceId).first();\r\n        \r\n        if (!source) {\r\n            return utils.errorResponse('\u641C\u7D22\u6E90\u4E0D\u5B58\u5728', 404);\r\n        }\r\n        \r\n        if (source.user_id === user.id) {\r\n            return utils.errorResponse('\u4E0D\u80FD\u8BC4\u4EF7\u81EA\u5DF1\u5206\u4EAB\u7684\u641C\u7D22\u6E90');\r\n        }\r\n        \r\n        const existingReview = await env.DB.prepare(`\r\n            SELECT id FROM community_source_reviews \r\n            WHERE shared_source_id = ? AND user_id = ?\r\n        `).bind(sourceId, user.id).first();\r\n        \r\n        if (existingReview) {\r\n            await env.DB.prepare(`\r\n                UPDATE community_source_reviews \r\n                SET rating = ?, comment = ?, is_anonymous = ?, updated_at = ?\r\n                WHERE id = ?\r\n            `).bind(rating, comment?.trim() || null, Boolean(isAnonymous), Date.now(), existingReview.id).run();\r\n            \r\n            return utils.successResponse({\r\n                message: '\u8BC4\u4EF7\u66F4\u65B0\u6210\u529F'\r\n            });\r\n        } else {\r\n            const reviewId = utils.generateId();\r\n            await env.DB.prepare(`\r\n                INSERT INTO community_source_reviews (\r\n                    id, shared_source_id, user_id, rating, comment, is_anonymous, created_at, updated_at\r\n                ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\r\n            `).bind(reviewId, sourceId, user.id, rating, comment?.trim() || null, Boolean(isAnonymous), Date.now(), Date.now()).run();\r\n            \r\n            return utils.successResponse({\r\n                message: '\u8BC4\u4EF7\u63D0\u4EA4\u6210\u529F'\r\n            });\r\n        }\r\n        \r\n    } catch (error) {\r\n        console.error('\u63D0\u4EA4\u8BC4\u4EF7\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u63D0\u4EA4\u8BC4\u4EF7\u5931\u8D25: ' + error.message, 500);\r\n    }\r\n}\r\n\r\n// \u4E3E\u62A5\u641C\u7D22\u6E90\r\nexport async function communityReportSourceHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    \r\n    try {\r\n        const sourceId = request.params.id;\r\n        const body = await request.json().catch(() => ({}));\r\n        const { reason, details } = body;\r\n        \r\n        if (!reason || typeof reason !== 'string' || reason.trim().length === 0) {\r\n            return utils.errorResponse('\u4E3E\u62A5\u539F\u56E0\u4E0D\u80FD\u4E3A\u7A7A');\r\n        }\r\n        \r\n        const source = await env.DB.prepare(`\r\n            SELECT id FROM community_shared_sources WHERE id = ?\r\n        `).bind(sourceId).first();\r\n        \r\n        if (!source) {\r\n            return utils.errorResponse('\u641C\u7D22\u6E90\u4E0D\u5B58\u5728', 404);\r\n        }\r\n        \r\n        const reportId = utils.generateId();\r\n        await env.DB.prepare(`\r\n            INSERT INTO community_source_reports (\r\n                id, shared_source_id, reporter_user_id, report_reason, \r\n                report_details, status, created_at, updated_at\r\n            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\r\n        `).bind(reportId, sourceId, user.id, reason.trim(), details?.trim() || null, 'pending', Date.now(), Date.now()).run();\r\n        \r\n        return utils.successResponse({\r\n            message: '\u4E3E\u62A5\u5DF2\u63D0\u4EA4\uFF0C\u6211\u4EEC\u4F1A\u5C3D\u5FEB\u5904\u7406'\r\n        });\r\n        \r\n    } catch (error) {\r\n        console.error('\u63D0\u4EA4\u4E3E\u62A5\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u63D0\u4EA4\u4E3E\u62A5\u5931\u8D25: ' + error.message, 500);\r\n    }\r\n}\r\n\r\n// \u7528\u6237\u793E\u533A\u7EDF\u8BA1\r\nexport async function communityUserStatsHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    \r\n    try {\r\n        const statsResult = await env.DB.prepare(`\r\n            SELECT * FROM community_user_stats WHERE user_id = ?\r\n        `).bind(user.id).first();\r\n        \r\n        const sharedSourcesResult = await env.DB.prepare(`\r\n            SELECT \r\n                id, source_name, source_category, download_count, \r\n                like_count, view_count, rating_score, status, created_at\r\n            FROM community_shared_sources \r\n            WHERE user_id = ? AND status = 'active'\r\n            ORDER BY created_at DESC\r\n            LIMIT 10\r\n        `).bind(user.id).all();\r\n        \r\n        const realTimeStats = await env.DB.prepare(`\r\n            SELECT \r\n                (SELECT COUNT(*) FROM community_shared_sources WHERE user_id = ? AND status = 'active') as shared_count,\r\n                (SELECT COUNT(*) FROM community_source_downloads csd \r\n                 JOIN community_shared_sources css ON csd.shared_source_id = css.id \r\n                 WHERE css.user_id = ? AND css.status = 'active') as total_downloads,\r\n                (SELECT COUNT(*) FROM community_source_likes csl \r\n                 JOIN community_shared_sources css ON csl.shared_source_id = css.id \r\n                 WHERE css.user_id = ? AND css.status = 'active' AND csl.like_type = 'like') as total_likes,\r\n                (SELECT COALESCE(SUM(view_count), 0) FROM community_shared_sources \r\n                 WHERE user_id = ? AND status = 'active') as total_views,\r\n                (SELECT COUNT(*) FROM community_source_reviews WHERE user_id = ?) as reviews_given,\r\n                (SELECT COUNT(DISTINCT shared_source_id) FROM community_source_downloads WHERE user_id = ?) as sources_downloaded,\r\n                (SELECT COUNT(*) FROM community_source_tags WHERE created_by = ? AND tag_active = 1) as tags_created\r\n        `).bind(user.id, user.id, user.id, user.id, user.id, user.id, user.id).first();\r\n        \r\n        const useRealTime = !statsResult || \r\n            Math.abs((statsResult.total_downloads || 0) - realTimeStats.total_downloads) > 1 ||\r\n            Math.abs((statsResult.total_likes || 0) - realTimeStats.total_likes) > 1 ||\r\n            Math.abs((statsResult.total_views || 0) - realTimeStats.total_views) > 5;\r\n        \r\n        const stats = {\r\n            general: {\r\n                sharedSources: useRealTime ? realTimeStats.shared_count : (statsResult?.shared_sources_count || 0),\r\n                totalDownloads: useRealTime ? realTimeStats.total_downloads : (statsResult?.total_downloads || 0),\r\n                totalLikes: useRealTime ? realTimeStats.total_likes : (statsResult?.total_likes || 0),\r\n                totalViews: useRealTime ? realTimeStats.total_views : (statsResult?.total_views || 0),\r\n                reviewsGiven: useRealTime ? realTimeStats.reviews_given : (statsResult?.reviews_given || 0),\r\n                sourcesDownloaded: useRealTime ? realTimeStats.sources_downloaded : (statsResult?.sources_downloaded || 0),\r\n                tagsCreated: useRealTime ? realTimeStats.tags_created : (statsResult?.tags_created || 0),\r\n                reputationScore: statsResult?.reputation_score || 0,\r\n                contributionLevel: statsResult?.contribution_level || 'beginner'\r\n            },\r\n            recentShares: sharedSourcesResult.results.map(source => ({\r\n                id: source.id,\r\n                name: source.source_name,\r\n                category: source.source_category,\r\n                downloads: source.download_count,\r\n                likes: source.like_count,\r\n                views: source.view_count,\r\n                rating: source.rating_score,\r\n                status: source.status,\r\n                createdAt: source.created_at\r\n            }))\r\n        };\r\n        \r\n        if (useRealTime && statsResult) {\r\n            console.log('\u68C0\u6D4B\u5230\u7EDF\u8BA1\u6570\u636E\u4E0D\u4E00\u81F4\uFF0C\u89E6\u53D1\u7F13\u5B58\u66F4\u65B0');\r\n            env.DB.prepare(`\r\n                UPDATE community_user_stats \r\n                SET total_downloads = ?, total_likes = ?, total_views = ?, tags_created = ?, updated_at = ?\r\n                WHERE user_id = ?\r\n            `).bind(\r\n                realTimeStats.total_downloads,\r\n                realTimeStats.total_likes,\r\n                realTimeStats.total_views,\r\n                realTimeStats.tags_created,\r\n                Date.now(),\r\n                user.id\r\n            ).run().catch(error => {\r\n                console.error('\u66F4\u65B0\u7528\u6237\u7EDF\u8BA1\u7F13\u5B58\u5931\u8D25:', error);\r\n            });\r\n        }\r\n        \r\n        return utils.successResponse({ stats });\r\n        \r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u7528\u6237\u7EDF\u8BA1\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u83B7\u53D6\u7528\u6237\u7EDF\u8BA1\u5931\u8D25', 500);\r\n    }\r\n}\r\n\r\n// \u793E\u533A\u641C\u7D22\r\nexport async function communitySearchHandler(request, env) {\r\n    try {\r\n        const url = new URL(request.url);\r\n        const query = url.searchParams.get('q');\r\n        const category = url.searchParams.get('category') || 'all';\r\n        const limit = Math.min(parseInt(url.searchParams.get('limit') || '10'), 20);\r\n        const offset = Math.max(parseInt(url.searchParams.get('offset') || '0'), 0);\r\n        \r\n        if (!query || query.trim().length < 1) {\r\n            return utils.errorResponse('\u641C\u7D22\u5173\u952E\u8BCD\u4E0D\u80FD\u4E3A\u7A7A');\r\n        }\r\n        \r\n        const trimmedQuery = query.trim();\r\n        console.log('\u641C\u7D22\u793E\u533A\u5185\u5BB9:', { query: trimmedQuery, category, limit });\r\n        \r\n        let whereConditions = ['css.status = ?'];\r\n        let params = ['active'];\r\n        \r\n        whereConditions.push(`(\r\n            css.source_name LIKE ? OR \r\n            css.description LIKE ? OR \r\n            css.source_subtitle LIKE ? OR\r\n            EXISTS (\r\n                SELECT 1 FROM community_source_tags cst \r\n                WHERE cst.tag_name LIKE ? AND \r\n                JSON_EXTRACT(css.tags, '$[*]') LIKE '%' || cst.id || '%'\r\n            )\r\n        )`);\r\n        \r\n        const searchPattern = `%${trimmedQuery}%`;\r\n        params.push(searchPattern, searchPattern, searchPattern, searchPattern);\r\n        \r\n        if (category && category !== 'all') {\r\n            whereConditions.push('css.source_category = ?');\r\n            params.push(category);\r\n        }\r\n        \r\n        const searchQuery = `\r\n            SELECT \r\n                css.*,\r\n                u.username as author_name,\r\n                (SELECT COUNT(*) FROM community_source_reviews WHERE shared_source_id = css.id) as review_count,\r\n                (\r\n                    CASE \r\n                        WHEN css.source_name LIKE ? THEN 3\r\n                        WHEN css.source_subtitle LIKE ? THEN 2\r\n                        WHEN css.description LIKE ? THEN 1\r\n                        ELSE 0\r\n                    END\r\n                ) as relevance_score\r\n            FROM community_shared_sources css\r\n            LEFT JOIN users u ON css.user_id = u.id\r\n            WHERE ${whereConditions.join(' AND ')}\r\n            ORDER BY \r\n                relevance_score DESC,\r\n                css.is_featured DESC,\r\n                css.rating_score DESC,\r\n                css.download_count DESC,\r\n                css.created_at DESC\r\n            LIMIT ? OFFSET ?\r\n        `;\r\n        \r\n        const finalParams = [searchPattern, searchPattern, searchPattern, ...params, limit, offset];\r\n        \r\n        const result = await env.DB.prepare(searchQuery).bind(...finalParams).all();\r\n        \r\n        const countQuery = `\r\n            SELECT COUNT(*) as total\r\n            FROM community_shared_sources css\r\n            WHERE ${whereConditions.join(' AND ')}\r\n        `;\r\n        \r\n        const countResult = await env.DB.prepare(countQuery).bind(...params).first();\r\n        const total = countResult?.total || 0;\r\n        \r\n        const sources = result.results.map(source => ({\r\n            id: source.id,\r\n            name: source.source_name,\r\n            subtitle: source.source_subtitle,\r\n            icon: source.source_icon,\r\n            urlTemplate: source.source_url_template,\r\n            category: source.source_category,\r\n            description: source.description,\r\n            tags: source.tags ? JSON.parse(source.tags) : [],\r\n            author: {\r\n                id: source.user_id,\r\n                name: source.author_name\r\n            },\r\n            stats: {\r\n                downloads: source.download_count,\r\n                likes: source.like_count,\r\n                views: source.view_count,\r\n                rating: source.rating_score,\r\n                reviewCount: source.review_count\r\n            },\r\n            isVerified: Boolean(source.is_verified),\r\n            isFeatured: Boolean(source.is_featured),\r\n            createdAt: source.created_at,\r\n            relevanceScore: source.relevance_score\r\n        }));\r\n        \r\n        console.log(`\u641C\u7D22\u5B8C\u6210: \u627E\u5230 ${sources.length} \u4E2A\u7ED3\u679C\uFF0C\u603B\u8BA1 ${total} \u4E2A`);\r\n        \r\n        return utils.successResponse({ \r\n            sources, \r\n            query: trimmedQuery,\r\n            total,\r\n            limit,\r\n            offset,\r\n            hasMore: (offset + limit) < total,\r\n            category\r\n        });\r\n        \r\n    } catch (error) {\r\n        console.error('\u641C\u7D22\u793E\u533A\u641C\u7D22\u6E90\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u641C\u7D22\u5931\u8D25: ' + error.message, 500);\r\n    }\r\n}", "// src/handlers/user.js - \u7528\u6237\u76F8\u5173\u8DEF\u7531\u5904\u7406\u5668\uFF08\u5DF2\u79FB\u9664\u641C\u7D22\u6E90\u7BA1\u7406\u529F\u80FD\uFF09\r\nimport { utils } from '../utils.js';\r\nimport { authenticate } from '../middleware.js';\r\n\r\n// ===================== \u7528\u6237\u8BBE\u7F6E\u76F8\u5173 =====================\r\n\r\n// \u83B7\u53D6\u7528\u6237\u8BBE\u7F6E\r\nexport async function userGetSettingsHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const userRecord = await env.DB.prepare(`\r\n            SELECT settings FROM users WHERE id = ?\r\n        `).bind(user.id).first();\r\n\r\n        const settings = userRecord ? JSON.parse(userRecord.settings || '{}') : {};\r\n\r\n        return utils.successResponse({ \r\n            settings: {\r\n                theme: settings.theme || 'auto',\r\n                autoSync: settings.autoSync !== false,\r\n                cacheResults: settings.cacheResults !== false,\r\n                maxHistoryPerUser: settings.maxHistoryPerUser || 1000,\r\n                maxFavoritesPerUser: settings.maxFavoritesPerUser || 1000,\r\n                allowAnalytics: settings.allowAnalytics !== false,\r\n                searchSuggestions: settings.searchSuggestions !== false,\r\n                // \u79FB\u9664\u4E86 searchSources, customSearchSources, customSourceCategories \u76F8\u5173\u8BBE\u7F6E\r\n                // \u8FD9\u4E9B\u73B0\u5728\u901A\u8FC7\u72EC\u7ACB\u7684\u641C\u7D22\u6E90\u7BA1\u7406API\u5904\u7406\r\n                checkSourceStatus: settings.checkSourceStatus,\r\n                sourceStatusCheckTimeout: settings.sourceStatusCheckTimeout,\r\n                sourceStatusCacheDuration: settings.sourceStatusCacheDuration, \r\n                skipUnavailableSources: settings.skipUnavailableSources,\r\n                showSourceStatus: settings.showSourceStatus,\r\n                retryFailedSources: settings.retryFailedSources,\r\n                // \u4FDD\u7559\u5176\u4ED6\u7528\u6237\u4E2A\u4EBA\u8BBE\u7F6E\r\n                ...settings\r\n            }\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u7528\u6237\u8BBE\u7F6E\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u83B7\u53D6\u7528\u6237\u8BBE\u7F6E\u5931\u8D25', 500);\r\n    }\r\n}\r\n\r\n// \u66F4\u65B0\u7528\u6237\u8BBE\u7F6E\r\nexport async function userUpdateSettingsHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const body = await request.json().catch(() => ({}));\r\n        const { settings } = body;\r\n\r\n        if (!settings || typeof settings !== 'object') {\r\n            return utils.errorResponse('\u8BBE\u7F6E\u6570\u636E\u683C\u5F0F\u9519\u8BEF');\r\n        }\r\n\r\n        // \u79FB\u9664\u4E86\u641C\u7D22\u6E90\u76F8\u5173\u7684\u8BBE\u7F6E\u5B57\u6BB5\uFF0C\u8FD9\u4E9B\u73B0\u5728\u901A\u8FC7\u72EC\u7ACB\u7684\u641C\u7D22\u6E90\u7BA1\u7406API\u5904\u7406\r\n        const allowedSettings = [\r\n            'theme', \r\n            'autoSync', \r\n            'cacheResults', \r\n            'maxHistoryPerUser', \r\n            'maxFavoritesPerUser',\r\n            'allowAnalytics',\r\n            'searchSuggestions',\r\n            // \u79FB\u9664\u4E86: 'searchSources', 'customSearchSources', 'customSourceCategories'\r\n            'checkSourceStatus',\r\n            'sourceStatusCheckTimeout',\r\n            'sourceStatusCacheDuration', \r\n            'skipUnavailableSources',\r\n            'showSourceStatus',\r\n            'retryFailedSources'\r\n        ];\r\n        \r\n        const filteredSettings = {};\r\n        \r\n        Object.keys(settings).forEach(key => {\r\n            if (allowedSettings.includes(key)) {\r\n                filteredSettings[key] = settings[key];\r\n            }\r\n        });\r\n\r\n        // \u9A8C\u8BC1\u72B6\u6001\u68C0\u67E5\u76F8\u5173\u8BBE\u7F6E\r\n        if (filteredSettings.hasOwnProperty('sourceStatusCheckTimeout')) {\r\n            const timeout = Number(filteredSettings.sourceStatusCheckTimeout);\r\n            if (timeout < 1000 || timeout > 30000) {\r\n                return utils.errorResponse('\u72B6\u6001\u68C0\u67E5\u8D85\u65F6\u65F6\u95F4\u5FC5\u987B\u5728 1-30 \u79D2\u4E4B\u95F4');\r\n            }\r\n            filteredSettings.sourceStatusCheckTimeout = timeout;\r\n        }\r\n        \r\n        if (filteredSettings.hasOwnProperty('sourceStatusCacheDuration')) {\r\n            const cacheDuration = Number(filteredSettings.sourceStatusCacheDuration);\r\n            if (cacheDuration < 60000 || cacheDuration > 3600000) {\r\n                return utils.errorResponse('\u72B6\u6001\u7F13\u5B58\u65F6\u95F4\u5FC5\u987B\u5728 60-3600 \u79D2\u4E4B\u95F4');\r\n            }\r\n            filteredSettings.sourceStatusCacheDuration = cacheDuration;\r\n        }\r\n        \r\n        // \u9A8C\u8BC1\u5E03\u5C14\u503C\u8BBE\u7F6E\r\n        ['checkSourceStatus', 'skipUnavailableSources', 'showSourceStatus', 'retryFailedSources'].forEach(key => {\r\n            if (filteredSettings.hasOwnProperty(key)) {\r\n                filteredSettings[key] = Boolean(filteredSettings[key]);\r\n            }\r\n        });\r\n\r\n        // \u79FB\u9664\u4E86\u641C\u7D22\u6E90\u76F8\u5173\u7684\u9A8C\u8BC1\u903B\u8F91\r\n\r\n        const userRecord = await env.DB.prepare(`\r\n            SELECT settings FROM users WHERE id = ?\r\n        `).bind(user.id).first();\r\n\r\n        const currentSettings = userRecord ? JSON.parse(userRecord.settings || '{}') : {};\r\n        const updatedSettings = { ...currentSettings, ...filteredSettings };\r\n\r\n        await env.DB.prepare(`\r\n            UPDATE users SET settings = ?, updated_at = ? WHERE id = ?\r\n        `).bind(JSON.stringify(updatedSettings), Date.now(), user.id).run();\r\n\r\n        await utils.logUserAction(env, user.id, 'settings_update', {\r\n            changedFields: Object.keys(filteredSettings),\r\n            // \u79FB\u9664\u4E86\u641C\u7D22\u6E90\u76F8\u5173\u7684\u884C\u4E3A\u8BB0\u5F55\r\n            checkSourceStatusChanged: filteredSettings.hasOwnProperty('checkSourceStatus')\r\n        }, request);\r\n\r\n        return utils.successResponse({ \r\n            message: '\u8BBE\u7F6E\u66F4\u65B0\u6210\u529F',\r\n            settings: updatedSettings\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u66F4\u65B0\u7528\u6237\u8BBE\u7F6E\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u66F4\u65B0\u7528\u6237\u8BBE\u7F6E\u5931\u8D25: ' + error.message, 500);\r\n    }\r\n}\r\n\r\n// ===================== \u6536\u85CF\u5939\u76F8\u5173 =====================\r\n\r\n// \u540C\u6B65\u6536\u85CF\u5939\r\nexport async function userSyncFavoritesHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const body = await request.json().catch(() => ({}));\r\n        const { favorites } = body;\r\n\r\n        if (!Array.isArray(favorites)) {\r\n            return utils.errorResponse('\u6536\u85CF\u5939\u6570\u636E\u683C\u5F0F\u9519\u8BEF');\r\n        }\r\n\r\n        const maxFavorites = parseInt(env.MAX_FAVORITES_PER_USER || '1000');\r\n        if (favorites.length > maxFavorites) {\r\n            return utils.errorResponse(`\u6536\u85CF\u5939\u6570\u91CF\u4E0D\u80FD\u8D85\u8FC7 ${maxFavorites} \u4E2A`);\r\n        }\r\n\r\n        // \uD83D\uDD27 \u4F7F\u7528\u4E8B\u52A1\u786E\u4FDD\u6570\u636E\u4E00\u81F4\u6027\r\n        await env.DB.prepare(`DELETE FROM user_favorites WHERE user_id = ?`).bind(user.id).run();\r\n\r\n        for (const favorite of favorites) {\r\n            const favoriteId = favorite.id || utils.generateId();\r\n            \r\n            // \uD83D\uDD27 \u4FDD\u7559\u5BA2\u6237\u7AEF\u7684\u539F\u59CB\u65F6\u95F4\u6233\r\n            let createdAt = Date.now();\r\n            if (favorite.addedAt) {\r\n                // \u5982\u679C\u5BA2\u6237\u7AEF\u63D0\u4F9B\u4E86 addedAt\uFF0C\u8F6C\u6362\u5E76\u4F7F\u7528\u5B83\r\n                const clientTimestamp = new Date(favorite.addedAt).getTime();\r\n                if (!isNaN(clientTimestamp)) {\r\n                    createdAt = clientTimestamp;\r\n                }\r\n            } else if (favorite.created_at) {\r\n                // \u517C\u5BB9\u5176\u4ED6\u53EF\u80FD\u7684\u65F6\u95F4\u6233\u5B57\u6BB5\r\n                const clientTimestamp = new Date(favorite.created_at).getTime();\r\n                if (!isNaN(clientTimestamp)) {\r\n                    createdAt = clientTimestamp;\r\n                }\r\n            }\r\n            \r\n            await env.DB.prepare(`\r\n                INSERT INTO user_favorites (id, user_id, title, subtitle, url, icon, keyword, created_at, updated_at)\r\n                VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n            `).bind(\r\n                favoriteId, user.id, favorite.title || '', favorite.subtitle || '', \r\n                favorite.url || '', favorite.icon || '', favorite.keyword || '',\r\n                createdAt,  // \uD83D\uDD27 \u4F7F\u7528\u539F\u59CB\u65F6\u95F4\u6233\u800C\u4E0D\u662F Date.now()\r\n                Date.now()   // updated_at \u53EF\u4EE5\u4F7F\u7528\u5F53\u524D\u65F6\u95F4\r\n            ).run();\r\n        }\r\n\r\n        // \uD83D\uDD27 \u4E0D\u8FD4\u56DE\u5904\u7406\u540E\u7684\u6536\u85CF\u5217\u8868\uFF0C\u907F\u514D\u5BA2\u6237\u7AEF\u8986\u76D6\u672C\u5730\u6570\u636E\r\n        return utils.successResponse({ \r\n            message: '\u6536\u85CF\u5939\u540C\u6B65\u6210\u529F',\r\n            syncedCount: favorites.length\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u540C\u6B65\u6536\u85CF\u5939\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u540C\u6B65\u6536\u85CF\u5939\u5931\u8D25', 500);\r\n    }\r\n}\r\n\r\n// \u83B7\u53D6\u6536\u85CF\u5939\r\nexport async function userGetFavoritesHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const result = await env.DB.prepare(`\r\n            SELECT * FROM user_favorites WHERE user_id = ? ORDER BY created_at DESC\r\n        `).bind(user.id).all();\r\n\r\n        const favorites = result.results.map(fav => ({\r\n            id: fav.id,\r\n            title: fav.title,\r\n            subtitle: fav.subtitle,\r\n            url: fav.url,\r\n            icon: fav.icon,\r\n            keyword: fav.keyword,\r\n            addedAt: new Date(fav.created_at).toISOString(), // \u786E\u4FDD\u65F6\u95F4\u683C\u5F0F\u6B63\u786E\r\n            created_at: fav.created_at,  // \u4FDD\u7559\u539F\u59CB\u65F6\u95F4\u6233\u7528\u4E8E\u8C03\u8BD5\r\n            updated_at: fav.updated_at\r\n        }));\r\n\r\n        return utils.successResponse({ favorites });\r\n\r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u6536\u85CF\u5939\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u83B7\u53D6\u6536\u85CF\u5939\u5931\u8D25', 500);\r\n    }\r\n}\r\n\r\n\r\n// ===================== \u641C\u7D22\u5386\u53F2\u76F8\u5173 =====================\r\n\r\n// \u4FDD\u5B58\u641C\u7D22\u5386\u53F2\r\nexport async function userSaveSearchHistoryHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const body = await request.json().catch(() => ({}));\r\n        const { query, timestamp, source, resultCount } = body;\r\n\r\n        if (!query || typeof query !== 'string' || query.trim().length === 0) {\r\n            return utils.errorResponse('\u641C\u7D22\u5173\u952E\u8BCD\u4E0D\u80FD\u4E3A\u7A7A');\r\n        }\r\n\r\n        const trimmedQuery = query.trim();\r\n        \r\n        if (trimmedQuery.length > 200) {\r\n            return utils.errorResponse('\u641C\u7D22\u5173\u952E\u8BCD\u8FC7\u957F');\r\n        }\r\n\r\n        const maxHistory = parseInt(env.MAX_HISTORY_PER_USER || '1000');\r\n        \r\n        const countResult = await env.DB.prepare(`\r\n            SELECT COUNT(*) as count FROM user_search_history WHERE user_id = ?\r\n        `).bind(user.id).first();\r\n\r\n        if (countResult.count >= maxHistory) {\r\n            const deleteCount = countResult.count - maxHistory + 1;\r\n            await env.DB.prepare(`\r\n                DELETE FROM user_search_history \r\n                WHERE user_id = ? AND id IN (\r\n                    SELECT id FROM user_search_history \r\n                    WHERE user_id = ? \r\n                    ORDER BY created_at ASC \r\n                    LIMIT ?\r\n                )\r\n            `).bind(user.id, user.id, deleteCount).run();\r\n        }\r\n\r\n        const historyId = utils.generateId();\r\n        const now = timestamp || Date.now();\r\n\r\n        await env.DB.prepare(`\r\n            INSERT INTO user_search_history (id, user_id, query, source, results_count, created_at)\r\n            VALUES (?, ?, ?, ?, ?, ?)\r\n        `).bind(historyId, user.id, trimmedQuery, source || 'unknown', resultCount || 0, now).run();\r\n        \r\n        await utils.logUserAction(env, user.id, 'search', { query: trimmedQuery, source }, request);\r\n\r\n        return utils.successResponse({ \r\n            message: '\u641C\u7D22\u5386\u53F2\u4FDD\u5B58\u6210\u529F',\r\n            historyId \r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u4FDD\u5B58\u641C\u7D22\u5386\u53F2\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u4FDD\u5B58\u641C\u7D22\u5386\u53F2\u5931\u8D25: ' + error.message, 500);\r\n    }\r\n}\r\n\r\n// \u83B7\u53D6\u641C\u7D22\u5386\u53F2\r\nexport async function userGetSearchHistoryHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const url = new URL(request.url);\r\n        const limit = Math.min(parseInt(url.searchParams.get('limit') || '50'), 100);\r\n        const offset = Math.max(parseInt(url.searchParams.get('offset') || '0'), 0);\r\n\r\n        const result = await env.DB.prepare(`\r\n            SELECT * FROM user_search_history \r\n            WHERE user_id = ? \r\n            ORDER BY created_at DESC \r\n            LIMIT ? OFFSET ?\r\n        `).bind(user.id, limit, offset).all();\r\n\r\n        const history = result.results.map(item => ({\r\n            id: item.id,\r\n            keyword: item.query,\r\n            query: item.query,\r\n            source: item.source,\r\n            timestamp: item.created_at,\r\n            createdAt: new Date(item.created_at).toISOString()\r\n        }));\r\n\r\n        const countResult = await env.DB.prepare(`\r\n            SELECT COUNT(*) as total FROM user_search_history WHERE user_id = ?\r\n        `).bind(user.id).first();\r\n\r\n        return utils.successResponse({ \r\n            history,\r\n            searchHistory: history,\r\n            total: countResult.total,\r\n            limit,\r\n            offset,\r\n            hasMore: (offset + limit) < countResult.total\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u641C\u7D22\u5386\u53F2\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u83B7\u53D6\u641C\u7D22\u5386\u53F2\u5931\u8D25', 500);\r\n    }\r\n}\r\n\r\n// \u5220\u9664\u5355\u6761\u641C\u7D22\u5386\u53F2\r\nexport async function userDeleteSearchHistoryHandler(request, env) {\r\n    console.log('\uD83D\uDD27 \u5220\u9664\u5355\u6761\u5386\u53F2\u8DEF\u7531\u88AB\u8C03\u7528');\r\n    \r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const historyId = request.params?.id;\r\n        console.log('\uD83D\uDD27 \u83B7\u53D6\u5230\u7684\u5386\u53F2ID:', historyId);\r\n\r\n        if (!historyId || historyId.length < 10) {\r\n            return utils.errorResponse('\u5386\u53F2\u8BB0\u5F55ID\u683C\u5F0F\u65E0\u6548', 400);\r\n        }\r\n\r\n        const result = await env.DB.prepare(`\r\n            DELETE FROM user_search_history \r\n            WHERE id = ? AND user_id = ?\r\n        `).bind(historyId, user.id).run();\r\n\r\n        console.log('\uD83D\uDD27 \u5220\u9664\u7ED3\u679C:', result);\r\n\r\n        if (result.changes === 0) {\r\n            return utils.errorResponse('\u5386\u53F2\u8BB0\u5F55\u4E0D\u5B58\u5728\u6216\u65E0\u6743\u5220\u9664', 404);\r\n        }\r\n\r\n        await utils.logUserAction(env, user.id, 'history_delete', { \r\n            historyId,\r\n            deletedCount: 1 \r\n        }, request);\r\n\r\n        return utils.successResponse({ \r\n            message: '\u5220\u9664\u6210\u529F',\r\n            deletedId: historyId\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u5220\u9664\u641C\u7D22\u5386\u53F2\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u5220\u9664\u641C\u7D22\u5386\u53F2\u5931\u8D25', 500);\r\n    }\r\n}\r\n\r\n// \u6E05\u7A7A\u641C\u7D22\u5386\u53F2\r\nexport async function userClearSearchHistoryHandler(request, env) {\r\n    console.log('\uD83D\uDD27 \u6E05\u7A7A\u5386\u53F2\u8DEF\u7531\u88AB\u8C03\u7528');\r\n    \r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const url = new URL(request.url);\r\n        const operation = url.searchParams.get('operation');\r\n        \r\n        if (operation !== 'clear') {\r\n            return utils.errorResponse('\u8BF7\u6307\u5B9Aoperation=clear\u53C2\u6570\u4EE5\u786E\u8BA4\u6E05\u7A7A\u64CD\u4F5C', 400);\r\n        }\r\n\r\n        const countResult = await env.DB.prepare(`\r\n            SELECT COUNT(*) as count FROM user_search_history WHERE user_id = ?\r\n        `).bind(user.id).first();\r\n\r\n        const deletedCount = countResult.count || 0;\r\n\r\n        await env.DB.prepare(`\r\n            DELETE FROM user_search_history WHERE user_id = ?\r\n        `).bind(user.id).run();\r\n\r\n        await utils.logUserAction(env, user.id, 'history_clear', { \r\n            deletedCount \r\n        }, request);\r\n\r\n        return utils.successResponse({ \r\n            message: '\u641C\u7D22\u5386\u53F2\u5DF2\u6E05\u7A7A',\r\n            deletedCount\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u6E05\u7A7A\u641C\u7D22\u5386\u53F2\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u6E05\u7A7A\u641C\u7D22\u5386\u53F2\u5931\u8D25', 500);\r\n    }\r\n}\r\n\r\n// ===================== \u641C\u7D22\u7EDF\u8BA1\u76F8\u5173 =====================\r\n\r\n// \u83B7\u53D6\u641C\u7D22\u7EDF\u8BA1\r\nexport async function userGetSearchStatsHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const totalResult = await env.DB.prepare(`\r\n            SELECT COUNT(*) as total FROM user_search_history WHERE user_id = ?\r\n        `).bind(user.id).first();\r\n\r\n        const today = new Date();\r\n        today.setHours(0, 0, 0, 0);\r\n        const todayTimestamp = today.getTime();\r\n\r\n        const todayResult = await env.DB.prepare(`\r\n            SELECT COUNT(*) as today FROM user_search_history \r\n            WHERE user_id = ? AND created_at >= ?\r\n        `).bind(user.id, todayTimestamp).first();\r\n\r\n        const weekAgo = Date.now() - (7 * 24 * 60 * 60 * 1000);\r\n        const weekResult = await env.DB.prepare(`\r\n            SELECT COUNT(*) as week FROM user_search_history \r\n            WHERE user_id = ? AND created_at >= ?\r\n        `).bind(user.id, weekAgo).first();\r\n\r\n        const monthAgo = Date.now() - (30 * 24 * 60 * 60 * 1000);\r\n        const topQueriesResult = await env.DB.prepare(`\r\n            SELECT query, COUNT(*) as count \r\n            FROM user_search_history \r\n            WHERE user_id = ? AND created_at >= ?\r\n            GROUP BY query \r\n            ORDER BY count DESC \r\n            LIMIT 10\r\n        `).bind(user.id, monthAgo).all();\r\n\r\n        const topQueries = topQueriesResult.results.map(item => ({\r\n            query: item.query,\r\n            count: item.count\r\n        }));\r\n\r\n        return utils.successResponse({\r\n            total: totalResult.total,\r\n            today: todayResult.today,\r\n            thisWeek: weekResult.week,\r\n            topQueries\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u641C\u7D22\u7EDF\u8BA1\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u83B7\u53D6\u641C\u7D22\u7EDF\u8BA1\u5931\u8D25', 500);\r\n    }\r\n}", "// src/constants.js - \u4F18\u5316\u7248\u672C\uFF1A\u79FB\u9664\u786C\u7F16\u7801\u641C\u7D22\u6E90\u5B9A\u4E49\uFF0C\u4FDD\u7559\u7CFB\u7EDF\u7EA7\u522B\u7684\u4E0D\u53EF\u53D8\u914D\u7F6E\r\nexport const CONFIG = {\r\n    // \u7CFB\u7EDF\u7EA7\u522B\u7684\u6700\u5927\u9650\u5236\uFF08\u5B89\u5168\u76F8\u5173\uFF0C\u4E0D\u53EF\u4FEE\u6539\uFF09\r\n    MAX_TAGS_PER_USER: 50,\r\n    MAX_SHARES_PER_USER: 50,\r\n    MAX_FAVORITES_PER_USER: 1000,\r\n    MAX_HISTORY_PER_USER: 1000,\r\n    \r\n    // \u8BE6\u60C5\u63D0\u53D6\u7CFB\u7EDF\u7EA7\u522B\u914D\u7F6E\uFF08\u6280\u672F\u9650\u5236\uFF0C\u4E0D\u53EF\u4FEE\u6539\uFF09\r\n    DETAIL_EXTRACTION: {\r\n        // \u7CFB\u7EDF\u6280\u672F\u9650\u5236\r\n        MAX_BATCH_SIZE: 20,\r\n        MIN_BATCH_SIZE: 1,\r\n        MAX_TIMEOUT: 30000,\r\n        MIN_TIMEOUT: 5000,\r\n        MAX_CACHE_DURATION: 604800000, // 7\u5929\r\n        MIN_CACHE_DURATION: 3600000, // 1\u5C0F\u65F6\r\n        MAX_CONCURRENT_EXTRACTIONS: 4,\r\n        \r\n        // \u6027\u80FD\u548C\u5B89\u5168\u9650\u5236\r\n        PARSE_TIMEOUT: 10000,\r\n        MAX_RETRY_ATTEMPTS: 3,\r\n        RETRY_DELAY: 1000,\r\n        \r\n        // \u7F13\u5B58\u7CFB\u7EDF\u9650\u5236\r\n        CACHE_MAX_SIZE: 1000,\r\n        CACHE_CLEANUP_INTERVAL: 3600000, // 1\u5C0F\u65F6\r\n        HTML_PARSER_CACHE_SIZE: 100,\r\n        \r\n        // \u5185\u5BB9\u6570\u91CF\u9650\u5236\uFF08\u9632\u6B62\u8FC7\u8F7D\uFF09\r\n        MAX_GENERIC_LINKS_PER_PAGE: 150,\r\n        MAX_DOWNLOAD_LINKS: 15,\r\n        MAX_MAGNET_LINKS: 15,\r\n        MAX_SCREENSHOTS: 20,\r\n    },\r\n    \r\n    // \u7CFB\u7EDF\u884C\u4E3A\u679A\u4E3E\uFF08\u4E0D\u53EF\u53D8\uFF09\r\n    ALLOWED_ACTIONS: [\r\n        'search', 'login', 'logout', 'register', 'visit_site', 'copy_url',\r\n        'favorite_add', 'favorite_remove', 'settings_update', 'export_data',\r\n        'sync_data', 'page_view', 'session_start', 'session_end',\r\n        'custom_source_add', 'custom_source_edit', 'custom_source_delete',\r\n        'tag_created', 'tag_updated', 'tag_deleted',\r\n        'detail_extraction', 'batch_detail_extraction', 'detail_cache_access',\r\n        'detail_config_update', 'detail_cache_clear', 'detail_retry',\r\n        'download_click', 'magnet_click', 'copy_magnet', 'image_preview',\r\n        // \u65B0\u589E\uFF1A\u641C\u7D22\u6E90\u7BA1\u7406\u76F8\u5173\u884C\u4E3A\r\n        'major_category_create', 'major_category_update', 'major_category_delete',\r\n        'source_category_create', 'source_category_update', 'source_category_delete',\r\n        'search_source_create', 'search_source_update', 'search_source_delete',\r\n        'user_source_config_update', 'search_sources_export'\r\n    ]\r\n};\r\n\r\n// \u8BE6\u60C5\u63D0\u53D6\u72B6\u6001\u679A\u4E3E\uFF08\u7CFB\u7EDF\u7EA7\u522B\uFF0C\u4E0D\u53EF\u53D8\uFF09\r\nexport const DETAIL_EXTRACTION_STATUS = {\r\n    SUCCESS: 'success',\r\n    ERROR: 'error',\r\n    TIMEOUT: 'timeout',\r\n    CACHED: 'cached',\r\n    PARTIAL: 'partial'\r\n};\r\n\r\n// \u7CFB\u7EDF\u7EA7\u522B\u7684\u9A8C\u8BC1\u89C4\u5219\uFF08\u6280\u672F\u9650\u5236\uFF09\r\nexport const SYSTEM_VALIDATION = {\r\n    extractionTimeout: {\r\n        min: CONFIG.DETAIL_EXTRACTION.MIN_TIMEOUT,\r\n        max: CONFIG.DETAIL_EXTRACTION.MAX_TIMEOUT\r\n    },\r\n    cacheDuration: {\r\n        min: CONFIG.DETAIL_EXTRACTION.MIN_CACHE_DURATION,\r\n        max: CONFIG.DETAIL_EXTRACTION.MAX_CACHE_DURATION\r\n    },\r\n    extractionBatchSize: {\r\n        min: CONFIG.DETAIL_EXTRACTION.MIN_BATCH_SIZE,\r\n        max: CONFIG.DETAIL_EXTRACTION.MAX_BATCH_SIZE\r\n    },\r\n    maxDownloadLinks: {\r\n        min: 1,\r\n        max: CONFIG.DETAIL_EXTRACTION.MAX_DOWNLOAD_LINKS\r\n    },\r\n    maxMagnetLinks: {\r\n        min: 1,\r\n        max: CONFIG.DETAIL_EXTRACTION.MAX_MAGNET_LINKS\r\n    },\r\n    maxScreenshots: {\r\n        min: 1,\r\n        max: CONFIG.DETAIL_EXTRACTION.MAX_SCREENSHOTS\r\n    }\r\n};\r\n\r\n// \u641C\u7D22\u6E90\u76F8\u5173\u7684\u7CFB\u7EDF\u7EA7\u522B\u679A\u4E3E\uFF08\u6280\u672F\u9650\u5236\uFF0C\u4E0D\u53EF\u53D8\uFF09\r\nexport const SEARCH_SOURCE_ENUMS = {\r\n    // \u7F51\u7AD9\u7C7B\u578B\u679A\u4E3E\r\n    SITE_TYPES: {\r\n        SEARCH: 'search',       // \u641C\u7D22\u6E90\uFF08\u9700\u8981\u5173\u952E\u8BCD\uFF09\r\n        BROWSE: 'browse',       // \u6D4F\u89C8\u578B\u7F51\u7AD9\uFF08\u4E0D\u9700\u8981\u5173\u952E\u8BCD\uFF09  \r\n        REFERENCE: 'reference'  // \u53C2\u8003\u8D44\u6599\u7AD9\uFF08\u53EF\u9009\u5173\u952E\u8BCD\uFF09\r\n    },\r\n    \r\n    // \u8BE6\u60C5\u63D0\u53D6\u8D28\u91CF\u7B49\u7EA7\r\n    EXTRACTION_QUALITY: {\r\n        NONE: 'none',\r\n        POOR: 'poor',\r\n        FAIR: 'fair',\r\n        GOOD: 'good',\r\n        EXCELLENT: 'excellent'\r\n    },\r\n    \r\n    // \u63D0\u53D6\u4F18\u5148\u7EA7\r\n    EXTRACTION_PRIORITY: {\r\n        LOW: 'low',\r\n        MEDIUM: 'medium',\r\n        HIGH: 'high'\r\n    }\r\n};\r\n\r\n// \u652F\u6301\u7684\u6E90\u7C7B\u578B\uFF08\u7CFB\u7EDF\u7EA7\u522B\uFF0C\u7528\u4E8E\u8BE6\u60C5\u63D0\u53D6\uFF09\r\nexport const SUPPORTED_SOURCE_TYPES = {\r\n    javbus: 'javbus',\r\n    javdb: 'javdb', \r\n    jable: 'jable',\r\n    javmost: 'javmost',\r\n    javgg: 'javgg',\r\n    sukebei: 'sukebei',\r\n    javguru: 'javguru',\r\n    generic: 'generic'\r\n};\r\n\r\n// \u6E90\u57DF\u540D\u6A21\u5F0F\uFF08\u6280\u672F\u9650\u5236\uFF0C\u7528\u4E8E\u8BE6\u60C5\u63D0\u53D6\u8BC6\u522B\uFF0C\u4E0D\u53EF\u53D8\uFF09\r\nexport const SOURCE_DOMAIN_PATTERNS = {\r\n    javbus: [/^.*\\.javbus\\.com$/, /^javbus\\.com$/],\r\n    javdb: [/^.*\\.javdb\\.com$/, /^javdb\\.com$/],\r\n    jable: [/^.*\\.jable\\.tv$/, /^jable\\.tv$/],\r\n    javmost: [/^.*\\.javmost\\.com$/, /^javmost\\.com$/],\r\n    javgg: [/^.*\\.javgg\\.net$/, /^javgg\\.net$/],\r\n    sukebei: [/^.*\\.sukebei\\.nyaa\\.si$/, /^sukebei\\.nyaa\\.si$/],\r\n    javguru: [/^.*\\.jav\\.guru$/, /^jav\\.guru$/]\r\n};\r\n\r\n// \u8BE6\u60C5\u9875URL\u6A21\u5F0F\uFF08\u6280\u672F\u9650\u5236\uFF0C\u7528\u4E8E\u8BE6\u60C5\u63D0\u53D6\uFF0C\u4E0D\u53EF\u53D8\uFF09\r\nexport const DETAIL_URL_PATTERNS = {\r\n    javbus: [/\\/[A-Z]{2,6}-?\\d{3,6}(?:\\/|$)/i],\r\n    javdb: [/\\/v\\/[a-zA-Z0-9]+/],\r\n    jable: [/\\/videos\\/[^\\/\\?]+/],\r\n    javmost: [/\\/[A-Z]{2,6}-?\\d{3,6}[^\\/]*(?:\\/|$)/i],\r\n    javgg: [/\\/jav\\/[a-z0-9\\-]+/i],\r\n    sukebei: [/\\/view\\/\\d+/],\r\n    javguru: [/\\/\\d+\\/[a-z0-9\\-]+/i]\r\n};\r\n\r\n// \u641C\u7D22\u9875\u9762\u6392\u9664\u6A21\u5F0F\uFF08\u6280\u672F\u9650\u5236\uFF0C\u7528\u4E8E\u72B6\u6001\u68C0\u67E5\uFF0C\u4E0D\u53EF\u53D8\uFF09\r\nexport const SEARCH_EXCLUDE_PATTERNS = [\r\n    '/search/', '/search?', '?q=', '?s=', '?query=', '?keyword=',\r\n    '/page/', '/list/', '/category/', '/genre/', '/actresses/',\r\n    '/studio/', '/label/', '/uncensored/', '/forum/', '/doc/',\r\n    '/terms', '/privacy', '/login', '/register', '/user/', '/profile/',\r\n    '/settings/', '/en/', '/ja/', '/ko/', '/#', '.css', '.js', '.png',\r\n    '.jpg', '.gif', '.ico', 'javascript:', '/rss', '/sitemap', '/api/',\r\n    '/ajax/', '/admin/'\r\n];\r\n\r\n// \u5783\u573E\u57DF\u540D\u9ED1\u540D\u5355\uFF08\u5B89\u5168\u76F8\u5173\uFF0C\u4E0D\u53EF\u53D8\uFF09\r\nexport const SPAM_DOMAINS = [\r\n    'seedmm.cyou', 'busfan.cyou', 'dmmsee.ink', 'ph7zhi.vip', '8pla6t.vip',\r\n    'ltrpvkga.com', 'frozaflurkiveltra.com', 'shvaszc.cc', 'fpnylxm.cc',\r\n    'mvqttfwf.com', 'jempoprostoklimor.com', '128zha.cc', 'aciyopg.cc',\r\n    'mnaspm.com', 'asacp.org', 'pr0rze.vip', 'go.mnaspm.com'\r\n];\r\n\r\n// \u5BFC\u822A\u6587\u672C\u8FC7\u6EE4\u5217\u8868\uFF08\u6280\u672F\u9650\u5236\uFF0C\u4E0D\u53EF\u53D8\uFF09\r\nexport const NAVIGATION_TEXTS = [\r\n    'english', '\u4E2D\u6587', '\u65E5\u672C\u8A9E', '\uD55C\uAD6D\uC5B4', '\u6709\u78BC', '\u7121\u78BC', '\u5973\u512A', '\u985E\u5225',\r\n    '\u8AD6\u58C7', '\u4E0B\u4E00\u9875', '\u4E0A\u4E00\u9875', '\u9996\u9875', 'terms', 'privacy', '\u767B\u5165', '\u9AD8\u6E05',\r\n    '\u5B57\u5E55', '\u6B27\u7F8E', 'rta', '2257', 'next', 'prev', 'page', 'home', 'forum',\r\n    'contact', 'about', 'help', 'faq', 'support', '\u5E2E\u52A9', '\u8054\u7CFB', '\u5173\u4E8E',\r\n    'login', 'register', '\u6CE8\u518C', '\u767B\u5F55', 'agent_code'\r\n];\r\n\r\n// \u756A\u53F7\u6B63\u5219\u8868\u8FBE\u5F0F\u6A21\u5F0F\uFF08\u6280\u672F\u9650\u5236\uFF0C\u4E0D\u53EF\u53D8\uFF09\r\nexport const CODE_PATTERNS = {\r\n    standard: /([A-Z]{2,6}-\\d{3,6})/i,\r\n    noDash: /([A-Z]{2,6}\\d{3,6})/i,\r\n    reverse: /(\\d{3,6}[A-Z]{2,6})/i,\r\n    combined: /([A-Z]{2,6}-?\\d{3,6})/i\r\n};\r\n\r\n// URL\u6807\u51C6\u5316\u914D\u7F6E\uFF08\u6280\u672F\u9650\u5236\uFF0C\u4E0D\u53EF\u53D8\uFF09\r\nexport const URL_NORMALIZATION = {\r\n    removeParams: ['utm_source', 'utm_medium', 'utm_campaign', 'ref', 'source'],\r\n    keepParams: {\r\n        javdb: ['q', 'f'],\r\n        sukebei: ['q', 'c'],\r\n        javguru: ['s'],\r\n        generic: ['q', 's', 'search', 'query']\r\n    }\r\n};\r\n\r\n// \u6E90\u7279\u5B9A\u914D\u7F6E\uFF08\u6280\u672F\u9650\u5236\uFF0C\u7528\u4E8E\u8BE6\u60C5\u63D0\u53D6\uFF0C\u4E0D\u53EF\u53D8\uFF09\r\nexport const SOURCE_SPECIFIC_CONFIG = {\r\n    javbus: {\r\n        baseUrls: ['https://www.javbus.com', 'https://javbus.com'],\r\n        searchPath: '/search/',\r\n        detailPattern: /\\/[A-Z]{2,6}-?\\d{3,6}(?:\\/|$)/i,\r\n        requiresCode: true,\r\n        supportSubdomains: true\r\n    },\r\n    javdb: {\r\n        baseUrls: ['https://javdb.com'],\r\n        searchPath: '/search',\r\n        detailPattern: /\\/v\\/[a-zA-Z0-9]+/,\r\n        requiresCode: false,\r\n        supportSubdomains: false\r\n    },\r\n    jable: {\r\n        baseUrls: ['https://jable.tv'],\r\n        searchPath: '/search/',\r\n        detailPattern: /\\/videos\\/[^\\/\\?]+/,\r\n        requiresCode: false,\r\n        supportSubdomains: false,\r\n        strictDomain: true\r\n    },\r\n    javmost: {\r\n        baseUrls: ['https://javmost.com', 'https://www5.javmost.com'],\r\n        searchPath: '/search/',\r\n        detailPattern: /\\/[A-Z]{2,6}-?\\d{3,6}[^\\/]*(?:\\/|$)/i,\r\n        requiresCode: true,\r\n        supportSubdomains: true\r\n    },\r\n    javgg: {\r\n        baseUrls: ['https://javgg.net'],\r\n        searchPath: '/search/',\r\n        detailPattern: /\\/jav\\/[a-z0-9\\-]+/i,\r\n        requiresCode: true,\r\n        supportSubdomains: true\r\n    },\r\n    sukebei: {\r\n        baseUrls: ['https://sukebei.nyaa.si'],\r\n        searchPath: '/',\r\n        detailPattern: /\\/view\\/\\d+/,\r\n        requiresCode: false,\r\n        supportSubdomains: false\r\n    },\r\n    javguru: {\r\n        baseUrls: ['https://jav.guru'],\r\n        searchPath: '/',\r\n        detailPattern: /\\/\\d+\\/[a-z0-9\\-]+/i,\r\n        requiresCode: false,\r\n        supportSubdomains: true\r\n    }\r\n};\r\n\r\n// ===================== \u91CD\u8981\u8BF4\u660E =====================\r\n// \r\n// \u5DF2\u79FB\u9664\u7684\u5185\u5BB9\uFF1A\r\n// - VALID_CATEGORIES: \u73B0\u5728\u901A\u8FC7\u6570\u636E\u5E93\u7684 search_major_categories \u8868\u7BA1\u7406\r\n// - VALID_SORT_COLUMNS: \u5DF2\u7B80\u5316\uFF0C\u7531\u5177\u4F53\u529F\u80FD\u6A21\u5757\u81EA\u884C\u5B9A\u4E49\r\n// - \u786C\u7F16\u7801\u7684\u641C\u7D22\u6E90\u5217\u8868: \u73B0\u5728\u901A\u8FC7\u6570\u636E\u5E93\u7684 search_sources \u8868\u7BA1\u7406\r\n// - \u786C\u7F16\u7801\u7684\u5206\u7C7B\u5217\u8868: \u73B0\u5728\u901A\u8FC7\u6570\u636E\u5E93\u7684 search_source_categories \u8868\u7BA1\u7406\r\n// \r\n// \u4FDD\u7559\u7684\u5185\u5BB9\uFF1A\r\n// - \u7CFB\u7EDF\u7EA7\u522B\u7684\u6280\u672F\u9650\u5236\u548C\u9A8C\u8BC1\u89C4\u5219\r\n// - \u8BE6\u60C5\u63D0\u53D6\u76F8\u5173\u7684\u6280\u672F\u914D\u7F6E\uFF08\u56E0\u4E3A\u8FD9\u4E9B\u662F\u6280\u672F\u5B9E\u73B0\u7EC6\u8282\uFF09\r\n// - \u5B89\u5168\u76F8\u5173\u7684\u9ED1\u540D\u5355\u548C\u8FC7\u6EE4\u89C4\u5219\r\n// - \u6B63\u5219\u8868\u8FBE\u5F0F\u6A21\u5F0F\uFF08\u6280\u672F\u9650\u5236\uFF09\r\n// - URL\u89C4\u8303\u5316\u914D\u7F6E\uFF08\u6280\u672F\u9650\u5236\uFF09\r\n// \r\n// \u65B0\u7684\u641C\u7D22\u6E90\u7BA1\u7406\u65B9\u5F0F\uFF1A\r\n// 1. \u901A\u8FC7 /api/search-sources/major-categories API \u7BA1\u7406\u5927\u7C7B\r\n// 2. \u901A\u8FC7 /api/search-sources/categories API \u7BA1\u7406\u5206\u7C7B\r\n// 3. \u901A\u8FC7 /api/search-sources/sources API \u7BA1\u7406\u641C\u7D22\u6E90\r\n// 4. \u901A\u8FC7 /api/search-sources/user-configs API \u7BA1\u7406\u7528\u6237\u914D\u7F6E", "// src/services/search-sources-service.js - \u4F18\u5316\u7248\u672C\uFF1A\u4FEE\u590D\u524D\u540E\u7AEF\u5B57\u6BB5\u5339\u914D\u95EE\u9898\uFF0C\u786E\u4FDD\u6240\u6709\u5206\u7C7B\u5B57\u6BB5\u6B63\u786E\u8FD4\u56DE\r\nimport { utils } from '../utils.js';\r\nimport { CONFIG } from '../constants.js';\r\n\r\nclass SearchSourcesService {\r\n    \r\n    // ===================== \u641C\u7D22\u6E90\u5927\u7C7B\u7BA1\u7406 =====================\r\n\r\n    // \u83B7\u53D6\u6240\u6709\u5927\u7C7B\r\n    async getAllMajorCategories(env) {\r\n        try {\r\n            const result = await env.DB.prepare(`\r\n                SELECT * FROM search_major_categories \r\n                WHERE is_active = 1 \r\n                ORDER BY display_order ASC, created_at ASC\r\n            `).all();\r\n\r\n            return {\r\n                majorCategories: (result.results || []).map(cat => this.formatMajorCategory(cat))\r\n            };\r\n        } catch (error) {\r\n            console.error('\u83B7\u53D6\u641C\u7D22\u6E90\u5927\u7C7B\u5931\u8D25:', error);\r\n            throw new Error('\u83B7\u53D6\u641C\u7D22\u6E90\u5927\u7C7B\u5931\u8D25');\r\n        }\r\n    }\r\n\r\n    // \u521B\u5EFA\u5927\u7C7B\r\n    async createMajorCategory(env, majorCategoryData, creatorId) {\r\n        try {\r\n            // \u68C0\u67E5\u540D\u79F0\u662F\u5426\u5DF2\u5B58\u5728\r\n            const existing = await env.DB.prepare(`\r\n                SELECT id FROM search_major_categories \r\n                WHERE name = ? AND is_active = 1\r\n            `).bind(majorCategoryData.name).first();\r\n\r\n            if (existing) {\r\n                throw new Error('\u5927\u7C7B\u540D\u79F0\u5DF2\u5B58\u5728');\r\n            }\r\n\r\n            const majorCategoryId = utils.generateId();\r\n            const now = Date.now();\r\n\r\n            await env.DB.prepare(`\r\n                INSERT INTO search_major_categories (\r\n                    id, name, description, icon, color, requires_keyword,\r\n                    display_order, is_system, is_active, created_at, updated_at\r\n                ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n            `).bind(\r\n                majorCategoryId,\r\n                majorCategoryData.name,\r\n                majorCategoryData.description || '',\r\n                majorCategoryData.icon || '\uD83C\uDF1F',\r\n                majorCategoryData.color || '#6b7280',\r\n                majorCategoryData.requiresKeyword ? 1 : 0,\r\n                999, // \u65B0\u521B\u5EFA\u7684\u6392\u5728\u6700\u540E\r\n                0, // \u7528\u6237\u521B\u5EFA\u7684\u975E\u7CFB\u7EDF\u5927\u7C7B\r\n                1, // \u6FC0\u6D3B\u72B6\u6001\r\n                now,\r\n                now\r\n            ).run();\r\n\r\n            return this.formatMajorCategory({\r\n                id: majorCategoryId,\r\n                name: majorCategoryData.name,\r\n                description: majorCategoryData.description || '',\r\n                icon: majorCategoryData.icon || '\uD83C\uDF1F',\r\n                color: majorCategoryData.color || '#6b7280',\r\n                requires_keyword: majorCategoryData.requiresKeyword ? 1 : 0,\r\n                display_order: 999,\r\n                is_system: 0,\r\n                is_active: 1,\r\n                created_at: now,\r\n                updated_at: now\r\n            });\r\n        } catch (error) {\r\n            console.error('\u521B\u5EFA\u641C\u7D22\u6E90\u5927\u7C7B\u5931\u8D25:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    // ===================== \u641C\u7D22\u6E90\u5206\u7C7B\u7BA1\u7406 =====================\r\n\r\n    // \u83B7\u53D6\u7528\u6237\u7684\u641C\u7D22\u6E90\u5206\u7C7B\r\n    async getUserSourceCategories(env, userId, options = {}) {\r\n        try {\r\n            const { majorCategoryId, includeSystem = true } = options;\r\n            \r\n            let query = `\r\n                SELECT sc.*, mc.name as major_category_name, mc.icon as major_category_icon\r\n                FROM search_source_categories sc\r\n                LEFT JOIN search_major_categories mc ON sc.major_category_id = mc.id\r\n                WHERE sc.is_active = 1\r\n            `;\r\n            const params = [];\r\n\r\n            if (majorCategoryId) {\r\n                query += ` AND sc.major_category_id = ?`;\r\n                params.push(majorCategoryId);\r\n            }\r\n\r\n            if (!includeSystem) {\r\n                query += ` AND (sc.is_system = 0 OR sc.created_by = ?)`;\r\n                params.push(userId);\r\n            }\r\n\r\n            query += ` ORDER BY sc.display_order ASC, sc.created_at ASC`;\r\n\r\n            const result = await env.DB.prepare(query).bind(...params).all();\r\n\r\n            return {\r\n                categories: (result.results || []).map(cat => this.formatSourceCategory(cat))\r\n            };\r\n        } catch (error) {\r\n            console.error('\u83B7\u53D6\u641C\u7D22\u6E90\u5206\u7C7B\u5931\u8D25:', error);\r\n            throw new Error('\u83B7\u53D6\u641C\u7D22\u6E90\u5206\u7C7B\u5931\u8D25');\r\n        }\r\n    }\r\n\r\n    // \u521B\u5EFA\u641C\u7D22\u6E90\u5206\u7C7B\r\n    async createSourceCategory(env, categoryData, creatorId) {\r\n        try {\r\n            // \u9A8C\u8BC1\u5927\u7C7B\u662F\u5426\u5B58\u5728\r\n            const majorCategory = await env.DB.prepare(`\r\n                SELECT id FROM search_major_categories \r\n                WHERE id = ? AND is_active = 1\r\n            `).bind(categoryData.majorCategoryId).first();\r\n\r\n            if (!majorCategory) {\r\n                throw new Error('\u6307\u5B9A\u7684\u5927\u7C7B\u4E0D\u5B58\u5728');\r\n            }\r\n\r\n            // \u68C0\u67E5\u5206\u7C7B\u540D\u79F0\u662F\u5426\u5DF2\u5B58\u5728\uFF08\u5728\u540C\u4E00\u5927\u7C7B\u4E0B\uFF09\r\n            const existing = await env.DB.prepare(`\r\n                SELECT id FROM search_source_categories \r\n                WHERE major_category_id = ? AND name = ? AND is_active = 1\r\n            `).bind(categoryData.majorCategoryId, categoryData.name).first();\r\n\r\n            if (existing) {\r\n                throw new Error('\u5728\u8BE5\u5927\u7C7B\u4E0B\u5206\u7C7B\u540D\u79F0\u5DF2\u5B58\u5728');\r\n            }\r\n\r\n            const categoryId = utils.generateId();\r\n            const now = Date.now();\r\n\r\n            await env.DB.prepare(`\r\n                INSERT INTO search_source_categories (\r\n                    id, major_category_id, name, description, icon, color,\r\n                    display_order, is_system, is_active, default_searchable,\r\n                    default_site_type, search_priority, supports_detail_extraction,\r\n                    extraction_priority, created_by, created_at, updated_at\r\n                ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n            `).bind(\r\n                categoryId,\r\n                categoryData.majorCategoryId,\r\n                categoryData.name,\r\n                categoryData.description || '',\r\n                categoryData.icon || '\uD83D\uDCC1',\r\n                categoryData.color || '#3b82f6',\r\n                999, // \u65B0\u521B\u5EFA\u7684\u6392\u5728\u6700\u540E\r\n                0, // \u7528\u6237\u521B\u5EFA\u7684\u975E\u7CFB\u7EDF\u5206\u7C7B\r\n                1, // \u6FC0\u6D3B\u72B6\u6001\r\n                categoryData.defaultSearchable ? 1 : 0,\r\n                categoryData.defaultSiteType || 'search',\r\n                categoryData.searchPriority || 5,\r\n                categoryData.supportsDetailExtraction ? 1 : 0,\r\n                categoryData.extractionPriority || 'medium',\r\n                creatorId,\r\n                now,\r\n                now\r\n            ).run();\r\n\r\n            return this.formatSourceCategory({\r\n                id: categoryId,\r\n                major_category_id: categoryData.majorCategoryId,\r\n                name: categoryData.name,\r\n                description: categoryData.description || '',\r\n                icon: categoryData.icon || '\uD83D\uDCC1',\r\n                color: categoryData.color || '#3b82f6',\r\n                display_order: 999,\r\n                is_system: 0,\r\n                is_active: 1,\r\n                default_searchable: categoryData.defaultSearchable ? 1 : 0,\r\n                default_site_type: categoryData.defaultSiteType || 'search',\r\n                search_priority: categoryData.searchPriority || 5,\r\n                supports_detail_extraction: categoryData.supportsDetailExtraction ? 1 : 0,\r\n                extraction_priority: categoryData.extractionPriority || 'medium',\r\n                created_by: creatorId,\r\n                created_at: now,\r\n                updated_at: now\r\n            });\r\n        } catch (error) {\r\n            console.error('\u521B\u5EFA\u641C\u7D22\u6E90\u5206\u7C7B\u5931\u8D25:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    // \u66F4\u65B0\u641C\u7D22\u6E90\u5206\u7C7B\r\n    async updateSourceCategory(env, categoryId, updateData, userId) {\r\n        try {\r\n            // \u9A8C\u8BC1\u5206\u7C7B\u662F\u5426\u5B58\u5728\u4E14\u7528\u6237\u6709\u6743\u9650\u4FEE\u6539\r\n            const category = await env.DB.prepare(`\r\n                SELECT * FROM search_source_categories \r\n                WHERE id = ? AND is_active = 1\r\n            `).bind(categoryId).first();\r\n\r\n            if (!category) {\r\n                throw new Error('\u641C\u7D22\u6E90\u5206\u7C7B\u4E0D\u5B58\u5728');\r\n            }\r\n\r\n            // \u7CFB\u7EDF\u5206\u7C7B\u53EA\u80FD\u7531\u7BA1\u7406\u5458\u4FEE\u6539\r\n            if (category.is_system && category.created_by !== userId) {\r\n                // \u7B80\u5355\u7684\u6743\u9650\u68C0\u67E5\uFF0C\u5B9E\u9645\u9879\u76EE\u4E2D\u5E94\u8BE5\u6709\u66F4\u5B8C\u5584\u7684\u6743\u9650\u7CFB\u7EDF\r\n                throw new Error('\u65E0\u6743\u9650\u4FEE\u6539\u7CFB\u7EDF\u5206\u7C7B');\r\n            }\r\n\r\n            // \u81EA\u5B9A\u4E49\u5206\u7C7B\u53EA\u80FD\u7531\u521B\u5EFA\u8005\u4FEE\u6539\r\n            if (!category.is_system && category.created_by !== userId) {\r\n                throw new Error('\u65E0\u6743\u9650\u4FEE\u6539\u6B64\u5206\u7C7B');\r\n            }\r\n\r\n            // \u5982\u679C\u8981\u4FEE\u6539\u540D\u79F0\uFF0C\u68C0\u67E5\u662F\u5426\u91CD\u590D\r\n            if (updateData.name && updateData.name !== category.name) {\r\n                const existing = await env.DB.prepare(`\r\n                    SELECT id FROM search_source_categories \r\n                    WHERE major_category_id = ? AND name = ? AND id != ? AND is_active = 1\r\n                `).bind(category.major_category_id, updateData.name, categoryId).first();\r\n\r\n                if (existing) {\r\n                    throw new Error('\u5206\u7C7B\u540D\u79F0\u5DF2\u5B58\u5728');\r\n                }\r\n            }\r\n\r\n            // \u6784\u5EFA\u66F4\u65B0\u8BED\u53E5\r\n            const updateFields = [];\r\n            const updateValues = [];\r\n\r\n            Object.keys(updateData).forEach(field => {\r\n                const dbField = this.convertCategoryFieldToDb(field);\r\n                if (dbField) {\r\n                    updateFields.push(`${dbField} = ?`);\r\n                    updateValues.push(updateData[field]);\r\n                }\r\n            });\r\n\r\n            updateFields.push('updated_at = ?');\r\n            updateValues.push(Date.now());\r\n            updateValues.push(categoryId);\r\n\r\n            await env.DB.prepare(`\r\n                UPDATE search_source_categories \r\n                SET ${updateFields.join(', ')}\r\n                WHERE id = ?\r\n            `).bind(...updateValues).run();\r\n\r\n            // \u8FD4\u56DE\u66F4\u65B0\u540E\u7684\u5206\u7C7B\r\n            const updatedCategory = await env.DB.prepare(`\r\n                SELECT sc.*, mc.name as major_category_name, mc.icon as major_category_icon\r\n                FROM search_source_categories sc\r\n                LEFT JOIN search_major_categories mc ON sc.major_category_id = mc.id\r\n                WHERE sc.id = ?\r\n            `).bind(categoryId).first();\r\n\r\n            return {\r\n                category: this.formatSourceCategory(updatedCategory)\r\n            };\r\n        } catch (error) {\r\n            console.error('\u66F4\u65B0\u641C\u7D22\u6E90\u5206\u7C7B\u5931\u8D25:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    // \u5220\u9664\u641C\u7D22\u6E90\u5206\u7C7B\r\n    async deleteSourceCategory(env, categoryId, userId) {\r\n        try {\r\n            // \u9A8C\u8BC1\u5206\u7C7B\u662F\u5426\u5B58\u5728\u4E14\u7528\u6237\u6709\u6743\u9650\u5220\u9664\r\n            const category = await env.DB.prepare(`\r\n                SELECT * FROM search_source_categories \r\n                WHERE id = ? AND is_active = 1\r\n            `).bind(categoryId).first();\r\n\r\n            if (!category) {\r\n                throw new Error('\u641C\u7D22\u6E90\u5206\u7C7B\u4E0D\u5B58\u5728');\r\n            }\r\n\r\n            // \u7CFB\u7EDF\u5206\u7C7B\u4E0D\u80FD\u5220\u9664\r\n            if (category.is_system) {\r\n                throw new Error('\u7CFB\u7EDF\u5206\u7C7B\u4E0D\u80FD\u5220\u9664');\r\n            }\r\n\r\n            // \u81EA\u5B9A\u4E49\u5206\u7C7B\u53EA\u80FD\u7531\u521B\u5EFA\u8005\u5220\u9664\r\n            if (category.created_by !== userId) {\r\n                throw new Error('\u65E0\u6743\u9650\u5220\u9664\u6B64\u5206\u7C7B');\r\n            }\r\n\r\n            // \u68C0\u67E5\u662F\u5426\u6709\u641C\u7D22\u6E90\u4F7F\u7528\u6B64\u5206\u7C7B\r\n            const sourcesUsingCategory = await env.DB.prepare(`\r\n                SELECT COUNT(*) as count FROM search_sources \r\n                WHERE category_id = ? AND is_active = 1\r\n            `).bind(categoryId).first();\r\n\r\n            if (sourcesUsingCategory.count > 0) {\r\n                throw new Error(`\u65E0\u6CD5\u5220\u9664\u5206\u7C7B\uFF0C\u8FD8\u6709 ${sourcesUsingCategory.count} \u4E2A\u641C\u7D22\u6E90\u6B63\u5728\u4F7F\u7528\u6B64\u5206\u7C7B`);\r\n            }\r\n\r\n            // \u8F6F\u5220\u9664\u5206\u7C7B\r\n            await env.DB.prepare(`\r\n                UPDATE search_source_categories \r\n                SET is_active = 0, updated_at = ?\r\n                WHERE id = ?\r\n            `).bind(Date.now(), categoryId).run();\r\n\r\n            return {\r\n                message: '\u641C\u7D22\u6E90\u5206\u7C7B\u5220\u9664\u6210\u529F',\r\n                deletedCategory: {\r\n                    id: category.id,\r\n                    name: category.name\r\n                }\r\n            };\r\n        } catch (error) {\r\n            console.error('\u5220\u9664\u641C\u7D22\u6E90\u5206\u7C7B\u5931\u8D25:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    // ===================== \u641C\u7D22\u6E90\u7BA1\u7406 =====================\r\n\r\n    // \u83B7\u53D6\u7528\u6237\u7684\u641C\u7D22\u6E90\r\n    async getUserSearchSources(env, userId, filters = {}) {\r\n        try {\r\n            const { categoryId, majorCategoryId, searchable, includeSystem = true, enabledOnly = false } = filters;\r\n            \r\n            let query = `\r\n                SELECT \r\n                    ss.*,\r\n                    sc.name as category_name,\r\n                    sc.icon as category_icon,\r\n                    sc.major_category_id,\r\n                    mc.name as major_category_name,\r\n                    mc.icon as major_category_icon,\r\n                    usc.is_enabled as user_enabled,\r\n                    usc.custom_priority,\r\n                    usc.custom_name,\r\n                    usc.custom_subtitle,\r\n                    usc.custom_icon,\r\n                    usc.notes as user_notes\r\n                FROM search_sources ss\r\n                LEFT JOIN search_source_categories sc ON ss.category_id = sc.id\r\n                LEFT JOIN search_major_categories mc ON sc.major_category_id = mc.id\r\n                LEFT JOIN user_search_source_configs usc ON ss.id = usc.source_id AND usc.user_id = ?\r\n                WHERE ss.is_active = 1\r\n            `;\r\n            const params = [userId];\r\n\r\n            if (categoryId) {\r\n                query += ` AND ss.category_id = ?`;\r\n                params.push(categoryId);\r\n            }\r\n\r\n            if (majorCategoryId) {\r\n                query += ` AND sc.major_category_id = ?`;\r\n                params.push(majorCategoryId);\r\n            }\r\n\r\n            if (searchable !== null && searchable !== undefined) {\r\n                query += ` AND ss.searchable = ?`;\r\n                params.push(searchable ? 1 : 0);\r\n            }\r\n\r\n            if (!includeSystem) {\r\n                query += ` AND (ss.is_system = 0 OR ss.created_by = ?)`;\r\n                params.push(userId);\r\n            }\r\n\r\n            if (enabledOnly) {\r\n                query += ` AND (usc.is_enabled = 1 OR (usc.is_enabled IS NULL AND ss.is_system = 1 AND ss.searchable = 1))`;\r\n            }\r\n\r\n            query += ` ORDER BY \r\n                COALESCE(usc.custom_priority, ss.search_priority) ASC, \r\n                ss.display_order ASC, \r\n                ss.created_at ASC`;\r\n\r\n            const result = await env.DB.prepare(query).bind(...params).all();\r\n\r\n            return {\r\n                sources: (result.results || []).map(source => this.formatSearchSource(source))\r\n            };\r\n        } catch (error) {\r\n            console.error('\u83B7\u53D6\u641C\u7D22\u6E90\u5931\u8D25:', error);\r\n            throw new Error('\u83B7\u53D6\u641C\u7D22\u6E90\u5931\u8D25');\r\n        }\r\n    }\r\n\r\n    // \u521B\u5EFA\u641C\u7D22\u6E90\r\n    async createSearchSource(env, sourceData, creatorId) {\r\n        try {\r\n            // \u9A8C\u8BC1\u5206\u7C7B\u662F\u5426\u5B58\u5728\r\n            const category = await env.DB.prepare(`\r\n                SELECT id FROM search_source_categories \r\n                WHERE id = ? AND is_active = 1\r\n            `).bind(sourceData.categoryId).first();\r\n\r\n            if (!category) {\r\n                throw new Error('\u6307\u5B9A\u7684\u5206\u7C7B\u4E0D\u5B58\u5728');\r\n            }\r\n\r\n            // \u9A8C\u8BC1URL\u6A21\u677F\u683C\u5F0F\r\n            if (sourceData.searchable && !sourceData.urlTemplate.includes('{keyword}')) {\r\n                throw new Error('\u641C\u7D22\u6E90\u7684URL\u6A21\u677F\u5FC5\u987B\u5305\u542B{keyword}\u5360\u4F4D\u7B26');\r\n            }\r\n\r\n            // \u68C0\u67E5\u641C\u7D22\u6E90\u540D\u79F0\u662F\u5426\u5DF2\u5B58\u5728\r\n            const existing = await env.DB.prepare(`\r\n                SELECT id FROM search_sources \r\n                WHERE name = ? AND is_active = 1\r\n            `).bind(sourceData.name).first();\r\n\r\n            if (existing) {\r\n                throw new Error('\u641C\u7D22\u6E90\u540D\u79F0\u5DF2\u5B58\u5728');\r\n            }\r\n\r\n            const sourceId = utils.generateId();\r\n            const now = Date.now();\r\n\r\n            await env.DB.prepare(`\r\n                INSERT INTO search_sources (\r\n                    id, category_id, name, subtitle, description, icon, url_template,\r\n                    homepage_url, site_type, searchable, requires_keyword, search_priority,\r\n                    supports_detail_extraction, extraction_quality, average_extraction_time,\r\n                    supported_features, is_system, is_active, display_order, usage_count,\r\n                    created_by, created_at, updated_at\r\n                ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n            `).bind(\r\n                sourceId,\r\n                sourceData.categoryId,\r\n                sourceData.name,\r\n                sourceData.subtitle || '',\r\n                sourceData.description || '',\r\n                sourceData.icon || '\uD83D\uDD0D',\r\n                sourceData.urlTemplate,\r\n                sourceData.homepageUrl || '',\r\n                sourceData.siteType || 'search',\r\n                sourceData.searchable ? 1 : 0,\r\n                sourceData.requiresKeyword ? 1 : 0,\r\n                sourceData.searchPriority || 5,\r\n                sourceData.supportsDetailExtraction ? 1 : 0,\r\n                sourceData.extractionQuality || 'none',\r\n                0, // \u521D\u59CB\u63D0\u53D6\u65F6\u95F4\r\n                JSON.stringify(sourceData.supportedFeatures || []),\r\n                0, // \u7528\u6237\u521B\u5EFA\u7684\u975E\u7CFB\u7EDF\u6E90\r\n                1, // \u6FC0\u6D3B\u72B6\u6001\r\n                999, // \u65B0\u521B\u5EFA\u7684\u6392\u5728\u6700\u540E\r\n                0, // \u521D\u59CB\u4F7F\u7528\u6B21\u6570\r\n                creatorId,\r\n                now,\r\n                now\r\n            ).run();\r\n\r\n            // \u81EA\u52A8\u4E3A\u7528\u6237\u521B\u5EFA\u914D\u7F6E\uFF08\u9ED8\u8BA4\u542F\u7528\uFF09\r\n            await this.createUserSourceConfig(env, creatorId, sourceId, { isEnabled: true });\r\n\r\n            return this.formatSearchSource({\r\n                id: sourceId,\r\n                category_id: sourceData.categoryId,\r\n                name: sourceData.name,\r\n                subtitle: sourceData.subtitle || '',\r\n                description: sourceData.description || '',\r\n                icon: sourceData.icon || '\uD83D\uDD0D',\r\n                url_template: sourceData.urlTemplate,\r\n                homepage_url: sourceData.homepageUrl || '',\r\n                site_type: sourceData.siteType || 'search',\r\n                searchable: sourceData.searchable ? 1 : 0,\r\n                requires_keyword: sourceData.requiresKeyword ? 1 : 0,\r\n                search_priority: sourceData.searchPriority || 5,\r\n                supports_detail_extraction: sourceData.supportsDetailExtraction ? 1 : 0,\r\n                extraction_quality: sourceData.extractionQuality || 'none',\r\n                average_extraction_time: 0,\r\n                supported_features: JSON.stringify(sourceData.supportedFeatures || []),\r\n                is_system: 0,\r\n                is_active: 1,\r\n                display_order: 999,\r\n                usage_count: 0,\r\n                created_by: creatorId,\r\n                created_at: now,\r\n                updated_at: now,\r\n                user_enabled: 1 // \u9ED8\u8BA4\u542F\u7528\r\n            });\r\n        } catch (error) {\r\n            console.error('\u521B\u5EFA\u641C\u7D22\u6E90\u5931\u8D25:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    // \u66F4\u65B0\u641C\u7D22\u6E90\r\n    async updateSearchSource(env, sourceId, updateData, userId) {\r\n        try {\r\n            // \u9A8C\u8BC1\u641C\u7D22\u6E90\u662F\u5426\u5B58\u5728\u4E14\u7528\u6237\u6709\u6743\u9650\u4FEE\u6539\r\n            const source = await env.DB.prepare(`\r\n                SELECT * FROM search_sources \r\n                WHERE id = ? AND is_active = 1\r\n            `).bind(sourceId).first();\r\n\r\n            if (!source) {\r\n                throw new Error('\u641C\u7D22\u6E90\u4E0D\u5B58\u5728');\r\n            }\r\n\r\n            // \u7CFB\u7EDF\u641C\u7D22\u6E90\u53EA\u80FD\u7531\u7BA1\u7406\u5458\u4FEE\u6539\r\n            if (source.is_system && source.created_by !== userId) {\r\n                throw new Error('\u65E0\u6743\u9650\u4FEE\u6539\u7CFB\u7EDF\u641C\u7D22\u6E90');\r\n            }\r\n\r\n            // \u81EA\u5B9A\u4E49\u641C\u7D22\u6E90\u53EA\u80FD\u7531\u521B\u5EFA\u8005\u4FEE\u6539\r\n            if (!source.is_system && source.created_by !== userId) {\r\n                throw new Error('\u65E0\u6743\u9650\u4FEE\u6539\u6B64\u641C\u7D22\u6E90');\r\n            }\r\n\r\n            // \u9A8C\u8BC1\u66F4\u65B0\u6570\u636E\r\n            if (updateData.urlTemplate && updateData.searchable && !updateData.urlTemplate.includes('{keyword}')) {\r\n                throw new Error('\u641C\u7D22\u6E90\u7684URL\u6A21\u677F\u5FC5\u987B\u5305\u542B{keyword}\u5360\u4F4D\u7B26');\r\n            }\r\n\r\n            // \u5982\u679C\u8981\u4FEE\u6539\u540D\u79F0\uFF0C\u68C0\u67E5\u662F\u5426\u91CD\u590D\r\n            if (updateData.name && updateData.name !== source.name) {\r\n                const existing = await env.DB.prepare(`\r\n                    SELECT id FROM search_sources \r\n                    WHERE name = ? AND id != ? AND is_active = 1\r\n                `).bind(updateData.name, sourceId).first();\r\n\r\n                if (existing) {\r\n                    throw new Error('\u641C\u7D22\u6E90\u540D\u79F0\u5DF2\u5B58\u5728');\r\n                }\r\n            }\r\n\r\n            // \u6784\u5EFA\u66F4\u65B0\u8BED\u53E5\r\n            const updateFields = [];\r\n            const updateValues = [];\r\n\r\n            Object.keys(updateData).forEach(field => {\r\n                const dbField = this.convertSourceFieldToDb(field);\r\n                if (dbField) {\r\n                    let value = updateData[field];\r\n                    if (field === 'supportedFeatures') {\r\n                        value = JSON.stringify(value);\r\n                    } else if (typeof value === 'boolean') {\r\n                        value = value ? 1 : 0;\r\n                    }\r\n                    updateFields.push(`${dbField} = ?`);\r\n                    updateValues.push(value);\r\n                }\r\n            });\r\n\r\n            updateFields.push('updated_at = ?');\r\n            updateValues.push(Date.now());\r\n            updateValues.push(sourceId);\r\n\r\n            await env.DB.prepare(`\r\n                UPDATE search_sources \r\n                SET ${updateFields.join(', ')}\r\n                WHERE id = ?\r\n            `).bind(...updateValues).run();\r\n\r\n            // \u8FD4\u56DE\u66F4\u65B0\u540E\u7684\u641C\u7D22\u6E90\r\n            const updatedSource = await env.DB.prepare(`\r\n                SELECT \r\n                    ss.*,\r\n                    sc.name as category_name,\r\n                    sc.icon as category_icon,\r\n                    sc.major_category_id,\r\n                    mc.name as major_category_name,\r\n                    mc.icon as major_category_icon\r\n                FROM search_sources ss\r\n                LEFT JOIN search_source_categories sc ON ss.category_id = sc.id\r\n                LEFT JOIN search_major_categories mc ON sc.major_category_id = mc.id\r\n                WHERE ss.id = ?\r\n            `).bind(sourceId).first();\r\n\r\n            return {\r\n                source: this.formatSearchSource(updatedSource)\r\n            };\r\n        } catch (error) {\r\n            console.error('\u66F4\u65B0\u641C\u7D22\u6E90\u5931\u8D25:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    // \u5220\u9664\u641C\u7D22\u6E90\r\n    async deleteSearchSource(env, sourceId, userId) {\r\n        try {\r\n            // \u9A8C\u8BC1\u641C\u7D22\u6E90\u662F\u5426\u5B58\u5728\u4E14\u7528\u6237\u6709\u6743\u9650\u5220\u9664\r\n            const source = await env.DB.prepare(`\r\n                SELECT * FROM search_sources \r\n                WHERE id = ? AND is_active = 1\r\n            `).bind(sourceId).first();\r\n\r\n            if (!source) {\r\n                throw new Error('\u641C\u7D22\u6E90\u4E0D\u5B58\u5728');\r\n            }\r\n\r\n            // \u7CFB\u7EDF\u641C\u7D22\u6E90\u4E0D\u80FD\u5220\u9664\r\n            if (source.is_system) {\r\n                throw new Error('\u7CFB\u7EDF\u641C\u7D22\u6E90\u4E0D\u80FD\u5220\u9664');\r\n            }\r\n\r\n            // \u81EA\u5B9A\u4E49\u641C\u7D22\u6E90\u53EA\u80FD\u7531\u521B\u5EFA\u8005\u5220\u9664\r\n            if (source.created_by !== userId) {\r\n                throw new Error('\u65E0\u6743\u9650\u5220\u9664\u6B64\u641C\u7D22\u6E90');\r\n            }\r\n\r\n            // \u8F6F\u5220\u9664\u641C\u7D22\u6E90\r\n            await env.DB.prepare(`\r\n                UPDATE search_sources \r\n                SET is_active = 0, updated_at = ?\r\n                WHERE id = ?\r\n            `).bind(Date.now(), sourceId).run();\r\n\r\n            // \u540C\u65F6\u5220\u9664\u7528\u6237\u914D\u7F6E\r\n            await env.DB.prepare(`\r\n                DELETE FROM user_search_source_configs \r\n                WHERE source_id = ?\r\n            `).bind(sourceId).run();\r\n\r\n            return {\r\n                message: '\u641C\u7D22\u6E90\u5220\u9664\u6210\u529F',\r\n                deletedSource: {\r\n                    id: source.id,\r\n                    name: source.name\r\n                }\r\n            };\r\n        } catch (error) {\r\n            console.error('\u5220\u9664\u641C\u7D22\u6E90\u5931\u8D25:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    // ===================== \u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\u7BA1\u7406 =====================\r\n\r\n    // \u83B7\u53D6\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\r\n    async getUserSourceConfigs(env, userId) {\r\n        try {\r\n            const result = await env.DB.prepare(`\r\n                SELECT \r\n                    usc.*,\r\n                    ss.name as source_name,\r\n                    ss.icon as source_icon,\r\n                    ss.is_system,\r\n                    sc.name as category_name,\r\n                    mc.name as major_category_name\r\n                FROM user_search_source_configs usc\r\n                LEFT JOIN search_sources ss ON usc.source_id = ss.id\r\n                LEFT JOIN search_source_categories sc ON ss.category_id = sc.id\r\n                LEFT JOIN search_major_categories mc ON sc.major_category_id = mc.id\r\n                WHERE usc.user_id = ? AND ss.is_active = 1\r\n                ORDER BY usc.custom_priority ASC, ss.search_priority ASC, ss.display_order ASC\r\n            `).bind(userId).all();\r\n\r\n            return {\r\n                configs: (result.results || []).map(config => this.formatUserSourceConfig(config))\r\n            };\r\n        } catch (error) {\r\n            console.error('\u83B7\u53D6\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\u5931\u8D25:', error);\r\n            throw new Error('\u83B7\u53D6\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\u5931\u8D25');\r\n        }\r\n    }\r\n\r\n    // \u521B\u5EFA\u6216\u66F4\u65B0\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\r\n    async updateUserSourceConfig(env, userId, configData) {\r\n        try {\r\n            // \u9A8C\u8BC1\u641C\u7D22\u6E90\u662F\u5426\u5B58\u5728\r\n            const source = await env.DB.prepare(`\r\n                SELECT id FROM search_sources \r\n                WHERE id = ? AND is_active = 1\r\n            `).bind(configData.sourceId).first();\r\n\r\n            if (!source) {\r\n                throw new Error('\u641C\u7D22\u6E90\u4E0D\u5B58\u5728');\r\n            }\r\n\r\n            const configId = utils.generateId();\r\n            const now = Date.now();\r\n\r\n            // \u4F7F\u7528 INSERT OR REPLACE \u8BED\u6CD5\r\n            await env.DB.prepare(`\r\n                INSERT OR REPLACE INTO user_search_source_configs (\r\n                    id, user_id, source_id, is_enabled, custom_priority,\r\n                    custom_name, custom_subtitle, custom_icon, notes,\r\n                    created_at, updated_at\r\n                ) VALUES (\r\n                    COALESCE((SELECT id FROM user_search_source_configs WHERE user_id = ? AND source_id = ?), ?),\r\n                    ?, ?, ?, ?, ?, ?, ?, ?,\r\n                    COALESCE((SELECT created_at FROM user_search_source_configs WHERE user_id = ? AND source_id = ?), ?),\r\n                    ?\r\n                )\r\n            `).bind(\r\n                userId, configData.sourceId, configId, // for COALESCE id\r\n                userId, configData.sourceId,\r\n                configData.isEnabled ? 1 : 0,\r\n                configData.customPriority,\r\n                configData.customName,\r\n                configData.customSubtitle,\r\n                configData.customIcon,\r\n                configData.notes,\r\n                userId, configData.sourceId, now, // for COALESCE created_at\r\n                now // updated_at\r\n            ).run();\r\n\r\n            return {\r\n                message: '\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\u66F4\u65B0\u6210\u529F',\r\n                config: {\r\n                    userId,\r\n                    sourceId: configData.sourceId,\r\n                    isEnabled: configData.isEnabled,\r\n                    customPriority: configData.customPriority,\r\n                    customName: configData.customName,\r\n                    customSubtitle: configData.customSubtitle,\r\n                    customIcon: configData.customIcon,\r\n                    notes: configData.notes\r\n                }\r\n            };\r\n        } catch (error) {\r\n            console.error('\u66F4\u65B0\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\u5931\u8D25:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    // \u521B\u5EFA\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\uFF08\u5185\u90E8\u65B9\u6CD5\uFF09\r\n    async createUserSourceConfig(env, userId, sourceId, configData) {\r\n        const configId = utils.generateId();\r\n        const now = Date.now();\r\n\r\n        await env.DB.prepare(`\r\n            INSERT OR IGNORE INTO user_search_source_configs (\r\n                id, user_id, source_id, is_enabled, custom_priority,\r\n                custom_name, custom_subtitle, custom_icon, notes,\r\n                created_at, updated_at\r\n            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n        `).bind(\r\n            configId, userId, sourceId,\r\n            configData.isEnabled ? 1 : 0,\r\n            configData.customPriority || null,\r\n            configData.customName || null,\r\n            configData.customSubtitle || null,\r\n            configData.customIcon || null,\r\n            configData.notes || null,\r\n            now, now\r\n        ).run();\r\n    }\r\n\r\n    // \u6279\u91CF\u66F4\u65B0\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\r\n    async batchUpdateUserSourceConfigs(env, userId, configs) {\r\n        try {\r\n            // \u9A8C\u8BC1\u6240\u6709\u641C\u7D22\u6E90\u662F\u5426\u5B58\u5728\r\n            const sourceIds = configs.map(c => c.sourceId);\r\n            const validSources = await env.DB.prepare(`\r\n                SELECT id FROM search_sources \r\n                WHERE id IN (${sourceIds.map(() => '?').join(',')}) AND is_active = 1\r\n            `).bind(...sourceIds).all();\r\n\r\n            if (validSources.results.length !== sourceIds.length) {\r\n                throw new Error('\u90E8\u5206\u641C\u7D22\u6E90\u4E0D\u5B58\u5728');\r\n            }\r\n\r\n            // \u5F00\u59CB\u4E8B\u52A1\u5904\u7406\r\n            const stmt = env.DB.prepare(`\r\n                INSERT OR REPLACE INTO user_search_source_configs (\r\n                    id, user_id, source_id, is_enabled, custom_priority,\r\n                    custom_name, custom_subtitle, custom_icon, notes,\r\n                    created_at, updated_at\r\n                ) VALUES (\r\n                    COALESCE((SELECT id FROM user_search_source_configs WHERE user_id = ? AND source_id = ?), ?),\r\n                    ?, ?, ?, ?, ?, ?, ?, ?,\r\n                    COALESCE((SELECT created_at FROM user_search_source_configs WHERE user_id = ? AND source_id = ?), ?),\r\n                    ?\r\n                )\r\n            `);\r\n\r\n            const now = Date.now();\r\n            const promises = configs.map(config => {\r\n                const configId = utils.generateId();\r\n                return stmt.bind(\r\n                    userId, config.sourceId, configId, // for COALESCE id\r\n                    userId, config.sourceId,\r\n                    config.isEnabled ? 1 : 0,\r\n                    config.customPriority || null,\r\n                    config.customName || null,\r\n                    config.customSubtitle || null,\r\n                    config.customIcon || null,\r\n                    config.notes || null,\r\n                    userId, config.sourceId, now, // for COALESCE created_at\r\n                    now // updated_at\r\n                ).run();\r\n            });\r\n\r\n            await Promise.all(promises);\r\n\r\n            return {\r\n                message: '\u6279\u91CF\u66F4\u65B0\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\u6210\u529F',\r\n                updatedCount: configs.length\r\n            };\r\n        } catch (error) {\r\n            console.error('\u6279\u91CF\u66F4\u65B0\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\u5931\u8D25:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    // ===================== \u7EDF\u8BA1\u548C\u5BFC\u51FA\u529F\u80FD =====================\r\n\r\n    // \u83B7\u53D6\u641C\u7D22\u6E90\u7EDF\u8BA1\u4FE1\u606F\r\n    async getSearchSourceStats(env, userId) {\r\n        try {\r\n            // \u83B7\u53D6\u5404\u7C7B\u7EDF\u8BA1\u6570\u636E\r\n            const [majorCategoriesCount, categoriesCount, sourcesCount, userConfigsCount] = await Promise.all([\r\n                env.DB.prepare(`SELECT COUNT(*) as count FROM search_major_categories WHERE is_active = 1`).first(),\r\n                env.DB.prepare(`SELECT COUNT(*) as count FROM search_source_categories WHERE is_active = 1`).first(),\r\n                env.DB.prepare(`SELECT COUNT(*) as count FROM search_sources WHERE is_active = 1`).first(),\r\n                env.DB.prepare(`SELECT COUNT(*) as count FROM user_search_source_configs WHERE user_id = ? AND is_enabled = 1`).bind(userId).first()\r\n            ]);\r\n\r\n            // \u83B7\u53D6\u6309\u5927\u7C7B\u7684\u5206\u5E03\u7EDF\u8BA1\r\n            const majorCategoryStats = await env.DB.prepare(`\r\n                SELECT \r\n                    mc.id,\r\n                    mc.name,\r\n                    mc.icon,\r\n                    COUNT(DISTINCT sc.id) as categories_count,\r\n                    COUNT(DISTINCT ss.id) as sources_count,\r\n                    COUNT(DISTINCT CASE WHEN usc.is_enabled = 1 THEN usc.id END) as enabled_sources_count\r\n                FROM search_major_categories mc\r\n                LEFT JOIN search_source_categories sc ON mc.id = sc.major_category_id AND sc.is_active = 1\r\n                LEFT JOIN search_sources ss ON sc.id = ss.category_id AND ss.is_active = 1\r\n                LEFT JOIN user_search_source_configs usc ON ss.id = usc.source_id AND usc.user_id = ?\r\n                WHERE mc.is_active = 1\r\n                GROUP BY mc.id\r\n                ORDER BY mc.display_order ASC\r\n            `).bind(userId).all();\r\n\r\n            return {\r\n                overview: {\r\n                    majorCategories: majorCategoriesCount.count,\r\n                    categories: categoriesCount.count,\r\n                    totalSources: sourcesCount.count,\r\n                    enabledSources: userConfigsCount.count\r\n                },\r\n                majorCategoryStats: majorCategoryStats.results || []\r\n            };\r\n        } catch (error) {\r\n            console.error('\u83B7\u53D6\u641C\u7D22\u6E90\u7EDF\u8BA1\u4FE1\u606F\u5931\u8D25:', error);\r\n            throw new Error('\u83B7\u53D6\u641C\u7D22\u6E90\u7EDF\u8BA1\u4FE1\u606F\u5931\u8D25');\r\n        }\r\n    }\r\n\r\n    // \u5BFC\u51FA\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\r\n    async exportUserSearchSources(env, userId) {\r\n        try {\r\n            // \u83B7\u53D6\u7528\u6237\u7684\u6240\u6709\u914D\u7F6E\u548C\u641C\u7D22\u6E90\u4FE1\u606F\r\n            const sources = await this.getUserSearchSources(env, userId, { includeSystem: true });\r\n            const configs = await this.getUserSourceConfigs(env, userId);\r\n            const categories = await this.getUserSourceCategories(env, userId, { includeSystem: true });\r\n            const majorCategories = await this.getAllMajorCategories(env);\r\n\r\n            return {\r\n                exportTime: new Date().toISOString(),\r\n                userId,\r\n                majorCategories: majorCategories.majorCategories,\r\n                categories: categories.categories,\r\n                sources: sources.sources,\r\n                userConfigs: configs.configs,\r\n                version: '2.3.1'\r\n            };\r\n        } catch (error) {\r\n            console.error('\u5BFC\u51FA\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\u5931\u8D25:', error);\r\n            throw new Error('\u5BFC\u51FA\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\u5931\u8D25');\r\n        }\r\n    }\r\n\r\n    // ===================== \u8F85\u52A9\u65B9\u6CD5 =====================\r\n\r\n    // \u683C\u5F0F\u5316\u5927\u7C7B\u6570\u636E\r\n    formatMajorCategory(data) {\r\n        return {\r\n            id: data.id,\r\n            name: data.name,\r\n            description: data.description || '',\r\n            icon: data.icon || '\uD83C\uDF1F',\r\n            color: data.color || '#6b7280',\r\n            requiresKeyword: Boolean(data.requires_keyword),\r\n            displayOrder: data.display_order || 999,\r\n            isSystem: Boolean(data.is_system),\r\n            isActive: Boolean(data.is_active),\r\n            createdAt: data.created_at,\r\n            updatedAt: data.updated_at\r\n        };\r\n    }\r\n\r\n    // \u683C\u5F0F\u5316\u5206\u7C7B\u6570\u636E - \uD83D\uDD34 \u786E\u4FDD\u8FD4\u56DE\u6240\u6709\u5FC5\u8981\u5B57\u6BB5\r\n    formatSourceCategory(data) {\r\n        return {\r\n            id: data.id,\r\n            majorCategoryId: data.major_category_id,\r\n            majorCategoryName: data.major_category_name || '',\r\n            majorCategoryIcon: data.major_category_icon || '\uD83C\uDF1F',\r\n            name: data.name,\r\n            description: data.description || '',\r\n            icon: data.icon || '\uD83D\uDCC1',\r\n            color: data.color || '#3b82f6',\r\n            displayOrder: data.display_order || 999,\r\n            isSystem: Boolean(data.is_system),\r\n            isActive: Boolean(data.is_active),\r\n            // \uD83D\uDD34 \u786E\u4FDD\u641C\u7D22\u914D\u7F6E\u5B57\u6BB5\u6B63\u786E\u8FD4\u56DE\r\n            defaultSearchable: Boolean(data.default_searchable),\r\n            defaultSiteType: data.default_site_type || 'search',\r\n            searchPriority: data.search_priority || 5,\r\n            supportsDetailExtraction: Boolean(data.supports_detail_extraction),\r\n            extractionPriority: data.extraction_priority || 'medium',\r\n            createdBy: data.created_by,\r\n            createdAt: data.created_at,\r\n            updatedAt: data.updated_at\r\n        };\r\n    }\r\n\r\n    // \u683C\u5F0F\u5316\u641C\u7D22\u6E90\u6570\u636E\r\n    formatSearchSource(data) {\r\n        return {\r\n            id: data.id,\r\n            categoryId: data.category_id,\r\n            categoryName: data.category_name || '',\r\n            categoryIcon: data.category_icon || '\uD83D\uDCC1',\r\n            majorCategoryId: data.major_category_id,\r\n            majorCategoryName: data.major_category_name || '',\r\n            majorCategoryIcon: data.major_category_icon || '\uD83C\uDF1F',\r\n            name: data.custom_name || data.name,\r\n            originalName: data.name,\r\n            subtitle: data.custom_subtitle || data.subtitle || '',\r\n            originalSubtitle: data.subtitle || '',\r\n            description: data.description || '',\r\n            icon: data.custom_icon || data.icon || '\uD83D\uDD0D',\r\n            originalIcon: data.icon || '\uD83D\uDD0D',\r\n            urlTemplate: data.url_template,\r\n            homepageUrl: data.homepage_url || '',\r\n            siteType: data.site_type || 'search',\r\n            searchable: Boolean(data.searchable),\r\n            requiresKeyword: Boolean(data.requires_keyword),\r\n            searchPriority: data.custom_priority || data.search_priority || 5,\r\n            originalPriority: data.search_priority || 5,\r\n            supportsDetailExtraction: Boolean(data.supports_detail_extraction),\r\n            extractionQuality: data.extraction_quality || 'none',\r\n            averageExtractionTime: data.average_extraction_time || 0,\r\n            supportedFeatures: this.parseJsonSafely(data.supported_features, []),\r\n            isSystem: Boolean(data.is_system),\r\n            isActive: Boolean(data.is_active),\r\n            displayOrder: data.display_order || 999,\r\n            usageCount: data.usage_count || 0,\r\n            lastUsedAt: data.last_used_at,\r\n            // \u7528\u6237\u914D\u7F6E\r\n            userEnabled: data.user_enabled !== null ? Boolean(data.user_enabled) : (data.is_system && data.searchable ? true : false),\r\n            userNotes: data.user_notes || '',\r\n            createdBy: data.created_by,\r\n            createdAt: data.created_at,\r\n            updatedAt: data.updated_at\r\n        };\r\n    }\r\n\r\n    // \u683C\u5F0F\u5316\u7528\u6237\u914D\u7F6E\u6570\u636E\r\n    formatUserSourceConfig(data) {\r\n        return {\r\n            id: data.id,\r\n            userId: data.user_id,\r\n            sourceId: data.source_id,\r\n            sourceName: data.source_name,\r\n            sourceIcon: data.source_icon,\r\n            isSystem: Boolean(data.is_system),\r\n            categoryName: data.category_name,\r\n            majorCategoryName: data.major_category_name,\r\n            isEnabled: Boolean(data.is_enabled),\r\n            customPriority: data.custom_priority,\r\n            customName: data.custom_name,\r\n            customSubtitle: data.custom_subtitle,\r\n            customIcon: data.custom_icon,\r\n            notes: data.notes || '',\r\n            createdAt: data.created_at,\r\n            updatedAt: data.updated_at\r\n        };\r\n    }\r\n\r\n    // \u5B57\u6BB5\u8F6C\u6362 - \u5206\u7C7B\r\n    convertCategoryFieldToDb(field) {\r\n        const fieldMap = {\r\n            'name': 'name',\r\n            'description': 'description',\r\n            'icon': 'icon',\r\n            'color': 'color',\r\n            'defaultSearchable': 'default_searchable',\r\n            'defaultSiteType': 'default_site_type',\r\n            'searchPriority': 'search_priority',\r\n            'supportsDetailExtraction': 'supports_detail_extraction',\r\n            'extractionPriority': 'extraction_priority'\r\n        };\r\n        return fieldMap[field];\r\n    }\r\n\r\n    // \u5B57\u6BB5\u8F6C\u6362 - \u641C\u7D22\u6E90\r\n    convertSourceFieldToDb(field) {\r\n        const fieldMap = {\r\n            'categoryId': 'category_id',\r\n            'name': 'name',\r\n            'subtitle': 'subtitle',\r\n            'description': 'description',\r\n            'icon': 'icon',\r\n            'urlTemplate': 'url_template',\r\n            'homepageUrl': 'homepage_url',\r\n            'siteType': 'site_type',\r\n            'searchable': 'searchable',\r\n            'requiresKeyword': 'requires_keyword',\r\n            'searchPriority': 'search_priority',\r\n            'supportsDetailExtraction': 'supports_detail_extraction',\r\n            'extractionQuality': 'extraction_quality',\r\n            'supportedFeatures': 'supported_features'\r\n        };\r\n        return fieldMap[field];\r\n    }\r\n\r\n    // \u5B89\u5168\u89E3\u6790JSON\r\n    parseJsonSafely(jsonString, defaultValue = null) {\r\n        try {\r\n            return jsonString ? JSON.parse(jsonString) : defaultValue;\r\n        } catch (error) {\r\n            console.warn('JSON\u89E3\u6790\u5931\u8D25:', jsonString);\r\n            return defaultValue;\r\n        }\r\n    }\r\n}\r\n\r\n// \u5BFC\u51FA\u670D\u52A1\u5B9E\u4F8B\r\nexport const searchSourcesService = new SearchSourcesService();\r\nexport default searchSourcesService;", "// src/handlers/search-sources.js - \u4F18\u5316\u7248\u672C\uFF1A\u589E\u5F3A\u9A8C\u8BC1\u548C\u9519\u8BEF\u5904\u7406\r\nimport { utils } from '../utils.js';\r\nimport { authenticate } from '../middleware.js';\r\nimport { searchSourcesService } from '../services/search-sources-service.js';\r\n\r\n// ===================== \u641C\u7D22\u6E90\u5927\u7C7B\u7BA1\u7406 =====================\r\n\r\n// \u83B7\u53D6\u6240\u6709\u641C\u7D22\u6E90\u5927\u7C7B\r\nexport async function getMajorCategoriesHandler(request, env) {\r\n    try {\r\n        const result = await searchSourcesService.getAllMajorCategories(env);\r\n        return utils.successResponse(result);\r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u641C\u7D22\u6E90\u5927\u7C7B\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u83B7\u53D6\u641C\u7D22\u6E90\u5927\u7C7B\u5931\u8D25', 500);\r\n    }\r\n}\r\n\r\n// \u521B\u5EFA\u641C\u7D22\u6E90\u5927\u7C7B (\u9700\u8981\u7BA1\u7406\u5458\u6743\u9650)\r\nexport async function createMajorCategoryHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    // \u7B80\u5355\u7684\u7BA1\u7406\u5458\u68C0\u67E5 - \u5B9E\u9645\u9879\u76EE\u4E2D\u5E94\u8BE5\u6709\u66F4\u5B8C\u5584\u7684\u6743\u9650\u7CFB\u7EDF\r\n    if (!user.permissions.includes('admin') && !user.permissions.includes('search_source_management')) {\r\n        return utils.errorResponse('\u6743\u9650\u4E0D\u8DB3', 403);\r\n    }\r\n\r\n    try {\r\n        const body = await request.json().catch(() => ({}));\r\n        const { name, description, icon, color, requiresKeyword } = body;\r\n\r\n        // \u589E\u5F3A\u8F93\u5165\u9A8C\u8BC1\r\n        const validation = validateMajorCategoryInput({ name, description, icon, color, requiresKeyword });\r\n        if (!validation.valid) {\r\n            return utils.errorResponse(validation.error, 400);\r\n        }\r\n\r\n        const majorCategoryData = {\r\n            name: name.trim(),\r\n            description: description?.trim() || '',\r\n            icon: icon?.trim() || '\uD83C\uDF1F',\r\n            color: color?.trim() || '#6b7280',\r\n            requiresKeyword: requiresKeyword !== false\r\n        };\r\n\r\n        const result = await searchSourcesService.createMajorCategory(env, majorCategoryData, user.id);\r\n        \r\n        await utils.logUserAction(env, user.id, 'major_category_create', {\r\n            majorCategoryId: result.id,\r\n            majorCategoryName: result.name\r\n        }, request);\r\n\r\n        return utils.successResponse(result);\r\n    } catch (error) {\r\n        console.error('\u521B\u5EFA\u641C\u7D22\u6E90\u5927\u7C7B\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u521B\u5EFA\u641C\u7D22\u6E90\u5927\u7C7B\u5931\u8D25: ' + error.message, 500);\r\n    }\r\n}\r\n\r\n// ===================== \u641C\u7D22\u6E90\u5206\u7C7B\u7BA1\u7406 =====================\r\n\r\n// \u83B7\u53D6\u7528\u6237\u7684\u641C\u7D22\u6E90\u5206\u7C7B\r\nexport async function getSourceCategoriesHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const url = new URL(request.url);\r\n        const majorCategoryId = url.searchParams.get('majorCategory');\r\n        const includeSystem = url.searchParams.get('includeSystem') !== 'false';\r\n\r\n        const result = await searchSourcesService.getUserSourceCategories(\r\n            env, \r\n            user.id, \r\n            { majorCategoryId, includeSystem }\r\n        );\r\n        \r\n        return utils.successResponse(result);\r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u641C\u7D22\u6E90\u5206\u7C7B\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u83B7\u53D6\u641C\u7D22\u6E90\u5206\u7C7B\u5931\u8D25', 500);\r\n    }\r\n}\r\n\r\n// \u521B\u5EFA\u641C\u7D22\u6E90\u5206\u7C7B\r\nexport async function createSourceCategoryHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const body = await request.json().catch(() => ({}));\r\n        const {\r\n            majorCategoryId,\r\n            name,\r\n            description,\r\n            icon,\r\n            color,\r\n            defaultSearchable,\r\n            defaultSiteType,\r\n            searchPriority,\r\n            supportsDetailExtraction,\r\n            extractionPriority\r\n        } = body;\r\n\r\n        // \u589E\u5F3A\u8F93\u5165\u9A8C\u8BC1\r\n        const validation = validateCategoryInput(body);\r\n        if (!validation.valid) {\r\n            return utils.errorResponse(validation.error, 400);\r\n        }\r\n\r\n        const categoryData = {\r\n            majorCategoryId: majorCategoryId.trim(),\r\n            name: name.trim(),\r\n            description: description?.trim() || '',\r\n            icon: icon?.trim() || '\uD83D\uDCC1',\r\n            color: color?.trim() || '#3b82f6',\r\n            defaultSearchable: defaultSearchable !== false,\r\n            defaultSiteType: defaultSiteType || 'search',\r\n            searchPriority: Math.min(Math.max(parseInt(searchPriority) || 5, 1), 10),\r\n            supportsDetailExtraction: supportsDetailExtraction === true,\r\n            extractionPriority: extractionPriority || 'medium'\r\n        };\r\n\r\n        const result = await searchSourcesService.createSourceCategory(env, categoryData, user.id);\r\n        \r\n        await utils.logUserAction(env, user.id, 'source_category_create', {\r\n            categoryId: result.id,\r\n            categoryName: result.name,\r\n            majorCategoryId: result.majorCategoryId\r\n        }, request);\r\n\r\n        return utils.successResponse(result);\r\n    } catch (error) {\r\n        console.error('\u521B\u5EFA\u641C\u7D22\u6E90\u5206\u7C7B\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u521B\u5EFA\u641C\u7D22\u6E90\u5206\u7C7B\u5931\u8D25: ' + error.message, 500);\r\n    }\r\n}\r\n\r\n// \u66F4\u65B0\u641C\u7D22\u6E90\u5206\u7C7B\r\nexport async function updateSourceCategoryHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const categoryId = request.params?.id;\r\n        if (!categoryId) {\r\n            return utils.errorResponse('\u5206\u7C7BID\u4E0D\u80FD\u4E3A\u7A7A', 400);\r\n        }\r\n\r\n        const body = await request.json().catch(() => ({}));\r\n        \r\n        // \u589E\u5F3A\u8F93\u5165\u9A8C\u8BC1\r\n        const validation = validateCategoryUpdateInput(body);\r\n        if (!validation.valid) {\r\n            return utils.errorResponse(validation.error, 400);\r\n        }\r\n\r\n        const updateData = {};\r\n\r\n        // \u5141\u8BB8\u66F4\u65B0\u7684\u5B57\u6BB5\r\n        const allowedFields = [\r\n            'name', 'description', 'icon', 'color', \r\n            'defaultSearchable', 'defaultSiteType', 'searchPriority',\r\n            'supportsDetailExtraction', 'extractionPriority'\r\n        ];\r\n\r\n        allowedFields.forEach(field => {\r\n            if (body.hasOwnProperty(field)) {\r\n                if (field === 'searchPriority') {\r\n                    updateData[field] = Math.min(Math.max(parseInt(body[field]) || 5, 1), 10);\r\n                } else if (typeof body[field] === 'string') {\r\n                    updateData[field] = body[field].trim();\r\n                } else {\r\n                    updateData[field] = body[field];\r\n                }\r\n            }\r\n        });\r\n\r\n        if (Object.keys(updateData).length === 0) {\r\n            return utils.errorResponse('\u6CA1\u6709\u63D0\u4F9B\u8981\u66F4\u65B0\u7684\u6570\u636E', 400);\r\n        }\r\n\r\n        const result = await searchSourcesService.updateSourceCategory(env, categoryId, updateData, user.id);\r\n        \r\n        await utils.logUserAction(env, user.id, 'source_category_update', {\r\n            categoryId,\r\n            updatedFields: Object.keys(updateData)\r\n        }, request);\r\n\r\n        return utils.successResponse(result);\r\n    } catch (error) {\r\n        console.error('\u66F4\u65B0\u641C\u7D22\u6E90\u5206\u7C7B\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u66F4\u65B0\u641C\u7D22\u6E90\u5206\u7C7B\u5931\u8D25: ' + error.message, 500);\r\n    }\r\n}\r\n\r\n// \u5220\u9664\u641C\u7D22\u6E90\u5206\u7C7B\r\nexport async function deleteSourceCategoryHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const categoryId = request.params?.id;\r\n        if (!categoryId) {\r\n            return utils.errorResponse('\u5206\u7C7BID\u4E0D\u80FD\u4E3A\u7A7A', 400);\r\n        }\r\n\r\n        const result = await searchSourcesService.deleteSourceCategory(env, categoryId, user.id);\r\n        \r\n        await utils.logUserAction(env, user.id, 'source_category_delete', {\r\n            categoryId,\r\n            categoryName: result.deletedCategory.name\r\n        }, request);\r\n\r\n        return utils.successResponse(result);\r\n    } catch (error) {\r\n        console.error('\u5220\u9664\u641C\u7D22\u6E90\u5206\u7C7B\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u5220\u9664\u641C\u7D22\u6E90\u5206\u7C7B\u5931\u8D25: ' + error.message, 500);\r\n    }\r\n}\r\n\r\n// ===================== \u641C\u7D22\u6E90\u7BA1\u7406 =====================\r\n\r\n// \u83B7\u53D6\u7528\u6237\u7684\u641C\u7D22\u6E90\r\nexport async function getSearchSourcesHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const url = new URL(request.url);\r\n        const categoryId = url.searchParams.get('category');\r\n        const majorCategoryId = url.searchParams.get('majorCategory');\r\n        const searchable = url.searchParams.get('searchable');\r\n        const includeSystem = url.searchParams.get('includeSystem') !== 'false';\r\n        const enabledOnly = url.searchParams.get('enabledOnly') === 'true';\r\n\r\n        const filters = {\r\n            categoryId,\r\n            majorCategoryId,\r\n            searchable: searchable === 'true' ? true : searchable === 'false' ? false : null,\r\n            includeSystem,\r\n            enabledOnly\r\n        };\r\n\r\n        const result = await searchSourcesService.getUserSearchSources(env, user.id, filters);\r\n        \r\n        return utils.successResponse(result);\r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u641C\u7D22\u6E90\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u83B7\u53D6\u641C\u7D22\u6E90\u5931\u8D25', 500);\r\n    }\r\n}\r\n\r\n// \u521B\u5EFA\u641C\u7D22\u6E90\r\nexport async function createSearchSourceHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const body = await request.json().catch(() => ({}));\r\n        \r\n        // \u589E\u5F3A\u8F93\u5165\u9A8C\u8BC1\r\n        const validation = validateSourceInput(body);\r\n        if (!validation.valid) {\r\n            return utils.errorResponse(validation.error, 400);\r\n        }\r\n\r\n        const {\r\n            categoryId,\r\n            name,\r\n            subtitle,\r\n            description,\r\n            icon,\r\n            urlTemplate,\r\n            homepageUrl,\r\n            siteType,\r\n            searchable,\r\n            requiresKeyword,\r\n            searchPriority,\r\n            supportsDetailExtraction,\r\n            extractionQuality,\r\n            supportedFeatures\r\n        } = body;\r\n\r\n        const sourceData = {\r\n            categoryId: categoryId.trim(),\r\n            name: name.trim(),\r\n            subtitle: subtitle?.trim() || '',\r\n            description: description?.trim() || '',\r\n            icon: icon?.trim() || '\uD83D\uDD0D',\r\n            urlTemplate: urlTemplate.trim(),\r\n            homepageUrl: homepageUrl?.trim() || '',\r\n            siteType: siteType || 'search',\r\n            searchable: searchable !== false,\r\n            requiresKeyword: requiresKeyword !== false,\r\n            searchPriority: Math.min(Math.max(parseInt(searchPriority) || 5, 1), 10),\r\n            supportsDetailExtraction: supportsDetailExtraction === true,\r\n            extractionQuality: extractionQuality || 'none',\r\n            supportedFeatures: Array.isArray(supportedFeatures) ? supportedFeatures : []\r\n        };\r\n\r\n        const result = await searchSourcesService.createSearchSource(env, sourceData, user.id);\r\n        \r\n        await utils.logUserAction(env, user.id, 'search_source_create', {\r\n            sourceId: result.id,\r\n            sourceName: result.name,\r\n            categoryId: result.categoryId\r\n        }, request);\r\n\r\n        return utils.successResponse(result);\r\n    } catch (error) {\r\n        console.error('\u521B\u5EFA\u641C\u7D22\u6E90\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u521B\u5EFA\u641C\u7D22\u6E90\u5931\u8D25: ' + error.message, 500);\r\n    }\r\n}\r\n\r\n// \u66F4\u65B0\u641C\u7D22\u6E90\r\nexport async function updateSearchSourceHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const sourceId = request.params?.id;\r\n        if (!sourceId) {\r\n            return utils.errorResponse('\u641C\u7D22\u6E90ID\u4E0D\u80FD\u4E3A\u7A7A', 400);\r\n        }\r\n\r\n        const body = await request.json().catch(() => ({}));\r\n        \r\n        // \u589E\u5F3A\u8F93\u5165\u9A8C\u8BC1\r\n        const validation = validateSourceUpdateInput(body);\r\n        if (!validation.valid) {\r\n            return utils.errorResponse(validation.error, 400);\r\n        }\r\n\r\n        const updateData = {};\r\n\r\n        // \u5141\u8BB8\u66F4\u65B0\u7684\u5B57\u6BB5\r\n        const allowedFields = [\r\n            'categoryId', 'name', 'subtitle', 'description', 'icon', \r\n            'urlTemplate', 'homepageUrl', 'siteType', 'searchable', \r\n            'requiresKeyword', 'searchPriority', 'supportsDetailExtraction',\r\n            'extractionQuality', 'supportedFeatures'\r\n        ];\r\n\r\n        allowedFields.forEach(field => {\r\n            if (body.hasOwnProperty(field)) {\r\n                if (field === 'searchPriority') {\r\n                    updateData[field] = Math.min(Math.max(parseInt(body[field]) || 5, 1), 10);\r\n                } else if (field === 'supportedFeatures') {\r\n                    updateData[field] = Array.isArray(body[field]) ? body[field] : [];\r\n                } else if (typeof body[field] === 'string') {\r\n                    updateData[field] = body[field].trim();\r\n                } else {\r\n                    updateData[field] = body[field];\r\n                }\r\n            }\r\n        });\r\n\r\n        if (Object.keys(updateData).length === 0) {\r\n            return utils.errorResponse('\u6CA1\u6709\u63D0\u4F9B\u8981\u66F4\u65B0\u7684\u6570\u636E', 400);\r\n        }\r\n\r\n        const result = await searchSourcesService.updateSearchSource(env, sourceId, updateData, user.id);\r\n        \r\n        await utils.logUserAction(env, user.id, 'search_source_update', {\r\n            sourceId,\r\n            updatedFields: Object.keys(updateData)\r\n        }, request);\r\n\r\n        return utils.successResponse(result);\r\n    } catch (error) {\r\n        console.error('\u66F4\u65B0\u641C\u7D22\u6E90\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u66F4\u65B0\u641C\u7D22\u6E90\u5931\u8D25: ' + error.message, 500);\r\n    }\r\n}\r\n\r\n// \u5220\u9664\u641C\u7D22\u6E90\r\nexport async function deleteSearchSourceHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const sourceId = request.params?.id;\r\n        if (!sourceId) {\r\n            return utils.errorResponse('\u641C\u7D22\u6E90ID\u4E0D\u80FD\u4E3A\u7A7A', 400);\r\n        }\r\n\r\n        const result = await searchSourcesService.deleteSearchSource(env, sourceId, user.id);\r\n        \r\n        await utils.logUserAction(env, user.id, 'search_source_delete', {\r\n            sourceId,\r\n            sourceName: result.deletedSource.name\r\n        }, request);\r\n\r\n        return utils.successResponse(result);\r\n    } catch (error) {\r\n        console.error('\u5220\u9664\u641C\u7D22\u6E90\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u5220\u9664\u641C\u7D22\u6E90\u5931\u8D25: ' + error.message, 500);\r\n    }\r\n}\r\n\r\n// ===================== \u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\u7BA1\u7406 =====================\r\n\r\n// \u83B7\u53D6\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\r\nexport async function getUserSourceConfigsHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const result = await searchSourcesService.getUserSourceConfigs(env, user.id);\r\n        return utils.successResponse(result);\r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u83B7\u53D6\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\u5931\u8D25', 500);\r\n    }\r\n}\r\n\r\n// \u66F4\u65B0\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\r\nexport async function updateUserSourceConfigHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const body = await request.json().catch(() => ({}));\r\n        \r\n        // \u589E\u5F3A\u8F93\u5165\u9A8C\u8BC1\r\n        const validation = validateUserConfigInput(body);\r\n        if (!validation.valid) {\r\n            return utils.errorResponse(validation.error, 400);\r\n        }\r\n\r\n        const { sourceId, isEnabled, customPriority, customName, customSubtitle, customIcon, notes } = body;\r\n\r\n        const configData = {\r\n            sourceId: sourceId.trim(),\r\n            isEnabled: isEnabled !== false,\r\n            customPriority: customPriority ? Math.min(Math.max(parseInt(customPriority), 1), 10) : null,\r\n            customName: customName?.trim() || null,\r\n            customSubtitle: customSubtitle?.trim() || null,\r\n            customIcon: customIcon?.trim() || null,\r\n            notes: notes?.trim() || null\r\n        };\r\n\r\n        const result = await searchSourcesService.updateUserSourceConfig(env, user.id, configData);\r\n        \r\n        await utils.logUserAction(env, user.id, 'user_source_config_update', {\r\n            sourceId,\r\n            isEnabled: configData.isEnabled\r\n        }, request);\r\n\r\n        return utils.successResponse(result);\r\n    } catch (error) {\r\n        console.error('\u66F4\u65B0\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u66F4\u65B0\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\u5931\u8D25: ' + error.message, 500);\r\n    }\r\n}\r\n\r\n// \u6279\u91CF\u66F4\u65B0\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\r\nexport async function batchUpdateUserSourceConfigsHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const body = await request.json().catch(() => ({}));\r\n        const { configs } = body;\r\n\r\n        // \u589E\u5F3A\u8F93\u5165\u9A8C\u8BC1\r\n        const validation = validateBatchConfigInput(configs);\r\n        if (!validation.valid) {\r\n            return utils.errorResponse(validation.error, 400);\r\n        }\r\n\r\n        const result = await searchSourcesService.batchUpdateUserSourceConfigs(env, user.id, configs);\r\n        \r\n        await utils.logUserAction(env, user.id, 'user_source_configs_batch_update', {\r\n            configCount: configs.length,\r\n            enabledCount: configs.filter(c => c.isEnabled !== false).length\r\n        }, request);\r\n\r\n        return utils.successResponse(result);\r\n    } catch (error) {\r\n        console.error('\u6279\u91CF\u66F4\u65B0\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u6279\u91CF\u66F4\u65B0\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\u5931\u8D25: ' + error.message, 500);\r\n    }\r\n}\r\n\r\n// ===================== \u641C\u7D22\u6E90\u7EDF\u8BA1\u548C\u5BFC\u5165\u5BFC\u51FA =====================\r\n\r\n// \u83B7\u53D6\u641C\u7D22\u6E90\u7EDF\u8BA1\u4FE1\u606F\r\nexport async function getSearchSourceStatsHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const result = await searchSourcesService.getSearchSourceStats(env, user.id);\r\n        return utils.successResponse(result);\r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u641C\u7D22\u6E90\u7EDF\u8BA1\u4FE1\u606F\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u83B7\u53D6\u641C\u7D22\u6E90\u7EDF\u8BA1\u4FE1\u606F\u5931\u8D25', 500);\r\n    }\r\n}\r\n\r\n// \u5BFC\u51FA\u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\r\nexport async function exportUserSearchSourcesHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n\r\n    try {\r\n        const result = await searchSourcesService.exportUserSearchSources(env, user.id);\r\n        \r\n        await utils.logUserAction(env, user.id, 'search_sources_export', {\r\n            exportedCount: result.sources?.length || 0\r\n        }, request);\r\n\r\n        return utils.successResponse(result);\r\n    } catch (error) {\r\n        console.error('\u5BFC\u51FA\u641C\u7D22\u6E90\u914D\u7F6E\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u5BFC\u51FA\u641C\u7D22\u6E90\u914D\u7F6E\u5931\u8D25', 500);\r\n    }\r\n}\r\n\r\n// ===================== \u9A8C\u8BC1\u51FD\u6570 =====================\r\n\r\n// \u9A8C\u8BC1\u5927\u7C7B\u8F93\u5165\r\nfunction validateMajorCategoryInput(data) {\r\n    if (!data.name || typeof data.name !== 'string' || data.name.trim().length === 0) {\r\n        return { valid: false, error: '\u5927\u7C7B\u540D\u79F0\u4E0D\u80FD\u4E3A\u7A7A' };\r\n    }\r\n\r\n    if (data.name.length > 30) {\r\n        return { valid: false, error: '\u5927\u7C7B\u540D\u79F0\u4E0D\u80FD\u8D85\u8FC730\u4E2A\u5B57\u7B26' };\r\n    }\r\n\r\n    if (data.description && data.description.length > 100) {\r\n        return { valid: false, error: '\u5927\u7C7B\u63CF\u8FF0\u4E0D\u80FD\u8D85\u8FC7100\u4E2A\u5B57\u7B26' };\r\n    }\r\n\r\n    if (data.color && !/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(data.color)) {\r\n        return { valid: false, error: '\u989C\u8272\u683C\u5F0F\u4E0D\u6B63\u786E' };\r\n    }\r\n\r\n    return { valid: true };\r\n}\r\n\r\n// \u9A8C\u8BC1\u5206\u7C7B\u8F93\u5165\r\nfunction validateCategoryInput(data) {\r\n    if (!data.majorCategoryId || typeof data.majorCategoryId !== 'string') {\r\n        return { valid: false, error: '\u5927\u7C7BID\u4E0D\u80FD\u4E3A\u7A7A' };\r\n    }\r\n\r\n    if (!data.name || typeof data.name !== 'string' || data.name.trim().length === 0) {\r\n        return { valid: false, error: '\u5206\u7C7B\u540D\u79F0\u4E0D\u80FD\u4E3A\u7A7A' };\r\n    }\r\n\r\n    if (data.name.length > 30) {\r\n        return { valid: false, error: '\u5206\u7C7B\u540D\u79F0\u4E0D\u80FD\u8D85\u8FC730\u4E2A\u5B57\u7B26' };\r\n    }\r\n\r\n    if (data.description && data.description.length > 100) {\r\n        return { valid: false, error: '\u5206\u7C7B\u63CF\u8FF0\u4E0D\u80FD\u8D85\u8FC7100\u4E2A\u5B57\u7B26' };\r\n    }\r\n\r\n    if (data.color && !/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(data.color)) {\r\n        return { valid: false, error: '\u989C\u8272\u683C\u5F0F\u4E0D\u6B63\u786E' };\r\n    }\r\n\r\n    if (data.searchPriority && (data.searchPriority < 1 || data.searchPriority > 10)) {\r\n        return { valid: false, error: '\u641C\u7D22\u4F18\u5148\u7EA7\u5FC5\u987B\u57281-10\u4E4B\u95F4' };\r\n    }\r\n\r\n    const validSiteTypes = ['search', 'browse', 'reference'];\r\n    if (data.defaultSiteType && !validSiteTypes.includes(data.defaultSiteType)) {\r\n        return { valid: false, error: '\u7F51\u7AD9\u7C7B\u578B\u5FC5\u987B\u662Fsearch\u3001browse\u6216reference' };\r\n    }\r\n\r\n    const validExtractionPriorities = ['high', 'medium', 'low', 'none'];\r\n    if (data.extractionPriority && !validExtractionPriorities.includes(data.extractionPriority)) {\r\n        return { valid: false, error: '\u63D0\u53D6\u4F18\u5148\u7EA7\u5FC5\u987B\u662Fhigh\u3001medium\u3001low\u6216none' };\r\n    }\r\n\r\n    return { valid: true };\r\n}\r\n\r\n// \u9A8C\u8BC1\u5206\u7C7B\u66F4\u65B0\u8F93\u5165\r\nfunction validateCategoryUpdateInput(data) {\r\n    if (data.name !== undefined && (!data.name || data.name.trim().length === 0)) {\r\n        return { valid: false, error: '\u5206\u7C7B\u540D\u79F0\u4E0D\u80FD\u4E3A\u7A7A' };\r\n    }\r\n\r\n    if (data.name && data.name.length > 30) {\r\n        return { valid: false, error: '\u5206\u7C7B\u540D\u79F0\u4E0D\u80FD\u8D85\u8FC730\u4E2A\u5B57\u7B26' };\r\n    }\r\n\r\n    if (data.description && data.description.length > 100) {\r\n        return { valid: false, error: '\u5206\u7C7B\u63CF\u8FF0\u4E0D\u80FD\u8D85\u8FC7100\u4E2A\u5B57\u7B26' };\r\n    }\r\n\r\n    if (data.color && !/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(data.color)) {\r\n        return { valid: false, error: '\u989C\u8272\u683C\u5F0F\u4E0D\u6B63\u786E' };\r\n    }\r\n\r\n    return { valid: true };\r\n}\r\n\r\n// \u9A8C\u8BC1\u641C\u7D22\u6E90\u8F93\u5165\r\nfunction validateSourceInput(data) {\r\n    if (!data.categoryId || typeof data.categoryId !== 'string') {\r\n        return { valid: false, error: '\u5206\u7C7BID\u4E0D\u80FD\u4E3A\u7A7A' };\r\n    }\r\n\r\n    if (!data.name || typeof data.name !== 'string' || data.name.trim().length === 0) {\r\n        return { valid: false, error: '\u641C\u7D22\u6E90\u540D\u79F0\u4E0D\u80FD\u4E3A\u7A7A' };\r\n    }\r\n\r\n    if (data.name.length > 50) {\r\n        return { valid: false, error: '\u641C\u7D22\u6E90\u540D\u79F0\u4E0D\u80FD\u8D85\u8FC750\u4E2A\u5B57\u7B26' };\r\n    }\r\n\r\n    if (!data.urlTemplate || typeof data.urlTemplate !== 'string' || data.urlTemplate.trim().length === 0) {\r\n        return { valid: false, error: 'URL\u6A21\u677F\u4E0D\u80FD\u4E3A\u7A7A' };\r\n    }\r\n\r\n    // \u9A8C\u8BC1URL\u683C\u5F0F\r\n    if (!/^https?:\\/\\/.+/.test(data.urlTemplate)) {\r\n        return { valid: false, error: 'URL\u6A21\u677F\u683C\u5F0F\u4E0D\u6B63\u786E' };\r\n    }\r\n\r\n    // \u5982\u679C\u662F\u641C\u7D22\u6E90\uFF0C\u5FC5\u987B\u5305\u542B{keyword}\r\n    if (data.searchable !== false && !data.urlTemplate.includes('{keyword}')) {\r\n        return { valid: false, error: '\u641C\u7D22\u6E90\u7684URL\u6A21\u677F\u5FC5\u987B\u5305\u542B{keyword}\u5360\u4F4D\u7B26' };\r\n    }\r\n\r\n    if (data.subtitle && data.subtitle.length > 100) {\r\n        return { valid: false, error: '\u641C\u7D22\u6E90\u526F\u6807\u9898\u4E0D\u80FD\u8D85\u8FC7100\u4E2A\u5B57\u7B26' };\r\n    }\r\n\r\n    if (data.description && data.description.length > 200) {\r\n        return { valid: false, error: '\u641C\u7D22\u6E90\u63CF\u8FF0\u4E0D\u80FD\u8D85\u8FC7200\u4E2A\u5B57\u7B26' };\r\n    }\r\n\r\n    const validSiteTypes = ['search', 'browse', 'reference'];\r\n    if (data.siteType && !validSiteTypes.includes(data.siteType)) {\r\n        return { valid: false, error: '\u7F51\u7AD9\u7C7B\u578B\u5FC5\u987B\u662Fsearch\u3001browse\u6216reference' };\r\n    }\r\n\r\n    const validExtractionQualities = ['excellent', 'good', 'fair', 'poor', 'none'];\r\n    if (data.extractionQuality && !validExtractionQualities.includes(data.extractionQuality)) {\r\n        return { valid: false, error: '\u63D0\u53D6\u8D28\u91CF\u5FC5\u987B\u662Fexcellent\u3001good\u3001fair\u3001poor\u6216none' };\r\n    }\r\n\r\n    return { valid: true };\r\n}\r\n\r\n// \u9A8C\u8BC1\u641C\u7D22\u6E90\u66F4\u65B0\u8F93\u5165\r\nfunction validateSourceUpdateInput(data) {\r\n    if (data.name !== undefined && (!data.name || data.name.trim().length === 0)) {\r\n        return { valid: false, error: '\u641C\u7D22\u6E90\u540D\u79F0\u4E0D\u80FD\u4E3A\u7A7A' };\r\n    }\r\n\r\n    if (data.name && data.name.length > 50) {\r\n        return { valid: false, error: '\u641C\u7D22\u6E90\u540D\u79F0\u4E0D\u80FD\u8D85\u8FC750\u4E2A\u5B57\u7B26' };\r\n    }\r\n\r\n    if (data.urlTemplate && !/^https?:\\/\\/.+/.test(data.urlTemplate)) {\r\n        return { valid: false, error: 'URL\u6A21\u677F\u683C\u5F0F\u4E0D\u6B63\u786E' };\r\n    }\r\n\r\n    return { valid: true };\r\n}\r\n\r\n// \u9A8C\u8BC1\u7528\u6237\u914D\u7F6E\u8F93\u5165\r\nfunction validateUserConfigInput(data) {\r\n    if (!data.sourceId || typeof data.sourceId !== 'string') {\r\n        return { valid: false, error: '\u641C\u7D22\u6E90ID\u4E0D\u80FD\u4E3A\u7A7A' };\r\n    }\r\n\r\n    if (data.customPriority && (data.customPriority < 1 || data.customPriority > 10)) {\r\n        return { valid: false, error: '\u81EA\u5B9A\u4E49\u4F18\u5148\u7EA7\u5FC5\u987B\u57281-10\u4E4B\u95F4' };\r\n    }\r\n\r\n    if (data.customName && data.customName.length > 50) {\r\n        return { valid: false, error: '\u81EA\u5B9A\u4E49\u540D\u79F0\u4E0D\u80FD\u8D85\u8FC750\u4E2A\u5B57\u7B26' };\r\n    }\r\n\r\n    if (data.customSubtitle && data.customSubtitle.length > 100) {\r\n        return { valid: false, error: '\u81EA\u5B9A\u4E49\u526F\u6807\u9898\u4E0D\u80FD\u8D85\u8FC7100\u4E2A\u5B57\u7B26' };\r\n    }\r\n\r\n    if (data.notes && data.notes.length > 500) {\r\n        return { valid: false, error: '\u5907\u6CE8\u4E0D\u80FD\u8D85\u8FC7500\u4E2A\u5B57\u7B26' };\r\n    }\r\n\r\n    return { valid: true };\r\n}\r\n\r\n// \u9A8C\u8BC1\u6279\u91CF\u914D\u7F6E\u8F93\u5165\r\nfunction validateBatchConfigInput(configs) {\r\n    if (!Array.isArray(configs) || configs.length === 0) {\r\n        return { valid: false, error: '\u914D\u7F6E\u5217\u8868\u4E0D\u80FD\u4E3A\u7A7A' };\r\n    }\r\n\r\n    if (configs.length > 100) {\r\n        return { valid: false, error: '\u6279\u91CF\u66F4\u65B0\u4E0D\u80FD\u8D85\u8FC7100\u4E2A\u914D\u7F6E' };\r\n    }\r\n\r\n    for (let i = 0; i < configs.length; i++) {\r\n        const config = configs[i];\r\n        const validation = validateUserConfigInput(config);\r\n        if (!validation.valid) {\r\n            return { valid: false, error: `\u7B2C${i + 1}\u4E2A\u914D\u7F6E: ${validation.error}` };\r\n        }\r\n    }\r\n\r\n    return { valid: true };\r\n}", "// src/handlers/system.js - \u7CFB\u7EDF\u76F8\u5173\u8DEF\u7531\u5904\u7406\u5668\uFF08\u5DF2\u79FB\u9664\u641C\u7D22\u6E90\u7BA1\u7406\u529F\u80FD\uFF09\r\nimport { utils } from '../utils.js';\r\nimport { authenticate } from '../middleware.js';\r\nimport { \r\n    checkSingleSourceStatus, \r\n    saveStatusCheckResults,\r\n    analyzePageContent\r\n} from '../services/services.js';\r\nimport { CONFIG } from '../constants.js';\r\n\r\n// ===================== \u5065\u5EB7\u68C0\u67E5\u76F8\u5173 =====================\r\n\r\n// \u5065\u5EB7\u68C0\u67E5\r\nexport async function healthCheckHandler(request, env) {\r\n    return utils.successResponse({\r\n        status: 'healthy',\r\n        timestamp: Date.now(),\r\n        version: env.APP_VERSION || '1.3.0'\r\n    });\r\n}\r\n\r\n// ===================== \u641C\u7D22\u6E90\u72B6\u6001\u68C0\u67E5\u76F8\u5173 =====================\r\n\r\n// \u641C\u7D22\u6E90\u72B6\u6001\u68C0\u67E5\r\nexport async function sourceStatusCheckHandler(request, env) {\r\n    try {\r\n        const body = await request.json().catch(() => ({}));\r\n        const { sources, keyword, options = {} } = body;\r\n        \r\n        if (!sources || !Array.isArray(sources) || sources.length === 0) {\r\n            return utils.errorResponse('\u641C\u7D22\u6E90\u5217\u8868\u4E0D\u80FD\u4E3A\u7A7A', 400);\r\n        }\r\n        \r\n        if (!keyword || typeof keyword !== 'string' || keyword.trim().length === 0) {\r\n            return utils.errorResponse('\u641C\u7D22\u5173\u952E\u8BCD\u4E0D\u80FD\u4E3A\u7A7A', 400);\r\n        }\r\n        \r\n        const trimmedKeyword = keyword.trim();\r\n        const keywordHash = await utils.hashPassword(`${trimmedKeyword}${Date.now()}`);\r\n        const timeout = Math.min(Math.max(options.timeout || 10000, 3000), 30000);\r\n        const checkContentMatch = options.checkContentMatch !== false;\r\n        \r\n        console.log(`\u5F00\u59CB\u68C0\u67E5 ${sources.length} \u4E2A\u641C\u7D22\u6E90\uFF0C\u5173\u952E\u8BCD: ${trimmedKeyword}`);\r\n        \r\n        const results = [];\r\n        const concurrency = Math.min(sources.length, 3);\r\n        \r\n        for (let i = 0; i < sources.length; i += concurrency) {\r\n            const batch = sources.slice(i, i + concurrency);\r\n            const batchPromises = batch.map(source => \r\n                checkSingleSourceStatus(source, trimmedKeyword, keywordHash, {\r\n                    timeout,\r\n                    checkContentMatch,\r\n                    env\r\n                })\r\n            );\r\n            \r\n            const batchResults = await Promise.all(batchPromises);\r\n            results.push(...batchResults);\r\n            \r\n            if (i + concurrency < sources.length) {\r\n                await new Promise(resolve => setTimeout(resolve, 200));\r\n            }\r\n        }\r\n        \r\n        saveStatusCheckResults(env, results, trimmedKeyword).catch(console.error);\r\n        \r\n        const summary = {\r\n            total: results.length,\r\n            available: results.filter(r => r.status === 'available').length,\r\n            unavailable: results.filter(r => r.status === 'unavailable').length,\r\n            timeout: results.filter(r => r.status === 'timeout').length,\r\n            error: results.filter(r => r.status === 'error').length,\r\n            averageResponseTime: Math.round(\r\n                results.filter(r => r.responseTime > 0)\r\n                    .reduce((sum, r) => sum + r.responseTime, 0) / \r\n                Math.max(results.filter(r => r.responseTime > 0).length, 1)\r\n            ),\r\n            keyword: trimmedKeyword,\r\n            timestamp: Date.now()\r\n        };\r\n        \r\n        return utils.successResponse({\r\n            summary,\r\n            results,\r\n            message: `\u641C\u7D22\u6E90\u72B6\u6001\u68C0\u67E5\u5B8C\u6210: ${summary.available}/${summary.total} \u53EF\u7528`\r\n        });\r\n        \r\n    } catch (error) {\r\n        console.error('\u641C\u7D22\u6E90\u72B6\u6001\u68C0\u67E5\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u641C\u7D22\u6E90\u72B6\u6001\u68C0\u67E5\u5931\u8D25: ' + error.message, 500);\r\n    }\r\n}\r\n\r\n// \u83B7\u53D6\u72B6\u6001\u68C0\u67E5\u5386\u53F2\r\nexport async function sourceStatusHistoryHandler(request, env) {\r\n    const user = await authenticate(request, env);\r\n    if (!user) {\r\n        return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n    }\r\n    \r\n    try {\r\n        const url = new URL(request.url);\r\n        const limit = Math.min(parseInt(url.searchParams.get('limit') || '20'), 50);\r\n        const offset = Math.max(parseInt(url.searchParams.get('offset') || '0'), 0);\r\n        const keyword = url.searchParams.get('keyword');\r\n        \r\n        let query = `\r\n            SELECT * FROM source_status_cache \r\n            WHERE 1=1\r\n        `;\r\n        const params = [];\r\n        \r\n        if (keyword) {\r\n            query += ` AND keyword LIKE ?`;\r\n            params.push(`%${keyword}%`);\r\n        }\r\n        \r\n        query += ` ORDER BY created_at DESC LIMIT ? OFFSET ?`;\r\n        params.push(limit, offset);\r\n        \r\n        const result = await env.DB.prepare(query).bind(...params).all();\r\n        \r\n        const history = result.results.map(item => ({\r\n            id: item.id,\r\n            sourceId: item.source_id,\r\n            keyword: item.keyword,\r\n            status: item.status,\r\n            available: Boolean(item.available),\r\n            contentMatch: Boolean(item.content_match),\r\n            responseTime: item.response_time,\r\n            qualityScore: item.quality_score,\r\n            lastChecked: item.created_at,\r\n            checkError: item.check_error\r\n        }));\r\n        \r\n        return utils.successResponse({\r\n            history,\r\n            total: result.results.length,\r\n            limit,\r\n            offset\r\n        });\r\n        \r\n    } catch (error) {\r\n        console.error('\u83B7\u53D6\u72B6\u6001\u68C0\u67E5\u5386\u53F2\u5931\u8D25:', error);\r\n        return utils.errorResponse('\u83B7\u53D6\u5386\u53F2\u5931\u8D25', 500);\r\n    }\r\n}\r\n\r\n// ===================== \u7CFB\u7EDF\u914D\u7F6E\u76F8\u5173 =====================\r\n\r\n// \u83B7\u53D6\u914D\u7F6E\r\nexport async function getConfigHandler(request, env) {\r\n    return utils.successResponse({\r\n        allowRegistration: (env.ALLOW_REGISTRATION || 'true') === 'true',\r\n        minUsernameLength: parseInt(env.MIN_USERNAME_LENGTH || '3'),\r\n        maxUsernameLength: parseInt(env.MAX_USERNAME_LENGTH || '20'),\r\n        minPasswordLength: parseInt(env.MIN_PASSWORD_LENGTH || '6'),\r\n        maxFavoritesPerUser: parseInt(env.MAX_FAVORITES_PER_USER || '1000'),\r\n        maxHistoryPerUser: parseInt(env.MAX_HISTORY_PER_USER || '1000'),\r\n        maxTagsPerUser: parseInt(env.MAX_TAGS_PER_USER || '50'),\r\n        version: env.APP_VERSION || '1.3.0'\r\n    });\r\n}\r\n\r\n// ===================== \u884C\u4E3A\u8BB0\u5F55\u76F8\u5173 =====================\r\n\r\n// \u8BB0\u5F55\u884C\u4E3A\r\nexport async function recordActionHandler(request, env) {\r\n    try {\r\n        const body = await request.json().catch(() => ({}));\r\n        const { action, data, timestamp, sessionId } = body;\r\n\r\n        let actionType = 'unknown';\r\n        if (action && typeof action === 'string' && action.trim()) {\r\n            actionType = action.trim();\r\n        }\r\n\r\n        const allowedActions = CONFIG.ALLOWED_ACTIONS;\r\n\r\n        if (!allowedActions.includes(actionType)) {\r\n            actionType = 'custom';\r\n        }\r\n\r\n        const user = await authenticate(request, env);\r\n        const userId = user ? user.id : null;\r\n\r\n        if (userId && env.ENABLE_ACTION_LOGGING === 'true') {\r\n            await utils.logUserAction(env, userId, actionType, data || {}, request);\r\n        }\r\n\r\n        return utils.successResponse({ \r\n            recorded: true,\r\n            actionType,\r\n            userId: userId || null,\r\n            timestamp: Date.now()\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('\u8BB0\u5F55\u884C\u4E3A\u5931\u8D25:', error);\r\n        return utils.successResponse({ \r\n            recorded: false, \r\n            error: 'silent_failure',\r\n            message: '\u884C\u4E3A\u8BB0\u5F55\u5931\u8D25\u4F46\u4E0D\u5F71\u54CD\u529F\u80FD'\r\n        });\r\n    }\r\n}\r\n\r\n// ===================== \u9ED8\u8BA4\u5904\u7406\u5668 =====================\r\n\r\n// \u9ED8\u8BA4\u5904\u7406\u5668\r\nexport function defaultHandler(request) {\r\n    const url = new URL(request.url);\r\n    return utils.errorResponse(`API\u8DEF\u5F84\u4E0D\u5B58\u5728: ${url.pathname}`, 404);\r\n}\r\n\r\n// ===================== \u8BF4\u660E =====================\r\n// \u5DF2\u79FB\u9664\u7684\u641C\u7D22\u6E90\u7BA1\u7406\u529F\u80FD\uFF1A\r\n// - getSearchSourcesHandler: \u8BE5\u529F\u80FD\u73B0\u5728\u901A\u8FC7\u72EC\u7ACB\u7684\u641C\u7D22\u6E90\u7BA1\u7406API (/api/search-sources/sources) \u5904\u7406\r\n// \r\n// \u4FDD\u7559\u7684\u529F\u80FD\uFF1A\r\n// - \u641C\u7D22\u6E90\u72B6\u6001\u68C0\u67E5\u76F8\u5173\u529F\u80FD\uFF08\u56E0\u4E3A\u8FD9\u662F\u7CFB\u7EDF\u7EA7\u522B\u7684\u72B6\u6001\u68C0\u67E5\u670D\u52A1\uFF0C\u4E0D\u662F\u641C\u7D22\u6E90\u7BA1\u7406\uFF09\r\n// - \u7CFB\u7EDF\u914D\u7F6E\u83B7\u53D6\r\n// - \u884C\u4E3A\u8BB0\u5F55\r\n// - \u5065\u5EB7\u68C0\u67E5", "// src/config/parser-rules.js - \u6839\u636E\u5B9E\u9645\u641C\u7D22\u6570\u636E\u4F18\u5316\u7684\u89E3\u6790\u89C4\u5219\u914D\u7F6E\r\nexport class ParserRulesConfig {\r\n  constructor() {\r\n    this.rules = {\r\n      // JavBus \u89E3\u6790\u89C4\u5219 - \u5B9E\u9645\u9A8C\u8BC1\u7248\u672C\r\n      javbus: {\r\n        searchPage: {\r\n          detailLinkSelectors: [\r\n            {\r\n              // JavBus\u7684\u8BE6\u60C5\u9875\u76F4\u63A5\u662F\u756A\u53F7\u683C\u5F0F: /IPX-156\r\n              selector: 'a[href*=\"/\"][href]:not([href*=\"/search\"]):not([href*=\"/page\"]):not([href*=\"/genre\"]):not([href*=\"/actress\"])',\r\n              titleSelector: 'img[title], img[alt]',\r\n              titleAttribute: 'title',\r\n              mustContainCode: true,\r\n              strictDomainCheck: false,\r\n              excludeHrefs: [\r\n                '/search/', '/category/', '/star/', '/studio/', '/label/', '/genre/',\r\n                '/actresses/', '/uncensored/', '/forum/', '/doc/', '/page/', '/en',\r\n                '/ja', '/ko', '/#', '.css', '.js', 'javascript:', '/terms', '/privacy'\r\n              ],\r\n              // \u5B9E\u9645\u9A8C\u8BC1\uFF1AJavBus\u8BE6\u60C5\u9875\u5C31\u662F /\u756A\u53F7 \u683C\u5F0F\r\n              requirePattern: /\\/[A-Z]{2,6}-?\\d{3,6}(?:\\/|$)/i,\r\n              allowedDomainPatterns: [/^.*\\.javbus\\.com$/, /^javbus\\.com$/]\r\n            },\r\n            {\r\n              // \u5907\u7528\uFF1Amovie-box\u5185\u7684\u94FE\u63A5\r\n              selector: '.movie-box a[href]',\r\n              titleSelector: 'img',\r\n              titleAttribute: 'title',\r\n              mustContainCode: true,\r\n              strictDomainCheck: false,\r\n              excludeHrefs: ['/search/', '/category/', '/genre/', '/actresses/'],\r\n              requirePattern: /\\/[A-Z]{2,6}-?\\d{3,6}(?:\\/|$)/i,\r\n              allowedDomainPatterns: [/^.*\\.javbus\\.com$/, /^javbus\\.com$/]\r\n            }\r\n          ]\r\n        },\r\n        detailPage: {\r\n          title: {\r\n            selector: 'h3, .title, title',\r\n            transform: [\r\n              { type: 'replace', pattern: '\\\\s+', replacement: ' ' },\r\n              { type: 'trim' }\r\n            ]\r\n          },\r\n          code: {\r\n            selector: '.header .title span, h3 span, .info span:first-child',\r\n            transform: [\r\n              { type: 'extract', pattern: '([A-Z]{2,6}-?\\\\d{3,6})', group: 1 },\r\n              { type: 'uppercase' }\r\n            ]\r\n          },\r\n          coverImage: {\r\n            selector: '.screencap img, .bigImage img, .poster img',\r\n            attribute: 'src',\r\n            fallback: 'data-src'\r\n          },\r\n          screenshots: {\r\n            selector: '.sample-box img, .screenshot img, .preview img',\r\n            attribute: 'src',\r\n            fallback: 'data-src'\r\n          },\r\n          actresses: {\r\n            selector: '.star-name a, .actress a, .info .genre:contains(\"\u6F14\u5458\") a',\r\n            extractProfile: true\r\n          },\r\n          director: {\r\n            selector: '.info .genre:contains(\"\u5C0E\u6F14\") a, .director a',\r\n            transform: [{ type: 'trim' }]\r\n          },\r\n          studio: {\r\n            selector: '.info .genre:contains(\"\u88FD\u4F5C\u5546\") a, .studio a',\r\n            transform: [{ type: 'trim' }]\r\n          },\r\n          label: {\r\n            selector: '.info .genre:contains(\"\u767C\u884C\u5546\") a, .label a',\r\n            transform: [{ type: 'trim' }]\r\n          },\r\n          series: {\r\n            selector: '.info .genre:contains(\"\u7CFB\u5217\") a, .series a',\r\n            transform: [{ type: 'trim' }]\r\n          },\r\n          releaseDate: {\r\n            selector: '.info .genre:contains(\"\u767C\u884C\u65E5\u671F\"), .release-date',\r\n            transform: [\r\n              { type: 'extract', pattern: '(\\\\d{4}-\\\\d{2}-\\\\d{2})', group: 1 }\r\n            ]\r\n          },\r\n          duration: {\r\n            selector: '.info .genre:contains(\"\u9577\u5EA6\"), .duration',\r\n            transform: [\r\n              { type: 'extract', pattern: '(\\\\d+)\\\\s*\u5206', group: 1 }\r\n            ]\r\n          },\r\n          description: {\r\n            selector: '.description, .summary, .intro',\r\n            transform: [{ type: 'trim' }]\r\n          },\r\n          tags: {\r\n            selector: '.genre a, .tag a, .category a',\r\n            excludeTexts: ['\u6F14\u5458', '\u5C0E\u6F14', '\u88FD\u4F5C\u5546', '\u767C\u884C\u5546', '\u7CFB\u5217', '\u767C\u884C\u65E5\u671F', '\u9577\u5EA6']\r\n          },\r\n          magnetLinks: {\r\n            selector: 'a[href^=\"magnet:\"], .magnet-link',\r\n            extractSize: '.size, .filesize',\r\n            extractSeeders: '.seeders, .seeds'\r\n          },\r\n          downloadLinks: {\r\n            selector: 'a[href*=\"download\"], .download-link',\r\n            extractSize: '.size',\r\n            extractQuality: '.quality',\r\n            strictValidation: true,\r\n            allowedDomainPatterns: [/^.*\\.javbus\\.com$/, /^javbus\\.com$/]\r\n          },\r\n          rating: {\r\n            selector: '.rating, .score, .rate',\r\n            transform: [\r\n              { type: 'extract', pattern: '(\\\\d+(?:\\\\.\\\\d+)?)', group: 1 }\r\n            ]\r\n          }\r\n        }\r\n      },\r\n\r\n      // JavDB \u89E3\u6790\u89C4\u5219 - \u5B9E\u9645\u9A8C\u8BC1\u7248\u672C\r\n      javdb: {\r\n        searchPage: {\r\n          detailLinkSelectors: [\r\n            {\r\n              // JavDB\u8BE6\u60C5\u9875\u683C\u5F0F: /v/KkZ97\r\n              selector: 'a[href*=\"/v/\"]:not([href*=\"/search\"])',\r\n              titleSelector: '.video-title, .title, h4',\r\n              mustContainCode: false,\r\n              strictDomainCheck: false,\r\n              excludeHrefs: ['/search/', '/actors/', '/makers/', '/publishers/'],\r\n              requirePattern: /\\/v\\/[a-zA-Z0-9]+/,\r\n              allowedDomainPatterns: [/^.*\\.javdb\\.com$/, /^javdb\\.com$/]\r\n            },\r\n            {\r\n              // \u5907\u7528\uFF1Agrid-item\u6216movie-list\u4E2D\u7684\u94FE\u63A5\r\n              selector: '.movie-list .item a, .grid-item a, .video-node a',\r\n              titleSelector: '.video-title, .title, h4',\r\n              codeSelector: '.video-number, .uid, .meta strong',\r\n              mustContainCode: false,\r\n              strictDomainCheck: false,\r\n              excludeHrefs: ['/search/', '/actors/', '/makers/', '/publishers/'],\r\n              allowedDomainPatterns: [/^.*\\.javdb\\.com$/, /^javdb\\.com$/]\r\n            }\r\n          ]\r\n        },\r\n        detailPage: {\r\n          title: {\r\n            selector: 'h2.title, .video-title, title',\r\n            transform: [\r\n              { type: 'replace', pattern: '\\\\s+', replacement: ' ' },\r\n              { type: 'trim' }\r\n            ]\r\n          },\r\n          code: {\r\n            selector: '.first-block .value, .video-meta strong',\r\n            transform: [\r\n              { type: 'extract', pattern: '([A-Z]{2,6}-?\\\\d{3,6})', group: 1 },\r\n              { type: 'uppercase' }\r\n            ]\r\n          },\r\n          coverImage: {\r\n            selector: '.video-cover img, .cover img',\r\n            attribute: 'src',\r\n            fallback: 'data-src'\r\n          },\r\n          screenshots: {\r\n            selector: '.tile-images img, .preview-images img',\r\n            attribute: 'src',\r\n            fallback: 'data-src'\r\n          },\r\n          actresses: {\r\n            selector: '.panel-block:contains(\"\u6F14\u5458\") .value a, .actress-tag a',\r\n            extractProfile: true\r\n          },\r\n          director: {\r\n            selector: '.panel-block:contains(\"\u5C0E\u6F14\") .value, .director',\r\n            transform: [{ type: 'trim' }]\r\n          },\r\n          studio: {\r\n            selector: '.panel-block:contains(\"\u7247\u5546\") .value, .studio',\r\n            transform: [{ type: 'trim' }]\r\n          },\r\n          label: {\r\n            selector: '.panel-block:contains(\"\u5EE0\u724C\") .value, .label',\r\n            transform: [{ type: 'trim' }]\r\n          },\r\n          series: {\r\n            selector: '.panel-block:contains(\"\u7CFB\u5217\") .value, .series',\r\n            transform: [{ type: 'trim' }]\r\n          },\r\n          releaseDate: {\r\n            selector: '.panel-block:contains(\"\u6642\u9593\") .value, .release-date',\r\n            transform: [\r\n              { type: 'extract', pattern: '(\\\\d{4}-\\\\d{2}-\\\\d{2})', group: 1 }\r\n            ]\r\n          },\r\n          duration: {\r\n            selector: '.panel-block:contains(\"\u6642\u9577\") .value, .duration',\r\n            transform: [\r\n              { type: 'extract', pattern: '(\\\\d+)', group: 1 }\r\n            ]\r\n          },\r\n          description: {\r\n            selector: '.description, .content',\r\n            transform: [{ type: 'trim' }]\r\n          },\r\n          tags: {\r\n            selector: '.panel-block:contains(\"\u985E\u5225\") .tag a, .genre-tag a',\r\n            excludeTexts: ['\u6F14\u5458', '\u5C0E\u6F14', '\u7247\u5546', '\u5EE0\u724C', '\u7CFB\u5217', '\u6642\u9593', '\u6642\u9577']\r\n          },\r\n          magnetLinks: {\r\n            selector: 'a[href^=\"magnet:\"], .magnet-link',\r\n            extractSize: '.size',\r\n            extractSeeders: '.seeds'\r\n          },\r\n          rating: {\r\n            selector: '.score, .rating',\r\n            transform: [\r\n              { type: 'extract', pattern: '(\\\\d+(?:\\\\.\\\\d+)?)', group: 1 }\r\n            ]\r\n          }\r\n        }\r\n      },\r\n\r\n      // Jable \u89E3\u6790\u89C4\u5219 - \u5B9E\u9645\u9A8C\u8BC1\u7248\u672C\r\n      jable: {\r\n        searchPage: {\r\n          detailLinkSelectors: [\r\n            {\r\n              // Jable\u8BE6\u60C5\u9875\u683C\u5F0F: /videos/ipx-156/\r\n              selector: 'a[href*=\"/videos/\"]:not([href*=\"/search\"])',\r\n              titleSelector: '.title, .video-title',\r\n              mustContainCode: false,\r\n              strictDomainCheck: false,\r\n              excludeHrefs: ['/search/', '/categories/', '/models/'],\r\n              requirePattern: /\\/videos\\/[^\\/]+/,\r\n              allowedDomainPatterns: [/^.*\\.jable\\.tv$/, /^jable\\.tv$/]\r\n            },\r\n            {\r\n              // \u5907\u7528\uFF1Avideo-item\u4E2D\u7684\u94FE\u63A5\r\n              selector: '.video-item a, .list-videos a',\r\n              titleSelector: '.title, h4, .video-title',\r\n              mustContainCode: false,\r\n              strictDomainCheck: false,\r\n              allowedDomainPatterns: [/^.*\\.jable\\.tv$/, /^jable\\.tv$/],\r\n              excludeHrefs: ['/search/', '/categories/', '/models/']\r\n            }\r\n          ]\r\n        },\r\n        detailPage: {\r\n          title: {\r\n            selector: '.title-video, h1, .video-title',\r\n            transform: [\r\n              { type: 'replace', pattern: '\\\\s+', replacement: ' ' },\r\n              { type: 'trim' }\r\n            ]\r\n          },\r\n          code: {\r\n            selector: '.models a, .video-detail strong',\r\n            transform: [\r\n              { type: 'extract', pattern: '([A-Z]{2,6}-?\\\\d{3,6})', group: 1 },\r\n              { type: 'uppercase' }\r\n            ]\r\n          },\r\n          coverImage: {\r\n            selector: '.video-cover img, video[poster]',\r\n            attribute: 'src',\r\n            fallback: 'poster'\r\n          },\r\n          screenshots: {\r\n            selector: '.video-screenshots img, .preview img',\r\n            attribute: 'src',\r\n            fallback: 'data-src'\r\n          },\r\n          actresses: {\r\n            selector: '.models a, .actress a',\r\n            extractProfile: true\r\n          },\r\n          releaseDate: {\r\n            selector: '.video-detail .date, .publish-time',\r\n            transform: [\r\n              { type: 'extract', pattern: '(\\\\d{4}-\\\\d{2}-\\\\d{2})', group: 1 }\r\n            ]\r\n          },\r\n          duration: {\r\n            selector: '.video-detail .duration, .length',\r\n            transform: [\r\n              { type: 'extract', pattern: '(\\\\d+)', group: 1 }\r\n            ]\r\n          },\r\n          tags: {\r\n            selector: '.tag a, .category a',\r\n            excludeTexts: []\r\n          },\r\n          downloadLinks: {\r\n            selector: 'a[href*=\"download\"], .download-btn',\r\n            extractQuality: '.quality, .resolution',\r\n            strictValidation: true,\r\n            allowedDomainPatterns: [/^.*\\.jable\\.tv$/, /^jable\\.tv$/]\r\n          }\r\n        }\r\n      },\r\n\r\n      // JavGG \u89E3\u6790\u89C4\u5219 - \u5B9E\u9645\u9A8C\u8BC1\u7248\u672C\r\n      javgg: {\r\n        searchPage: {\r\n          detailLinkSelectors: [\r\n            {\r\n              // JavGG\u8BE6\u60C5\u9875\u683C\u5F0F: /jav/ipx-156-reduce-mosaic/\r\n              selector: 'a[href*=\"/jav/\"]:not([href*=\"/search\"])',\r\n              titleSelector: '.title, .video-title, h3',\r\n              mustContainCode: true,\r\n              strictDomainCheck: false,\r\n              excludeHrefs: ['/search/', '/category/', '/tag/', '/page/'],\r\n              requirePattern: /\\/jav\\/[a-z0-9\\-]+/i,\r\n              allowedDomainPatterns: [/^.*\\.javgg\\.net$/, /^javgg\\.net$/]\r\n            },\r\n            {\r\n              // \u5907\u7528\uFF1A\u901A\u7528\u5BB9\u5668\u4E2D\u7684\u94FE\u63A5\r\n              selector: '.video-item a, .movie-item a, .item a',\r\n              titleSelector: '.title, h3, .video-title',\r\n              mustContainCode: true,\r\n              strictDomainCheck: false,\r\n              allowedDomainPatterns: [/^.*\\.javgg\\.net$/, /^javgg\\.net$/],\r\n              excludeHrefs: ['/search/', '/category/', '/tag/']\r\n            }\r\n          ]\r\n        },\r\n        detailPage: {\r\n          title: {\r\n            selector: 'h1, .video-title, .title',\r\n            transform: [\r\n              { type: 'replace', pattern: '\\\\s+', replacement: ' ' },\r\n              { type: 'trim' }\r\n            ]\r\n          },\r\n          code: {\r\n            selector: 'h1, .video-title, .code, .video-meta',\r\n            transform: [\r\n              { type: 'extract', pattern: '([A-Z]{2,6}-?\\\\d{3,6})', group: 1 },\r\n              { type: 'uppercase' }\r\n            ]\r\n          },\r\n          coverImage: {\r\n            selector: '.video-cover img, .poster img, .cover img',\r\n            attribute: 'src',\r\n            fallback: 'data-src'\r\n          },\r\n          screenshots: {\r\n            selector: '.screenshots img, .preview img, .gallery img',\r\n            attribute: 'src',\r\n            fallback: 'data-src'\r\n          },\r\n          actresses: {\r\n            selector: '.actress a, .performer a, .stars a',\r\n            extractProfile: true\r\n          },\r\n          description: {\r\n            selector: '.description, .summary, .content',\r\n            transform: [{ type: 'trim' }]\r\n          },\r\n          tags: {\r\n            selector: '.tag a, .genre a, .category a',\r\n            excludeTexts: []\r\n          },\r\n          downloadLinks: {\r\n            selector: 'a[href*=\"download\"], .download-link',\r\n            strictValidation: true,\r\n            allowedDomainPatterns: [/^.*\\.javgg\\.net$/, /^javgg\\.net$/]\r\n          }\r\n        }\r\n      },\r\n\r\n      // Sukebei (\u78C1\u529B\u7AD9) \u89E3\u6790\u89C4\u5219 - \u5B9E\u9645\u9A8C\u8BC1\u7248\u672C\r\n      sukebei: {\r\n        searchPage: {\r\n          detailLinkSelectors: [\r\n            {\r\n              // Sukebei\u8BE6\u60C5\u9875\u683C\u5F0F: /view/3403743\r\n              selector: 'a[href*=\"/view/\"]:not([href*=\"/?\"])',\r\n              titleSelector: null,\r\n              mustContainCode: false,\r\n              strictDomainCheck: false,\r\n              excludeHrefs: ['/user/', '/?'],\r\n              requirePattern: /\\/view\\/\\d+/,\r\n              allowedDomainPatterns: [/^.*\\.sukebei\\.nyaa\\.si$/, /^sukebei\\.nyaa\\.si$/]\r\n            },\r\n            {\r\n              // \u5907\u7528\uFF1A\u8868\u683C\u4E2D\u7684torrent\u540D\u79F0\u94FE\u63A5\r\n              selector: 'tr td:first-child a, .torrent-name a',\r\n              titleSelector: null,\r\n              mustContainCode: true,\r\n              strictDomainCheck: false,\r\n              allowedDomainPatterns: [/^.*\\.sukebei\\.nyaa\\.si$/, /^sukebei\\.nyaa\\.si$/],\r\n              excludeHrefs: ['/user/', '/?']\r\n            }\r\n          ]\r\n        },\r\n        detailPage: {\r\n          title: {\r\n            selector: '.torrent-title, h3, .title',\r\n            transform: [\r\n              { type: 'replace', pattern: '\\\\s+', replacement: ' ' },\r\n              { type: 'trim' }\r\n            ]\r\n          },\r\n          code: {\r\n            selector: '.torrent-title, .title',\r\n            transform: [\r\n              { type: 'extract', pattern: '([A-Z]{2,6}-?\\\\d{3,6})', group: 1 },\r\n              { type: 'uppercase' }\r\n            ]\r\n          },\r\n          magnetLinks: {\r\n            selector: 'a[href^=\"magnet:\"], .magnet',\r\n            extractSize: '.size, .torrent-size',\r\n            extractSeeders: '.seeders, .seeds',\r\n            extractLeechers: '.leechers, .peers'\r\n          },\r\n          downloadLinks: {\r\n            selector: 'a[href$=\".torrent\"], .torrent-download',\r\n            extractSize: '.size'\r\n          },\r\n          releaseDate: {\r\n            selector: '.date, .upload-time',\r\n            transform: [\r\n              { type: 'extract', pattern: '(\\\\d{4}-\\\\d{2}-\\\\d{2})', group: 1 }\r\n            ]\r\n          },\r\n          fileSize: {\r\n            selector: '.size, .file-size',\r\n            transform: [{ type: 'trim' }]\r\n          }\r\n        }\r\n      },\r\n\r\n      // JavMost \u89E3\u6790\u89C4\u5219 - \u5B9E\u9645\u9A8C\u8BC1\u7248\u672C\uFF08\u652F\u6301\u5B50\u57DF\u540D\uFF09\r\n      javmost: {\r\n        searchPage: {\r\n          detailLinkSelectors: [\r\n            {\r\n              // JavMost\u8BE6\u60C5\u9875\u683C\u5F0F: /IPX-156/ \uFF08\u6CE8\u610F\u652F\u6301www5\u7B49\u5B50\u57DF\u540D\uFF09\r\n              selector: 'a[href*=\"/\"][href]:not([href*=\"/search\"]):not([href*=\"/tag\"])',\r\n              titleSelector: '.title, h3, .video-title',\r\n              mustContainCode: true,\r\n              strictDomainCheck: false,\r\n              excludeHrefs: ['/search/', '/tag/', '/category/', '/page/'],\r\n              requirePattern: /\\/[A-Z]{2,6}-?\\d{3,6}[^\\/]*(?:\\/|$)/i,\r\n              allowedDomainPatterns: [/^.*\\.javmost\\.com$/, /^javmost\\.com$/]\r\n            },\r\n            {\r\n              // \u5907\u7528\uFF1Avideo-item\u4E2D\u7684\u94FE\u63A5\r\n              selector: '.video-item a, .movie-item a',\r\n              titleSelector: '.title, h3',\r\n              mustContainCode: true,\r\n              strictDomainCheck: false,\r\n              allowedDomainPatterns: [/^.*\\.javmost\\.com$/, /^javmost\\.com$/],\r\n              excludeHrefs: ['/search/', '/tag/', '/category/']\r\n            }\r\n          ]\r\n        },\r\n        detailPage: {\r\n          title: {\r\n            selector: 'h1, .video-title, .title',\r\n            transform: [\r\n              { type: 'replace', pattern: '\\\\s+', replacement: ' ' },\r\n              { type: 'trim' }\r\n            ]\r\n          },\r\n          code: {\r\n            selector: 'h1, .video-code, .title',\r\n            transform: [\r\n              { type: 'extract', pattern: '([A-Z]{2,6}-?\\\\d{3,6})', group: 1 },\r\n              { type: 'uppercase' }\r\n            ]\r\n          },\r\n          coverImage: {\r\n            selector: '.video-cover img, .poster img',\r\n            attribute: 'src',\r\n            fallback: 'data-src'\r\n          },\r\n          actresses: {\r\n            selector: '.actress a, .performer a',\r\n            extractProfile: true\r\n          },\r\n          description: {\r\n            selector: '.description, .summary',\r\n            transform: [{ type: 'trim' }]\r\n          },\r\n          downloadLinks: {\r\n            selector: 'a[href*=\"/\"][title], .download-link',\r\n            strictValidation: true,\r\n            allowedDomainPatterns: [/^.*\\.javmost\\.com$/, /^javmost\\.com$/]\r\n          }\r\n        }\r\n      },\r\n\r\n      // JavGuru \u89E3\u6790\u89C4\u5219 - \u5B9E\u9645\u9A8C\u8BC1\u7248\u672C\r\n      javguru: {\r\n        searchPage: {\r\n          detailLinkSelectors: [\r\n            {\r\n              // JavGuru\u8BE6\u60C5\u9875\u683C\u5F0F: /268681/ipx-156-sana-matsunaga-has-been-celibate-for-30-days-she-is-given-a-large-dose-of-a-powerful-aphrodisiac/\r\n              selector: 'a[href]:not([href*=\"?s=\"]):not([href*=\"/search\"])',\r\n              titleSelector: '.title, h3',\r\n              mustContainCode: false,\r\n              strictDomainCheck: false,\r\n              excludeHrefs: ['?s=', '/search/', '/category/'],\r\n              requirePattern: /\\/\\d+\\/[a-z0-9\\-]+/i,\r\n              allowedDomainPatterns: [/^.*\\.jav\\.guru$/, /^jav\\.guru$/]\r\n            }\r\n          ]\r\n        },\r\n        detailPage: {\r\n          title: {\r\n            selector: 'h1, .video-title',\r\n            transform: [\r\n              { type: 'replace', pattern: '\\\\s+', replacement: ' ' },\r\n              { type: 'trim' }\r\n            ]\r\n          },\r\n          code: {\r\n            selector: 'h1, .video-title',\r\n            transform: [\r\n              { type: 'extract', pattern: '([A-Z]{2,6}-?\\\\d{3,6})', group: 1 },\r\n              { type: 'uppercase' }\r\n            ]\r\n          }\r\n        }\r\n      },\r\n\r\n      // \u901A\u7528\u89E3\u6790\u89C4\u5219\uFF08\u4F5C\u4E3A\u540E\u5907\uFF09- \u4E25\u683C\u4FEE\u590D\u7248\r\n      generic: {\r\n        searchPage: {\r\n          detailLinkSelectors: [\r\n            {\r\n              // \u6700\u4E25\u683C\uFF1A\u5FC5\u987B\u5305\u542B\u756A\u53F7\u7684\u94FE\u63A5\r\n              selector: 'a[href*=\"/\"][href]:not([href*=\"/search\"]):not([href*=\"/page\"]):not([href*=\"/category\"])',\r\n              titleSelector: '.title, h1, h2, h3, h4, img[alt]',\r\n              titleAttribute: 'title',\r\n              mustContainCode: true,\r\n              strictDomainCheck: false,\r\n              excludeHrefs: [\r\n                '/search/', '/category/', '/tag/', '/list/', '/page/', '/genre/',\r\n                '/actresses/', '/studio/', '/label/', '/forum/', '/doc/', '/terms',\r\n                '/privacy', '/#', '.css', '.js', 'javascript:', '/rss', '/sitemap'\r\n              ],\r\n              requirePattern: /[A-Z]{2,6}-?\\d{3,6}/i\r\n            },\r\n            {\r\n              // \u4E2D\u7B49\u4E25\u683C\uFF1A\u5BB9\u5668\u5185\u7684\u94FE\u63A5\r\n              selector: '.item a, .movie a, .video a, .result a',\r\n              titleSelector: '.title, h1, h2, h3, h4, img[alt]',\r\n              mustContainCode: true,\r\n              strictDomainCheck: false,\r\n              excludeHrefs: ['/search/', '/category/', '/tag/', '/list/', '/page/']\r\n            },\r\n            {\r\n              // \u6700\u5BBD\u677E\uFF1A\u6240\u6709\u94FE\u63A5\uFF08\u6700\u4E25\u683C\u8FC7\u6EE4\uFF09\r\n              selector: 'a[href]:not([href*=\"/search\"]):not([href*=\"/page\"])',\r\n              titleSelector: '.title, h1, h2, h3, h4, img[alt]',\r\n              mustContainCode: true,\r\n              strictDomainCheck: false,\r\n              excludeHrefs: [\r\n                '/search/', '/category/', '/tag/', '/list/', '/page/', '?page',\r\n                '/genre/', '/actresses/', '/studio/', '/label/', '/forum/', '/doc/',\r\n                '/terms', '/privacy', '/#', '.css', '.js', 'javascript:', '/en',\r\n                '/ja', '/ko', '/rss', '/sitemap', '/api/', '/ajax/'\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        detailPage: {\r\n          title: {\r\n            selector: 'h1, h2, h3, .title, title',\r\n            transform: [\r\n              { type: 'replace', pattern: '\\\\s+', replacement: ' ' },\r\n              { type: 'trim' }\r\n            ]\r\n          },\r\n          code: {\r\n            selector: 'h1, h2, h3, .title, .code',\r\n            transform: [\r\n              { type: 'extract', pattern: '([A-Z]{2,6}-?\\\\d{3,6})', group: 1 },\r\n              { type: 'uppercase' }\r\n            ]\r\n          },\r\n          coverImage: {\r\n            selector: 'img[class*=\"cover\"], img[class*=\"poster\"], img[class*=\"thumb\"]',\r\n            attribute: 'src',\r\n            fallback: 'data-src'\r\n          },\r\n          screenshots: {\r\n            selector: 'img[class*=\"screenshot\"], img[class*=\"preview\"], img[class*=\"sample\"]',\r\n            attribute: 'src',\r\n            fallback: 'data-src'\r\n          },\r\n          actresses: {\r\n            selector: 'a[class*=\"actress\"], a[class*=\"performer\"], a[class*=\"star\"]',\r\n            extractProfile: true\r\n          },\r\n          description: {\r\n            selector: '.description, .summary, .content, .intro',\r\n            transform: [{ type: 'trim' }]\r\n          },\r\n          tags: {\r\n            selector: '.tag a, .genre a, .category a',\r\n            excludeTexts: []\r\n          },\r\n          magnetLinks: {\r\n            selector: 'a[href^=\"magnet:\"]',\r\n            extractSize: '.size',\r\n            extractSeeders: '.seeds, .seeders'\r\n          },\r\n          downloadLinks: {\r\n            selector: 'a[href*=\"download\"], .download',\r\n            extractSize: '.size',\r\n            strictValidation: true\r\n          },\r\n          rating: {\r\n            selector: '.rating, .score, .rate',\r\n            transform: [\r\n              { type: 'extract', pattern: '(\\\\d+(?:\\\\.\\\\d+)?)', group: 1 }\r\n            ]\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * \u6839\u636E\u6E90\u7C7B\u578B\u83B7\u53D6\u641C\u7D22\u9875\u9762\u89C4\u5219\r\n   * @param {string} sourceType - \u6E90\u7C7B\u578B\r\n   * @returns {Object|null} \u641C\u7D22\u9875\u9762\u89C4\u5219\u5BF9\u8C61\r\n   */\r\n  getSearchPageRules(sourceType) {\r\n    if (!sourceType || typeof sourceType !== 'string') {\r\n      return this.rules.generic.searchPage;\r\n    }\r\n\r\n    const normalizedType = sourceType.toLowerCase();\r\n    const rules = this.rules[normalizedType];\r\n    return rules ? rules.searchPage : this.rules.generic.searchPage;\r\n  }\r\n\r\n  /**\r\n   * \u6839\u636E\u6E90\u7C7B\u578B\u83B7\u53D6\u8BE6\u60C5\u9875\u9762\u89C4\u5219\r\n   * @param {string} sourceType - \u6E90\u7C7B\u578B\r\n   * @returns {Object|null} \u8BE6\u60C5\u9875\u9762\u89C4\u5219\u5BF9\u8C61\r\n   */\r\n  getDetailPageRules(sourceType) {\r\n    if (!sourceType || typeof sourceType !== 'string') {\r\n      return this.rules.generic.detailPage;\r\n    }\r\n\r\n    const normalizedType = sourceType.toLowerCase();\r\n    const rules = this.rules[normalizedType];\r\n    return rules ? rules.detailPage : this.rules.generic.detailPage;\r\n  }\r\n\r\n  /**\r\n   * \u6839\u636E\u6E90\u7C7B\u578B\u83B7\u53D6\u89E3\u6790\u89C4\u5219\uFF08\u517C\u5BB9\u65E7\u63A5\u53E3\uFF09\r\n   * @param {string} sourceType - \u6E90\u7C7B\u578B\r\n   * @returns {Object|null} \u89E3\u6790\u89C4\u5219\u5BF9\u8C61\r\n   */\r\n  getParserRules(sourceType) {\r\n    return this.getDetailPageRules(sourceType);\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u8BE6\u60C5\u94FE\u63A5\u9009\u62E9\u5668\u914D\u7F6E\r\n   * @param {string} sourceType - \u6E90\u7C7B\u578B\r\n   * @returns {Array} \u9009\u62E9\u5668\u914D\u7F6E\u6570\u7EC4\r\n   */\r\n  getDetailLinkSelectors(sourceType) {\r\n    const searchPageRules = this.getSearchPageRules(sourceType);\r\n    return searchPageRules ? searchPageRules.detailLinkSelectors : [];\r\n  }\r\n\r\n  /**\r\n   * \u9A8C\u8BC1\u94FE\u63A5\u662F\u5426\u4E3A\u6709\u6548\u7684\u8BE6\u60C5\u94FE\u63A5 - \u589E\u5F3A\u7248\uFF0C\u5305\u542B\u4E25\u683C\u57DF\u540D\u68C0\u67E5\r\n   * @param {string} href - \u94FE\u63A5\u5730\u5740\r\n   * @param {string} content - \u94FE\u63A5\u5185\u5BB9\r\n   * @param {string} sourceType - \u6E90\u7C7B\u578B\r\n   * @param {string} expectedDomain - \u671F\u671B\u7684\u57DF\u540D\r\n   * @returns {boolean} \u662F\u5426\u4E3A\u6709\u6548\u8BE6\u60C5\u94FE\u63A5\r\n   */\r\n  isValidDetailLink(href, content, sourceType, expectedDomain) {\r\n    if (!href || typeof href !== 'string') return false;\r\n\r\n    const searchPageRules = this.getSearchPageRules(sourceType);\r\n    if (!searchPageRules || !searchPageRules.detailLinkSelectors) return true;\r\n\r\n    const hrefLower = href.toLowerCase();\r\n    const contentLower = (content || '').toLowerCase();\r\n\r\n    // \u68C0\u67E5\u6240\u6709\u9009\u62E9\u5668\u914D\u7F6E\u7684\u6392\u9664\u89C4\u5219\r\n    for (const selectorConfig of searchPageRules.detailLinkSelectors) {\r\n      \r\n      // 1. \u589E\u5F3A\u7684\u57DF\u540D\u68C0\u67E5 - \u652F\u6301\u5B50\u57DF\u540D\u6A21\u5F0F\r\n      if (selectorConfig.strictDomainCheck !== false && expectedDomain) {\r\n        const linkDomain = this.extractDomainFromUrl(href);\r\n        \r\n        // \u68C0\u67E5\u57DF\u540D\u6A21\u5F0F\u5339\u914D\uFF08\u65B0\u589E\u529F\u80FD\uFF09\r\n        if (selectorConfig.allowedDomainPatterns && selectorConfig.allowedDomainPatterns.length > 0) {\r\n          const domainMatches = selectorConfig.allowedDomainPatterns.some(pattern => \r\n            pattern.test && pattern.test(linkDomain)\r\n          );\r\n          if (!domainMatches) {\r\n            console.log(`\u2310 \u57DF\u540D\u4E0D\u5339\u914D\u6A21\u5F0F: ${linkDomain} (\u6A21\u5F0F: ${selectorConfig.allowedDomainPatterns.map(p => p.source).join(', ')})`);\r\n            return false;\r\n          }\r\n        } else {\r\n          // \u6807\u51C6\u57DF\u540D\u4E00\u81F4\u6027\u68C0\u67E5 - \u652F\u6301\u5B50\u57DF\u540D\r\n          if (!this.isDomainOrSubdomain(linkDomain, expectedDomain)) {\r\n            console.log(`\u2310 \u57DF\u540D\u4E0D\u5339\u914D: ${linkDomain} != ${expectedDomain}`);\r\n            return false;\r\n          }\r\n        }\r\n\r\n        // \u68C0\u67E5\u57DF\u540D\u9ED1\u540D\u5355\r\n        if (selectorConfig.excludeDomains && selectorConfig.excludeDomains.length > 0) {\r\n          if (selectorConfig.excludeDomains.some(domain => linkDomain.includes(domain))) {\r\n            console.log(`\u2310 \u57DF\u540D\u5728\u9ED1\u540D\u5355: ${linkDomain}`);\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n\r\n      // 2. \u6392\u9664\u8DEF\u5F84\u68C0\u67E5\r\n      if (selectorConfig.excludeHrefs) {\r\n        const isExcluded = selectorConfig.excludeHrefs.some(excludePattern => \r\n          hrefLower.includes(excludePattern.toLowerCase())\r\n        );\r\n        if (isExcluded) {\r\n          console.log(`\u2310 URL\u5305\u542B\u6392\u9664\u6A21\u5F0F: ${href}`);\r\n          return false;\r\n        }\r\n      }\r\n\r\n      // 3. \u5FC5\u9700\u6A21\u5F0F\u68C0\u67E5\r\n      if (selectorConfig.requirePattern) {\r\n        if (!selectorConfig.requirePattern.test(href)) {\r\n          console.log(`\u2310 URL\u4E0D\u5339\u914D\u5FC5\u9700\u6A21\u5F0F: ${href}`);\r\n          return false;\r\n        }\r\n      }\r\n\r\n      // 4. \u5FC5\u987B\u5305\u542B\u756A\u53F7\u68C0\u67E5\r\n      if (selectorConfig.mustContainCode) {\r\n        if (!this.containsCode(href) && !this.containsCode(content)) {\r\n          console.log(`\u2310 \u94FE\u63A5\u548C\u5185\u5BB9\u90FD\u4E0D\u5305\u542B\u756A\u53F7: ${href}`);\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * \u68C0\u67E5\u662F\u5426\u4E3A\u57DF\u540D\u6216\u5B50\u57DF\u540D - \u65B0\u589E\u65B9\u6CD5\r\n   * @param {string} linkDomain - \u94FE\u63A5\u57DF\u540D\r\n   * @param {string} expectedDomain - \u671F\u671B\u57DF\u540D\r\n   * @returns {boolean} \u662F\u5426\u5339\u914D\r\n   */\r\n  isDomainOrSubdomain(linkDomain, expectedDomain) {\r\n    if (!linkDomain || !expectedDomain) return false;\r\n    \r\n    const linkDomainLower = linkDomain.toLowerCase();\r\n    const expectedDomainLower = expectedDomain.toLowerCase();\r\n    \r\n    // \u5B8C\u5168\u5339\u914D\r\n    if (linkDomainLower === expectedDomainLower) return true;\r\n    \r\n    // \u5B50\u57DF\u540D\u5339\u914D\r\n    if (linkDomainLower.endsWith('.' + expectedDomainLower)) return true;\r\n    \r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * \u68C0\u67E5\u94FE\u63A5\u662F\u5426\u5305\u542B\u756A\u53F7\r\n   * @param {string} text - \u6587\u672C\u5185\u5BB9\r\n   * @returns {boolean} \u662F\u5426\u5305\u542B\u756A\u53F7\r\n   */\r\n  containsCode(text) {\r\n    if (!text) return false;\r\n    return /[A-Z]{2,6}-?\\d{3,6}/i.test(text);\r\n  }\r\n\r\n  /**\r\n   * \u4ECEURL\u63D0\u53D6\u57DF\u540D\r\n   * @param {string} url - URL\r\n   * @returns {string} \u57DF\u540D\r\n   */\r\n  extractDomainFromUrl(url) {\r\n    try {\r\n      const urlObj = new URL(url);\r\n      return urlObj.hostname.toLowerCase();\r\n    } catch {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u4ECEURL\u63A8\u65AD\u53EF\u80FD\u7684\u6E90\u7C7B\u578B\r\n   * @param {string} url - URL\r\n   * @returns {string} \u63A8\u65AD\u7684\u6E90\u7C7B\u578B\r\n   */\r\n  inferSourceTypeFromUrl(url) {\r\n    if (!url || typeof url !== 'string') {\r\n      return 'generic';\r\n    }\r\n\r\n    const urlLower = url.toLowerCase();\r\n    \r\n    // URL\u6A21\u5F0F\u5339\u914D - \u6839\u636E\u5B9E\u9645\u6570\u636E\u4F18\u5316\r\n    const patterns = {\r\n      'javbus': /javbus\\.com/,\r\n      'javdb': /javdb\\.com/,\r\n      'jable': /jable\\.tv/,\r\n      'javgg': /javgg\\.net/,\r\n      'javmost': /javmost\\.com/,\r\n      'sukebei': /sukebei\\.nyaa\\.si/,\r\n      'javguru': /jav\\.guru/\r\n    };\r\n\r\n    for (const [type, pattern] of Object.entries(patterns)) {\r\n      if (pattern.test(urlLower)) {\r\n        return type;\r\n      }\r\n    }\r\n\r\n    return 'generic';\r\n  }\r\n\r\n  /**\r\n   * \u5BFC\u51FA\u89E3\u6790\u89C4\u5219\u914D\u7F6E\r\n   * @returns {Object} \u914D\u7F6E\u6570\u636E\r\n   */\r\n  exportRules() {\r\n    return {\r\n      version: '3.0',\r\n      exportTime: Date.now(),\r\n      rules: { ...this.rules }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * \u5BFC\u5165\u89E3\u6790\u89C4\u5219\u914D\u7F6E\r\n   * @param {Object} configData - \u914D\u7F6E\u6570\u636E\r\n   * @returns {boolean} \u662F\u5426\u5BFC\u5165\u6210\u529F\r\n   */\r\n  importRules(configData) {\r\n    if (!configData || !configData.rules) {\r\n      console.error('\u65E0\u6548\u7684\u914D\u7F6E\u6570\u636E');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      // \u5907\u4EFD\u5F53\u524D\u89C4\u5219\r\n      const backup = { ...this.rules };\r\n      \r\n      // \u5408\u5E76\u5BFC\u5165\u7684\u89C4\u5219\r\n      this.rules = {\r\n        ...this.rules,\r\n        ...configData.rules\r\n      };\r\n\r\n      console.log('\u89E3\u6790\u89C4\u5219\u5BFC\u5165\u6210\u529F');\r\n      return true;\r\n\r\n    } catch (error) {\r\n      console.error('\u5BFC\u5165\u89E3\u6790\u89C4\u5219\u5931\u8D25:', error);\r\n      // \u6062\u590D\u5907\u4EFD\r\n      if (backup) {\r\n        this.rules = backup;\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u6240\u6709\u652F\u6301\u7684\u6E90\u7C7B\u578B\r\n   * @returns {Array} \u6E90\u7C7B\u578B\u6570\u7EC4\r\n   */\r\n  getSupportedSourceTypes() {\r\n    return Object.keys(this.rules).filter(type => type !== 'generic');\r\n  }\r\n}\r\n\r\n// \u521B\u5EFA\u5355\u4F8B\u5B9E\u4F8B\r\nexport const parserRules = new ParserRulesConfig();\r\nexport default parserRules;", "// src/utils/html-parser.js - \u6839\u636E\u5B9E\u9645\u641C\u7D22\u6570\u636E\u4F18\u5316\u7684HTML\u89E3\u6790\u5668\r\nimport { CONFIG } from '../constants.js';\r\n\r\nexport class CloudflareHTMLParser {\r\n  constructor() {\r\n    this.elementCache = new Map();\r\n    this.maxCacheSize = CONFIG.DETAIL_EXTRACTION.HTML_PARSER_CACHE_SIZE;\r\n    this.debugMode = false;\r\n  }\r\n\r\n  parseFromString(htmlContent) {\r\n    return new CloudflareDocument(htmlContent);\r\n  }\r\n\r\n  setDebugMode(enabled) {\r\n    this.debugMode = enabled;\r\n  }\r\n\r\n  log(message) {\r\n    if (this.debugMode) {\r\n      console.log(message);\r\n    }\r\n  }\r\n}\r\n\r\nclass CloudflareDocument {\r\n  constructor(html) {\r\n    this.html = html || '';\r\n    this.elementCache = new Map();\r\n    this.maxCacheSize = CONFIG.DETAIL_EXTRACTION.HTML_PARSER_CACHE_SIZE;\r\n  }\r\n\r\n  querySelector(selector) {\r\n    const elements = this.querySelectorAll(selector);\r\n    return elements.length > 0 ? elements[0] : null;\r\n  }\r\n\r\n  querySelectorAll(selector) {\r\n    // \u68C0\u67E5\u7F13\u5B58\r\n    const cacheKey = `all:${selector}`;\r\n    if (this.elementCache.has(cacheKey)) {\r\n      return this.elementCache.get(cacheKey);\r\n    }\r\n\r\n    const elements = this._parseSelector(selector);\r\n    \r\n    // \u7F13\u5B58\u7BA1\u7406\r\n    if (this.elementCache.size >= this.maxCacheSize) {\r\n      this.elementCache.clear();\r\n    }\r\n    this.elementCache.set(cacheKey, elements);\r\n    return elements;\r\n  }\r\n\r\n  _parseSelector(selector) {\r\n    const elements = [];\r\n    \r\n    console.log(`=== \u5F00\u59CB\u89E3\u6790\u9009\u62E9\u5668: ${selector} ===`);\r\n    \r\n    // \u6839\u636E\u9009\u62E9\u5668\u7C7B\u578B\u9009\u62E9\u89E3\u6790\u7B56\u7565\r\n    if (selector.includes('.movie-box')) {\r\n      this._parseJavBusMovieBox(elements);\r\n    }\r\n    else if (selector.includes('.movie-list') || selector.includes('.grid-item') || selector.includes('.video-node')) {\r\n      this._parseJavDBContainers(elements);\r\n    }\r\n    else if (selector.includes('.video-item') || selector.includes('.list-videos')) {\r\n      this._parseJableContainers(elements);\r\n    }\r\n    else if (selector.includes('tr td:first-child') || selector.includes('.torrent-name')) {\r\n      this._parseSukebeiTorrents(elements);\r\n    }\r\n    else if (selector.startsWith('a[href') || (selector.includes('a') && selector.includes('[href'))) {\r\n      this._parseGenericLinks(elements, selector);\r\n    }\r\n    else if (selector === 'title') {\r\n      this._parseTitleTag(elements);\r\n    }\r\n    else {\r\n      this._parseGenericSelector(elements, selector);\r\n    }\r\n\r\n    console.log(`=== \u9009\u62E9\u5668\u89E3\u6790\u5B8C\u6210: ${selector}\uFF0C\u627E\u5230 ${elements.length} \u4E2A\u5143\u7D20 ===`);\r\n    return elements;\r\n  }\r\n\r\n  /**\r\n   * JavBus movie-box \u89E3\u6790 - \u6839\u636E\u5B9E\u9645\u6570\u636E\u4F18\u5316\r\n   */\r\n  _parseJavBusMovieBox(elements) {\r\n    console.log('\u5F00\u59CB\u89E3\u6790JavBus movie-box\u94FE\u63A5...');\r\n    \r\n    // JavBus\u7684movie-box\u7ED3\u6784\u6A21\u5F0F\r\n    const movieBoxPatterns = [\r\n      // \u4E3B\u8981\u6A21\u5F0F\uFF1A<a class=\"movie-box\" href=\"/IPX-156\">\r\n      /<a[^>]*class=\"[^\"]*movie-box[^\"]*\"[^>]*href=\"([^\"]+)\"[^>]*>([\\s\\S]*?)<\\/a>/gi,\r\n      // \u5907\u7528\u6A21\u5F0F\uFF1Ahref\u5728class\u4E4B\u524D\r\n      /<a[^>]*href=\"([^\"]+)\"[^>]*class=\"[^\"]*movie-box[^\"]*\"[^>]*>([\\s\\S]*?)<\\/a>/gi\r\n    ];\r\n\r\n    let foundAny = false;\r\n    \r\n    for (const pattern of movieBoxPatterns) {\r\n      let match;\r\n      while ((match = pattern.exec(this.html)) !== null) {\r\n        foundAny = true;\r\n        const href = match[1];\r\n        const content = match[2];\r\n        \r\n        console.log(`\u68C0\u67E5movie-box\u94FE\u63A5: ${href}`);\r\n        \r\n        // JavBus\u8BE6\u60C5\u9875\u9A8C\u8BC1\uFF1A\u5FC5\u987B\u662F /\u756A\u53F7 \u683C\u5F0F\r\n        if (this._isValidJavBusLink(href, content)) {\r\n          const element = this._createMovieElement(href, content, match[0]);\r\n          elements.push(element);\r\n          console.log(`\u2713 \u6DFB\u52A0JavBus movie-box\u94FE\u63A5: ${href}`);\r\n        } else {\r\n          console.log(`\u2717 \u8DF3\u8FC7JavBus\u94FE\u63A5: ${href}`);\r\n        }\r\n      }\r\n      \r\n      if (foundAny) break;\r\n    }\r\n\r\n    // \u5982\u679C\u6CA1\u627E\u5230\uFF0C\u5C1D\u8BD5\u66F4\u5BBD\u677E\u7684\u5339\u914D\r\n    if (!foundAny) {\r\n      console.log('\u5C1D\u8BD5\u5BBD\u677E\u5339\u914D...');\r\n      this._parseJavBusLinksLoose(elements);\r\n    }\r\n\r\n    console.log(`JavBus\u89E3\u6790\u627E\u5230 ${elements.length} \u4E2A\u6709\u6548\u94FE\u63A5`);\r\n  }\r\n\r\n  /**\r\n   * JavBus \u5BBD\u677E\u5339\u914D\uFF08\u540E\u5907\u65B9\u6848\uFF09\r\n   */\r\n  _parseJavBusLinksLoose(elements) {\r\n    // \u67E5\u627E\u4EFB\u4F55\u5305\u542B\u756A\u53F7\u7684javbus\u94FE\u63A5\r\n    const loosePattern = /<a[^>]*href=\"([^\"]*\\/[A-Z]{2,6}-?\\d{3,6}[^\"]*)\"[^>]*>([\\s\\S]*?)<\\/a>/gi;\r\n    let match;\r\n    \r\n    while ((match = loosePattern.exec(this.html)) !== null) {\r\n      const href = match[1];\r\n      const content = match[2];\r\n      \r\n      if (!href.includes('/search') && !href.includes('/page')) {\r\n        const element = this._createMovieElement(href, content, match[0]);\r\n        elements.push(element);\r\n        console.log(`\u2713 \u5BBD\u677E\u5339\u914D\u6DFB\u52A0: ${href}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * JavDB \u5BB9\u5668\u89E3\u6790 - \u6839\u636E\u5B9E\u9645\u6570\u636E\u4F18\u5316\r\n   */\r\n  _parseJavDBContainers(elements) {\r\n    console.log('\u5F00\u59CB\u89E3\u6790JavDB\u5BB9\u5668\u94FE\u63A5...');\r\n    \r\n    const containerPatterns = [\r\n      // movie-list\u5BB9\u5668\r\n      /<div[^>]*class=\"[^\"]*movie-list[^\"]*\"[^>]*>([\\s\\S]*?)<\\/div>/gi,\r\n      // grid-item\u5BB9\u5668\r\n      /<div[^>]*class=\"[^\"]*grid-item[^\"]*\"[^>]*>([\\s\\S]*?)<\\/div>/gi,\r\n      // video-node\u5BB9\u5668\r\n      /<div[^>]*class=\"[^\"]*video-node[^\"]*\"[^>]*>([\\s\\S]*?)<\\/div>/gi\r\n    ];\r\n\r\n    for (const pattern of containerPatterns) {\r\n      let match;\r\n      while ((match = pattern.exec(this.html)) !== null) {\r\n        const containerContent = match[1];\r\n        this._extractLinksFromContainer(containerContent, elements, 'javdb');\r\n      }\r\n    }\r\n\r\n    // \u5982\u679C\u5BB9\u5668\u5339\u914D\u5931\u8D25\uFF0C\u5C1D\u8BD5\u76F4\u63A5\u5339\u914DJavDB\u7279\u5F81\u94FE\u63A5\r\n    if (elements.length === 0) {\r\n      this._parseJavDBDirectLinks(elements);\r\n    }\r\n\r\n    console.log(`JavDB\u89E3\u6790\u627E\u5230 ${elements.length} \u4E2A\u6709\u6548\u94FE\u63A5`);\r\n  }\r\n\r\n  /**\r\n   * JavDB \u76F4\u63A5\u94FE\u63A5\u5339\u914D\r\n   */\r\n  _parseJavDBDirectLinks(elements) {\r\n    const directPatterns = [\r\n      // /v/ \u683C\u5F0F\u7684\u94FE\u63A5 - JavDB\u7684\u5B9E\u9645\u683C\u5F0F\r\n      /<a[^>]*href=\"([^\"]*\\/v\\/[a-zA-Z0-9]+[^\"]*)\"[^>]*>([\\s\\S]*?)<\\/a>/gi\r\n    ];\r\n\r\n    for (const pattern of directPatterns) {\r\n      let match;\r\n      while ((match = pattern.exec(this.html)) !== null) {\r\n        const href = match[1];\r\n        const content = match[2];\r\n        \r\n        if (this._isValidJavDBLink(href, content)) {\r\n          const element = this._createMovieElement(href, content, match[0]);\r\n          elements.push(element);\r\n          console.log(`\u2713 JavDB\u76F4\u63A5\u5339\u914D: ${href}`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Jable \u5BB9\u5668\u89E3\u6790 - \u6839\u636E\u5B9E\u9645\u6570\u636E\u4F18\u5316\r\n   */\r\n  _parseJableContainers(elements) {\r\n    console.log('\u5F00\u59CB\u89E3\u6790Jable\u5BB9\u5668\u94FE\u63A5...');\r\n    \r\n    const containerPatterns = [\r\n      /<div[^>]*class=\"[^\"]*video-item[^\"]*\"[^>]*>([\\s\\S]*?)<\\/div>/gi,\r\n      /<div[^>]*class=\"[^\"]*list-videos[^\"]*\"[^>]*>([\\s\\S]*?)<\\/div>/gi\r\n    ];\r\n\r\n    for (const pattern of containerPatterns) {\r\n      let match;\r\n      while ((match = pattern.exec(this.html)) !== null) {\r\n        const containerContent = match[1];\r\n        this._extractLinksFromContainer(containerContent, elements, 'jable');\r\n      }\r\n    }\r\n\r\n    // \u76F4\u63A5\u5339\u914D /videos/ \u94FE\u63A5 - Jable\u7684\u5B9E\u9645\u683C\u5F0F\r\n    if (elements.length === 0) {\r\n      const directPattern = /<a[^>]*href=\"([^\"]*\\/videos\\/[^\\/\\?\"]+[^\"]*)\"[^>]*>([\\s\\S]*?)<\\/a>/gi;\r\n      let match;\r\n      \r\n      while ((match = directPattern.exec(this.html)) !== null) {\r\n        const href = match[1];\r\n        const content = match[2];\r\n        \r\n        if (this._isValidJableLink(href, content)) {\r\n          const element = this._createMovieElement(href, content, match[0]);\r\n          elements.push(element);\r\n          console.log(`\u2713 Jable\u76F4\u63A5\u5339\u914D: ${href}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(`Jable\u89E3\u6790\u627E\u5230 ${elements.length} \u4E2A\u6709\u6548\u94FE\u63A5`);\r\n  }\r\n\r\n  /**\r\n   * Sukebei \u79CD\u5B50\u89E3\u6790 - \u6839\u636E\u5B9E\u9645\u6570\u636E\u4F18\u5316\r\n   */\r\n  _parseSukebeiTorrents(elements) {\r\n    console.log('\u5F00\u59CB\u89E3\u6790Sukebei\u79CD\u5B50\u94FE\u63A5...');\r\n    \r\n    // \u65B9\u6CD51: \u8868\u683C\u884C\u5339\u914D\r\n    const rowPattern = /<tr[^>]*>([\\s\\S]*?)<\\/tr>/gi;\r\n    let match;\r\n    \r\n    while ((match = rowPattern.exec(this.html)) !== null) {\r\n      const rowContent = match[1];\r\n      \r\n      // \u67E5\u627E\u7B2C\u4E00\u4E2Atd\u4E2D\u7684\u94FE\u63A5\r\n      const tdPattern = /<td[^>]*>([\\s\\S]*?)<\\/td>/i;\r\n      const tdMatch = tdPattern.exec(rowContent);\r\n      \r\n      if (tdMatch) {\r\n        this._extractLinksFromContainer(tdMatch[1], elements, 'sukebei');\r\n      }\r\n    }\r\n\r\n    // \u65B9\u6CD52: \u76F4\u63A5\u5339\u914D /view/ \u94FE\u63A5 - Sukebei\u7684\u5B9E\u9645\u683C\u5F0F\r\n    if (elements.length === 0) {\r\n      const directPattern = /<a[^>]*href=\"([^\"]*\\/view\\/\\d+[^\"]*)\"[^>]*>([\\s\\S]*?)<\\/a>/gi;\r\n      let directMatch;\r\n      \r\n      while ((directMatch = directPattern.exec(this.html)) !== null) {\r\n        const href = directMatch[1];\r\n        const content = directMatch[2];\r\n        \r\n        if (this._isValidSukebeiLink(href, content)) {\r\n          const element = this._createMovieElement(href, content, directMatch[0]);\r\n          elements.push(element);\r\n          console.log(`\u2713 Sukebei\u76F4\u63A5\u5339\u914D: ${href}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(`Sukebei\u89E3\u6790\u627E\u5230 ${elements.length} \u4E2A\u6709\u6548\u94FE\u63A5`);\r\n  }\r\n\r\n  /**\r\n   * \u901A\u7528\u94FE\u63A5\u89E3\u6790 - \u6839\u636E\u5B9E\u9645\u6570\u636E\u5E73\u8861\u7248\u672C\r\n   */\r\n  _parseGenericLinks(elements, selector) {\r\n    console.log(`\u5F00\u59CB\u89E3\u6790\u901A\u7528\u94FE\u63A5\uFF0C\u9009\u62E9\u5668: ${selector}`);\r\n    \r\n    const patterns = [];\r\n    \r\n    // \u6839\u636E\u9009\u62E9\u5668\u6784\u5EFA\u5339\u914D\u6A21\u5F0F\r\n    if (selector.includes('[href*=\"/\"]')) {\r\n      patterns.push(/<a[^>]*href=\"([^\"]*\\/[^\"]*)\"[^>]*>([\\s\\S]*?)<\\/a>/gi);\r\n    }\r\n    if (selector.includes('[title]')) {\r\n      patterns.push(/<a[^>]*href=\"([^\"]+)\"[^>]*title=\"([^\"]+)\"[^>]*>([\\s\\S]*?)<\\/a>/gi);\r\n    }\r\n    if (patterns.length === 0) {\r\n      patterns.push(/<a[^>]*href=\"([^\"]+)\"[^>]*>([\\s\\S]*?)<\\/a>/gi);\r\n    }\r\n\r\n    for (const pattern of patterns) {\r\n      let match;\r\n      let count = 0;\r\n      const maxLinks = CONFIG.DETAIL_EXTRACTION.MAX_GENERIC_LINKS_PER_PAGE;\r\n      \r\n      while ((match = pattern.exec(this.html)) !== null && count < maxLinks) {\r\n        count++;\r\n        const href = match[1];\r\n        const content = match[3] || match[2];\r\n        const titleAttr = pattern.source.includes('title') ? match[2] : null;\r\n        \r\n        // \u5BBD\u677E\u4F46\u5408\u7406\u7684\u9A8C\u8BC1\r\n        if (this._isValidGenericLink(href, content)) {\r\n          const element = this._createMovieElement(href, content, match[0]);\r\n          if (titleAttr) {\r\n            element.titleAttribute = titleAttr;\r\n          }\r\n          elements.push(element);\r\n          console.log(`\u2713 \u901A\u7528\u94FE\u63A5\u5339\u914D: ${href}`);\r\n        }\r\n      }\r\n      \r\n      if (count >= maxLinks) {\r\n        console.log(`\u5DF2\u8FBE\u5230\u901A\u7528\u94FE\u63A5\u5904\u7406\u9650\u5236 (${maxLinks})\uFF0C\u505C\u6B62\u5904\u7406`);\r\n      }\r\n    }\r\n\r\n    console.log(`\u901A\u7528\u94FE\u63A5\u89E3\u6790\u627E\u5230 ${elements.length} \u4E2A\u6709\u6548\u94FE\u63A5 (\u9650\u5236: ${CONFIG.DETAIL_EXTRACTION.MAX_GENERIC_LINKS_PER_PAGE})`);\r\n  }\r\n\r\n  /**\r\n   * \u4ECE\u5BB9\u5668\u4E2D\u63D0\u53D6\u94FE\u63A5\r\n   */\r\n  _extractLinksFromContainer(containerContent, elements, sourceType) {\r\n    const linkPattern = /<a[^>]*href=\"([^\"]+)\"[^>]*>([\\s\\S]*?)<\\/a>/gi;\r\n    let linkMatch;\r\n    \r\n    while ((linkMatch = linkPattern.exec(containerContent)) !== null) {\r\n      const href = linkMatch[1];\r\n      const content = linkMatch[2];\r\n      \r\n      if (this._isValidMovieLink(href, content, sourceType)) {\r\n        const element = this._createMovieElement(href, content, linkMatch[0]);\r\n        elements.push(element);\r\n        console.log(`\u2713 ${sourceType}\u5BB9\u5668\u94FE\u63A5: ${href}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u521B\u5EFA\u7535\u5F71\u5143\u7D20\u5BF9\u8C61\r\n   */\r\n  _createMovieElement(href, content, elementHtml) {\r\n    const element = new CloudflareElement(href, content, this.html, elementHtml);\r\n    \r\n    // \u9884\u63D0\u53D6\u5E38\u7528\u4FE1\u606F\r\n    element.extractedTitle = this._extractTitleFromContent(content);\r\n    element.extractedCode = this._extractCodeFromContent(content, href);\r\n    element.extractedDate = this._extractDateFromContent(content);\r\n    \r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * \u4ECE\u5185\u5BB9\u4E2D\u63D0\u53D6\u6807\u9898\r\n   */\r\n  _extractTitleFromContent(content) {\r\n    const titlePatterns = [\r\n      /title=\"([^\"]+)\"/i,\r\n      /alt=\"([^\"]+)\"/i,\r\n      /<span[^>]*>(.*?)<\\/span>/i,\r\n      /<h[1-6][^>]*>(.*?)<\\/h[1-6]>/i,\r\n      /<div[^>]*class=\"[^\"]*title[^\"]*\"[^>]*>(.*?)<\\/div>/i\r\n    ];\r\n    \r\n    for (const pattern of titlePatterns) {\r\n      const match = content.match(pattern);\r\n      if (match && match[1]) {\r\n        let title = match[1].replace(/<[^>]*>/g, '').trim();\r\n        // \u8FC7\u6EE4\u6389\u660E\u663E\u7684\u975E\u6807\u9898\u5185\u5BB9\r\n        if (title.length > 5 && title.length < 500 && !this._isNavigationText(title)) {\r\n          return title;\r\n        }\r\n      }\r\n    }\r\n    \r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * \u4ECE\u5185\u5BB9\u4E2D\u63D0\u53D6\u756A\u53F7\r\n   */\r\n  _extractCodeFromContent(content, href) {\r\n    const sources = [content, href];\r\n    const codePattern = /([A-Z]{2,6}-?\\d{3,6})/i;\r\n    \r\n    for (const source of sources) {\r\n      if (source) {\r\n        const match = source.match(codePattern);\r\n        if (match) {\r\n          return match[1].toUpperCase();\r\n        }\r\n      }\r\n    }\r\n    \r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * \u4ECE\u5185\u5BB9\u4E2D\u63D0\u53D6\u65E5\u671F\r\n   */\r\n  _extractDateFromContent(content) {\r\n    const datePattern = /<date>(\\d{4}-\\d{2}-\\d{2})<\\/date>/i;\r\n    const match = content.match(datePattern);\r\n    return match ? match[1] : '';\r\n  }\r\n\r\n  /**\r\n   * \u9A8C\u8BC1\u662F\u5426\u4E3A\u5BFC\u822A\u6587\u672C\r\n   */\r\n  _isNavigationText(text) {\r\n    const navTexts = [\r\n      'english', '\u4E2D\u6587', '\u65E5\u672C\u8A9E', '\uD55C\uAD6D\uC5B4', '\u6709\u78BC', '\u7121\u78BC', '\u5973\u512A', '\u985E\u5225',\r\n      '\u8AD6\u58C7', '\u4E0B\u4E00\u9875', '\u4E0A\u4E00\u9875', '\u9996\u9875', 'next', 'prev', 'page', 'home',\r\n      'login', 'register', 'terms', 'privacy', 'contact', 'about', 'help'\r\n    ];\r\n    \r\n    const textLower = text.toLowerCase();\r\n    return navTexts.some(navText => textLower.includes(navText.toLowerCase())) ||\r\n           /^\\s*\\d+\\s*$/.test(text); // \u7EAF\u6570\u5B57\r\n  }\r\n\r\n  /**\r\n   * \u9A8C\u8BC1\u7535\u5F71\u94FE\u63A5 - \u6839\u636E\u5B9E\u9645\u6570\u636E\u5E73\u8861\u7248\u672C\r\n   */\r\n  _isValidMovieLink(href, content, sourceType) {\r\n    if (!href || typeof href !== 'string') return false;\r\n    \r\n    const hrefLower = href.toLowerCase();\r\n    \r\n    // \u57FA\u672C\u6392\u9664\u89C4\u5219 - \u53EA\u6392\u9664\u660E\u663E\u7684\u975E\u5185\u5BB9\u94FE\u63A5\r\n    const excludePatterns = [\r\n      '/search/', '/page/', '?page=', '/category/', '/genre/', '/tag/', '/forum/',\r\n      '/login', '/register', '/terms', '/privacy', '/help', '/contact', '/about',\r\n      '.css', '.js', '.png', '.jpg', '.gif', '.ico', 'javascript:', '/#'\r\n    ];\r\n    \r\n    if (excludePatterns.some(pattern => hrefLower.includes(pattern))) {\r\n      return false;\r\n    }\r\n    \r\n    // \u6839\u636E\u6E90\u7C7B\u578B\u8FDB\u884C\u7279\u5B9A\u9A8C\u8BC1\r\n    switch (sourceType) {\r\n      case 'javbus':\r\n        return this._isValidJavBusLink(href, content);\r\n      case 'javdb':\r\n        return this._isValidJavDBLink(href, content);\r\n      case 'jable':\r\n        return this._isValidJableLink(href, content);\r\n      case 'sukebei':\r\n        return this._isValidSukebeiLink(href, content);\r\n      case 'javgg':\r\n        return this._isValidJavGGLink(href, content);\r\n      case 'javmost':\r\n        return this._isValidJavMostLink(href, content);\r\n      case 'javguru':\r\n        return this._isValidJavGuruLink(href, content);\r\n      default:\r\n        return this._isValidGenericLink(href, content);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * JavBus\u94FE\u63A5\u9A8C\u8BC1 - \u6839\u636E\u5B9E\u9645\u6570\u636E /IPX-156\r\n   */\r\n  _isValidJavBusLink(href, content) {\r\n    // \u5FC5\u987B\u5305\u542B\u756A\u53F7\u8DEF\u5F84\uFF1A/IPX-156\r\n    const hasCode = /\\/[A-Z]{2,6}-?\\d{3,6}(?:\\/|$)/i.test(href);\r\n    const isDomainOk = !href.startsWith('http') || href.includes('javbus');\r\n    \r\n    return hasCode && isDomainOk;\r\n  }\r\n\r\n  /**\r\n   * JavDB\u94FE\u63A5\u9A8C\u8BC1 - \u6839\u636E\u5B9E\u9645\u6570\u636E /v/KkZ97\r\n   */\r\n  _isValidJavDBLink(href, content) {\r\n    const isDetailFormat = /\\/v\\/[a-zA-Z0-9]+/.test(href);\r\n    const isDomainOk = !href.startsWith('http') || href.includes('javdb');\r\n    const notSearchPage = !href.includes('/search') && !href.includes('/actors');\r\n    \r\n    return isDetailFormat && isDomainOk && notSearchPage;\r\n  }\r\n\r\n  /**\r\n   * Jable\u94FE\u63A5\u9A8C\u8BC1 - \u6839\u636E\u5B9E\u9645\u6570\u636E /videos/ipx-156/\r\n   */\r\n  _isValidJableLink(href, content) {\r\n    const isVideoFormat = /\\/videos\\/[^\\/\\?]+/.test(href);\r\n    const isDomainOk = !href.startsWith('http') || href.includes('jable.tv');\r\n    const notSearchPage = !href.includes('/search');\r\n    \r\n    return isVideoFormat && isDomainOk && notSearchPage;\r\n  }\r\n\r\n  /**\r\n   * Sukebei\u94FE\u63A5\u9A8C\u8BC1 - \u6839\u636E\u5B9E\u9645\u6570\u636E /view/3403743\r\n   */\r\n  _isValidSukebeiLink(href, content) {\r\n    const isDetailFormat = /\\/view\\/\\d+/.test(href) || /[A-Z]{2,6}-?\\d{3,6}/i.test(content);\r\n    const isDomainOk = !href.startsWith('http') || href.includes('sukebei.nyaa.si');\r\n    \r\n    return isDetailFormat && isDomainOk;\r\n  }\r\n\r\n  /**\r\n   * JavGG\u94FE\u63A5\u9A8C\u8BC1 - \u6839\u636E\u5B9E\u9645\u6570\u636E /jav/ipx-156-reduce-mosaic/\r\n   */\r\n  _isValidJavGGLink(href, content) {\r\n    const isJavFormat = /\\/jav\\/[a-z0-9\\-]+/i.test(href);\r\n    const isDomainOk = !href.startsWith('http') || href.includes('javgg.net');\r\n    const notSearchPage = !href.includes('/search');\r\n    \r\n    return isJavFormat && isDomainOk && notSearchPage;\r\n  }\r\n\r\n  /**\r\n   * JavMost\u94FE\u63A5\u9A8C\u8BC1 - \u6839\u636E\u5B9E\u9645\u6570\u636E /IPX-156/ \uFF08\u652F\u6301\u5B50\u57DF\u540D\uFF09\r\n   */\r\n  _isValidJavMostLink(href, content) {\r\n    const hasCodePattern = /\\/[A-Z]{2,6}-?\\d{3,6}[^\\/]*(?:\\/|$)/i.test(href);\r\n    const isDomainOk = !href.startsWith('http') || href.includes('javmost.com');\r\n    const notSearchPage = !href.includes('/search');\r\n    \r\n    return hasCodePattern && isDomainOk && notSearchPage;\r\n  }\r\n\r\n  /**\r\n   * JavGuru\u94FE\u63A5\u9A8C\u8BC1 - \u6839\u636E\u5B9E\u9645\u6570\u636E /268681/ipx-156-sana-matsunaga...\r\n   */\r\n  _isValidJavGuruLink(href, content) {\r\n    const hasDetailPattern = /\\/\\d+\\/[a-z0-9\\-]+/i.test(href);\r\n    const isDomainOk = !href.startsWith('http') || href.includes('jav.guru');\r\n    const notSearchPage = !href.includes('?s=');\r\n    \r\n    return hasDetailPattern && isDomainOk && notSearchPage;\r\n  }\r\n\r\n  /**\r\n   * \u901A\u7528\u94FE\u63A5\u9A8C\u8BC1 - \u5E73\u8861\u7248\u672C\r\n   */\r\n  _isValidGenericLink(href, content) {\r\n    // \u57FA\u672CURL\u683C\u5F0F\u68C0\u67E5\r\n    if (!this._isValidUrl(href)) return false;\r\n    \r\n    // \u5185\u5BB9\u4E0D\u80FD\u662F\u660E\u663E\u7684\u5BFC\u822A\u6587\u672C\r\n    const contentText = content ? content.replace(/<[^>]*>/g, '').trim() : '';\r\n    if (contentText && this._isNavigationText(contentText)) return false;\r\n    \r\n    // \u4F18\u5148\u4FDD\u7559\u5305\u542B\u756A\u53F7\u7684\u94FE\u63A5\r\n    if (/[A-Z]{2,6}-?\\d{3,6}/i.test(href) || /[A-Z]{2,6}-?\\d{3,6}/i.test(contentText)) {\r\n      return true;\r\n    }\r\n    \r\n    // \u6216\u8005\u770B\u8D77\u6765\u50CF\u8BE6\u60C5\u9875\u7684\u94FE\u63A5\r\n    const detailPatterns = [\r\n      /\\/v\\/[a-zA-Z0-9]+/,\r\n      /\\?v=[a-zA-Z0-9]+/,\r\n      /\\/videos\\/[^\\/]+/,\r\n      /\\/view\\/\\d+/,\r\n      /\\/watch\\/[^\\/]+/,\r\n      /\\/play\\/[^\\/]+/,\r\n      /\\/movie\\/[^\\/]+/,\r\n      /\\/jav\\/[^\\/]+/,\r\n      /\\/\\d+\\/[a-z0-9\\-]+/i\r\n    ];\r\n    \r\n    return detailPatterns.some(pattern => pattern.test(href));\r\n  }\r\n\r\n  /**\r\n   * URL\u683C\u5F0F\u9A8C\u8BC1\r\n   */\r\n  _isValidUrl(url) {\r\n    if (!url || typeof url !== 'string') return false;\r\n    \r\n    try {\r\n      if (url.startsWith('http')) {\r\n        new URL(url);\r\n        return true;\r\n      } else if (url.startsWith('/')) {\r\n        return true; // \u76F8\u5BF9URL\r\n      }\r\n      return false;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u89E3\u6790title\u6807\u7B7E\r\n   */\r\n  _parseTitleTag(elements) {\r\n    const titleMatch = this.html.match(/<title[^>]*>(.*?)<\\/title>/i);\r\n    if (titleMatch) {\r\n      elements.push(new CloudflareElement('', titleMatch[1], this.html, titleMatch[0]));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u89E3\u6790\u901A\u7528\u9009\u62E9\u5668\r\n   */\r\n  _parseGenericSelector(elements, selector) {\r\n    console.log(`\u5904\u7406\u901A\u7528\u9009\u62E9\u5668: ${selector}`);\r\n    \r\n    // \u7B80\u5355\u7684class\u9009\u62E9\u5668 .classname\r\n    if (selector.startsWith('.') && !selector.includes(' ')) {\r\n      const className = selector.substring(1);\r\n      const pattern = new RegExp(`<[^>]*class=\"[^\"]*${className}[^\"]*\"[^>]*>(.*?)<\\/[^>]*>`, 'gi');\r\n      let match;\r\n      while ((match = pattern.exec(this.html)) !== null) {\r\n        elements.push(new CloudflareElement('', match[1], this.html, match[0]));\r\n      }\r\n    }\r\n    // \u7B80\u5355\u7684\u6807\u7B7E\u9009\u62E9\u5668\r\n    else if (/^[a-zA-Z]+$/.test(selector)) {\r\n      const pattern = new RegExp(`<${selector}[^>]*>(.*?)<\\/${selector}>`, 'gi');\r\n      let match;\r\n      while ((match = pattern.exec(this.html)) !== null) {\r\n        elements.push(new CloudflareElement('', match[1], this.html, match[0]));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u4ECEURL\u63D0\u53D6\u57DF\u540D\r\n   */\r\n  _extractDomain(url) {\r\n    try {\r\n      const urlObj = new URL(url);\r\n      return urlObj.hostname.toLowerCase();\r\n    } catch {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n\r\nclass CloudflareElement {\r\n  constructor(href, innerHTML, fullHtml, elementHtml) {\r\n    this.href = href || '';\r\n    this.innerHTML = innerHTML || '';\r\n    this.fullHtml = fullHtml || '';\r\n    this.elementHtml = elementHtml || '';\r\n    this.titleAttribute = null;\r\n    this._textContent = null;\r\n    \r\n    // \u9884\u63D0\u53D6\u7684\u4FE1\u606F\r\n    this.extractedTitle = '';\r\n    this.extractedCode = '';\r\n    this.extractedDate = '';\r\n  }\r\n\r\n  getAttribute(attr) {\r\n    if (attr === 'href') {\r\n      return this.href;\r\n    }\r\n    \r\n    if (attr === 'title') {\r\n      // \u4F18\u5148\u8FD4\u56DE\u9884\u63D0\u53D6\u7684\u6807\u9898\r\n      if (this.extractedTitle) return this.extractedTitle;\r\n      if (this.titleAttribute) return this.titleAttribute;\r\n      \r\n      // \u4ECE\u5143\u7D20HTML\u4E2D\u63D0\u53D6title\u5C5E\u6027\r\n      const titleMatch = this.elementHtml.match(/title=\"([^\"]+)\"/i);\r\n      if (titleMatch) return titleMatch[1];\r\n      \r\n      // \u4ECEimg\u6807\u7B7E\u7684title\u5C5E\u6027\u63D0\u53D6\r\n      const imgTitleMatch = this.innerHTML.match(/<img[^>]*title=\"([^\"]+)\"/i);\r\n      if (imgTitleMatch) return imgTitleMatch[1];\r\n      \r\n      // \u4ECEalt\u5C5E\u6027\u63D0\u53D6\r\n      const altMatch = this.innerHTML.match(/<img[^>]*alt=\"([^\"]+)\"/i);\r\n      if (altMatch) return altMatch[1];\r\n      \r\n      return null;\r\n    }\r\n    \r\n    if (attr === 'onclick') {\r\n      const onclickMatch = this.elementHtml.match(/onclick=\"([^\"]+)\"/i);\r\n      return onclickMatch ? onclickMatch[1] : null;\r\n    }\r\n\r\n    if (attr === 'class') {\r\n      const classMatch = this.elementHtml.match(/class=\"([^\"]+)\"/i);\r\n      return classMatch ? classMatch[1] : null;\r\n    }\r\n    \r\n    // \u901A\u7528\u5C5E\u6027\u63D0\u53D6\r\n    const attrRegex = new RegExp(`${attr}=\"([^\"]+)\"`, 'i');\r\n    const match = this.elementHtml.match(attrRegex);\r\n    return match ? match[1] : null;\r\n  }\r\n\r\n  get textContent() {\r\n    if (this._textContent !== null) {\r\n      return this._textContent;\r\n    }\r\n    \r\n    // \u6E05\u7406HTML\u6807\u7B7E\uFF0C\u4FDD\u7559\u6587\u672C\u5185\u5BB9\r\n    this._textContent = this.innerHTML\r\n      .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '') // \u79FB\u9664script\r\n      .replace(/<style\\b[^<]*(?:(?!<\\/style>)<[^<]*)*<\\/style>/gi, '')   // \u79FB\u9664style\r\n      .replace(/<[^>]*>/g, '')                                           // \u79FB\u9664\u6240\u6709HTML\u6807\u7B7E\r\n      .replace(/&nbsp;/g, ' ')                                           // \u66FF\u6362&nbsp;\r\n      .replace(/&amp;/g, '&')                                            // \u66FF\u6362&amp;\r\n      .replace(/&lt;/g, '<')                                             // \u66FF\u6362&lt;\r\n      .replace(/&gt;/g, '>')                                             // \u66FF\u6362&gt;\r\n      .replace(/&quot;/g, '\"')                                           // \u66FF\u6362&quot;\r\n      .replace(/\\s+/g, ' ')                                              // \u5408\u5E76\u591A\u4E2A\u7A7A\u767D\u5B57\u7B26\r\n      .trim();\r\n    \r\n    return this._textContent;\r\n  }\r\n\r\n  querySelector(selector) {\r\n    // \u5728\u5F53\u524D\u5143\u7D20\u5185\u67E5\u627E\u5B50\u5143\u7D20\r\n    const elements = this.querySelectorAll(selector);\r\n    return elements.length > 0 ? elements[0] : null;\r\n  }\r\n\r\n  querySelectorAll(selector) {\r\n    const elements = [];\r\n    \r\n    // \u5728innerHTML\u4E2D\u67E5\u627E\u5339\u914D\u7684\u5B50\u5143\u7D20\r\n    if (selector.includes('.title')) {\r\n      this._findTitleElements(elements);\r\n    } else if (selector.includes('.video-number') || selector.includes('.uid')) {\r\n      this._findCodeElements(elements);\r\n    } else if (selector === 'img') {\r\n      this._findImageElements(elements);\r\n    } else if (selector.startsWith('.')) {\r\n      this._findElementsByClass(elements, selector.substring(1));\r\n    } else if (/^[a-zA-Z]+$/.test(selector)) {\r\n      this._findElementsByTag(elements, selector);\r\n    }\r\n    \r\n    return elements;\r\n  }\r\n\r\n  _findTitleElements(elements) {\r\n    const patterns = [\r\n      /<[^>]*class=\"[^\"]*title[^\"]*\"[^>]*>(.*?)<\\/[^>]*>/gi,\r\n      /<h[1-6][^>]*>(.*?)<\\/h[1-6]>/gi,\r\n      /<[^>]*class=\"[^\"]*video-title[^\"]*\"[^>]*>(.*?)<\\/[^>]*>/gi\r\n    ];\r\n    \r\n    patterns.forEach(pattern => {\r\n      let match;\r\n      while ((match = pattern.exec(this.innerHTML)) !== null) {\r\n        elements.push(new CloudflareElement('', match[1], this.fullHtml, match[0]));\r\n      }\r\n    });\r\n  }\r\n\r\n  _findCodeElements(elements) {\r\n    const patterns = [\r\n      /<[^>]*class=\"[^\"]*video-number[^\"]*\"[^>]*>(.*?)<\\/[^>]*>/gi,\r\n      /<[^>]*class=\"[^\"]*uid[^\"]*\"[^>]*>(.*?)<\\/[^>]*>/gi,\r\n      /<span[^>]*>(.*?)<\\/span>/gi,\r\n      /<strong[^>]*>(.*?)<\\/strong>/gi\r\n    ];\r\n    \r\n    patterns.forEach(pattern => {\r\n      let match;\r\n      while ((match = pattern.exec(this.innerHTML)) !== null) {\r\n        const content = match[1].trim();\r\n        // \u68C0\u67E5\u662F\u5426\u770B\u8D77\u6765\u50CF\u756A\u53F7\r\n        if (/[A-Z]{2,6}-?\\d{3,6}/i.test(content)) {\r\n          elements.push(new CloudflareElement('', content, this.fullHtml, match[0]));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  _findImageElements(elements) {\r\n    const regex = /<img[^>]*>/gi;\r\n    let match;\r\n    \r\n    while ((match = regex.exec(this.innerHTML)) !== null) {\r\n      const imgElement = new CloudflareElement('', '', this.fullHtml, match[0]);\r\n      elements.push(imgElement);\r\n    }\r\n  }\r\n\r\n  _findElementsByClass(elements, className) {\r\n    const pattern = new RegExp(`<[^>]*class=\"[^\"]*${className}[^\"]*\"[^>]*>(.*?)<\\/[^>]*>`, 'gi');\r\n    let match;\r\n    \r\n    while ((match = pattern.exec(this.innerHTML)) !== null) {\r\n      elements.push(new CloudflareElement('', match[1], this.fullHtml, match[0]));\r\n    }\r\n  }\r\n\r\n  _findElementsByTag(elements, tagName) {\r\n    const pattern = new RegExp(`<${tagName}[^>]*>(.*?)<\\/${tagName}>`, 'gi');\r\n    let match;\r\n    \r\n    while ((match = pattern.exec(this.innerHTML)) !== null) {\r\n      elements.push(new CloudflareElement('', match[1], this.fullHtml, match[0]));\r\n    }\r\n  }\r\n\r\n  closest(selector) {\r\n    // \u7B80\u5355\u5B9E\u73B0\uFF0C\u5728\u5B9E\u9645\u9879\u76EE\u4E2D\u53EF\u80FD\u9700\u8981\u66F4\u590D\u6742\u7684\u903B\u8F91\r\n    return null;\r\n  }\r\n}\r\n\r\n// \u5BFC\u51FA\u89E3\u6790\u5668\r\nexport const cloudflareHTMLParser = new CloudflareHTMLParser();\r\nexport default cloudflareHTMLParser;", "// src/services/extraction-validator.js - \u6839\u636E\u5B9E\u9645\u641C\u7D22\u6570\u636E\u4F18\u5316\u7684URL\u9A8C\u8BC1\u548C\u5DE5\u5177\u51FD\u6570\r\nimport { \r\n  SOURCE_DOMAIN_PATTERNS, \r\n  DETAIL_URL_PATTERNS, \r\n  SEARCH_EXCLUDE_PATTERNS,\r\n  SPAM_DOMAINS,\r\n  NAVIGATION_TEXTS,\r\n  CODE_PATTERNS,\r\n  SOURCE_SPECIFIC_CONFIG\r\n} from '../constants.js';\r\n\r\nexport class ExtractionValidatorService {\r\n  constructor() {\r\n    // \u6839\u636E\u5B9E\u9645\u641C\u7D22\u6570\u636E\u66F4\u65B0\u7684\u6E90\u6A21\u5F0F\uFF08\u79FB\u9664JavLibrary\uFF09\r\n    this.sourcePatterns = {\r\n      'javbus': /javbus\\.com/,\r\n      'javdb': /javdb\\.com/,\r\n      'jable': /jable\\.tv/,\r\n      'javgg': /javgg\\.net/,\r\n      'javmost': /javmost\\.com/,\r\n      'sukebei': /sukebei\\.nyaa\\.si/,\r\n      'javguru': /jav\\.guru/\r\n    };\r\n  }\r\n\r\n  // ==================== \u6E90\u68C0\u6D4B\u65B9\u6CD5 ====================\r\n\r\n  /**\r\n   * \u68C0\u6D4B\u6E90\u7C7B\u578B - \u6839\u636E\u5B9E\u9645\u641C\u7D22\u6570\u636E\u4F18\u5316\r\n   * @param {string} url - URL\r\n   * @param {string} sourceId - \u6E90ID\r\n   * @returns {string} \u6E90\u7C7B\u578B\r\n   */\r\n  detectSourceType(url, sourceId) {\r\n    const urlLower = url.toLowerCase();\r\n    \r\n    for (const [type, pattern] of Object.entries(this.sourcePatterns)) {\r\n      if (pattern.test(urlLower)) {\r\n        return type;\r\n      }\r\n    }\r\n    \r\n    if (sourceId) return sourceId;\r\n    \r\n    return 'generic';\r\n  }\r\n\r\n  /**\r\n   * \u4ECEURL\u63A8\u65AD\u53EF\u80FD\u7684\u6E90\u7C7B\u578B\r\n   * @param {string} url - URL\r\n   * @returns {string} \u63A8\u65AD\u7684\u6E90\u7C7B\u578B\r\n   */\r\n  inferSourceTypeFromUrl(url) {\r\n    return this.detectSourceType(url);\r\n  }\r\n\r\n  // ==================== URL\u9A8C\u8BC1\u65B9\u6CD5 ====================\r\n\r\n  /**\r\n   * \u68C0\u67E5URL\u662F\u5426\u4E3A\u8BE6\u60C5\u9875\u9762 - \u6839\u636E\u5B9E\u9645\u6570\u636E\u589E\u5F3A\u7248\u672C\r\n   * @param {string} url - URL\r\n   * @param {string} sourceType - \u6E90\u7C7B\u578B\r\n   * @param {string} expectedDomain - \u671F\u671B\u7684\u57DF\u540D\r\n   * @returns {boolean} \u662F\u5426\u4E3A\u8BE6\u60C5\u9875\r\n   */\r\n  isDetailPageUrl(url, sourceType, expectedDomain) {\r\n    if (!url || typeof url !== 'string') return false;\r\n\r\n    const urlLower = url.toLowerCase();\r\n    const urlDomain = this.extractDomain(url);\r\n\r\n    // \u9A8C\u8BC1\u57DF\u540D\u4E00\u81F4\u6027\uFF08HTTP\u94FE\u63A5\uFF09- \u652F\u6301\u5B50\u57DF\u540D\r\n    if (url.startsWith('http') && expectedDomain && !this.isDomainOrSubdomainMatch(urlDomain, expectedDomain)) {\r\n      return false;\r\n    }\r\n\r\n    // \u6392\u9664\u660E\u663E\u7684\u975E\u8BE6\u60C5\u9875\u9762\r\n    if (this.containsSearchIndicators(url)) {\r\n      return false;\r\n    }\r\n\r\n    // \u6839\u636E\u6E90\u7C7B\u578B\u8FDB\u884C\u4E13\u95E8\u9A8C\u8BC1\r\n    switch (sourceType) {\r\n      case 'javbus':\r\n        return this.isJavBusDetailPage(url);\r\n        \r\n      case 'javdb':\r\n        return this.isJavDBDetailPage(url);\r\n        \r\n      case 'jable':\r\n        return this.isJableDetailPage(url);\r\n        \r\n      case 'javgg':\r\n        return this.isJavGGDetailPage(url);\r\n        \r\n      case 'javmost':\r\n        return this.isJavMostDetailPage(url);\r\n        \r\n      case 'sukebei':\r\n        return this.isSukebeiDetailPage(url);\r\n        \r\n      case 'javguru':\r\n        return this.isJavGuruDetailPage(url);\r\n        \r\n      default:\r\n        return this.isGenericDetailPage(url);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u9A8C\u8BC1\u8BE6\u60C5\u9875\u9762URL - \u65B0\u589E\u65B9\u6CD5\r\n   * @param {string} detailUrl - \u8BE6\u60C5\u9875\u9762URL\r\n   * @param {string} searchUrl - \u641C\u7D22URL\r\n   * @param {string} sourceType - \u6E90\u7C7B\u578B\r\n   * @returns {boolean} \u662F\u5426\u4E3A\u6709\u6548\u7684\u8BE6\u60C5\u9875\u9762URL\r\n   */\r\n  validateDetailPageUrl(detailUrl, searchUrl, sourceType) {\r\n    console.log(`=== \u9A8C\u8BC1\u8BE6\u60C5\u9875\u9762URL ===`);\r\n    console.log(`\u8BE6\u60C5URL: ${detailUrl}`);\r\n    console.log(`\u641C\u7D22URL: ${searchUrl}`);\r\n\r\n    // 1. \u57FA\u672C\u9A8C\u8BC1\r\n    if (!detailUrl || typeof detailUrl !== 'string') {\r\n      console.log(`\u2310 \u8BE6\u60C5URL\u65E0\u6548`);\r\n      return false;\r\n    }\r\n\r\n    // 2. \u4E0D\u80FD\u4E0E\u641C\u7D22URL\u5B8C\u5168\u76F8\u540C\r\n    if (this.normalizeUrl(detailUrl) === this.normalizeUrl(searchUrl)) {\r\n      console.log(`\u2310 \u8BE6\u60C5URL\u4E0E\u641C\u7D22URL\u76F8\u540C`);\r\n      return false;\r\n    }\r\n\r\n    // 3. \u57DF\u540D\u5FC5\u987B\u4E00\u81F4\uFF08\u652F\u6301\u5B50\u57DF\u540D\uFF09\r\n    const detailDomain = this.extractDomain(detailUrl);\r\n    const searchDomain = this.extractDomain(searchUrl);\r\n    \r\n    if (!this.isDomainOrSubdomainMatch(detailDomain, searchDomain)) {\r\n      console.log(`\u2310 \u57DF\u540D\u4E0D\u4E00\u81F4: ${detailDomain} != ${searchDomain}`);\r\n      return false;\r\n    }\r\n\r\n    // 4. \u5FC5\u987B\u662F\u8BE6\u60C5\u9875\u9762\u683C\u5F0F\r\n    if (!this.isDetailPageUrl(detailUrl, sourceType, searchDomain)) {\r\n      console.log(`\u2310 \u4E0D\u662F\u6709\u6548\u7684\u8BE6\u60C5\u9875\u9762\u683C\u5F0F`);\r\n      return false;\r\n    }\r\n\r\n    console.log(`\u2705 \u8BE6\u60C5\u9875\u9762URL\u9A8C\u8BC1\u901A\u8FC7`);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * \u68C0\u67E5URL\u662F\u5426\u5305\u542B\u641C\u7D22\u6307\u793A\u5668 - \u65B0\u589E\u65B9\u6CD5\r\n   * @param {string} url - URL\r\n   * @returns {boolean} \u662F\u5426\u5305\u542B\u641C\u7D22\u6307\u793A\u5668\r\n   */\r\n  containsSearchIndicators(url) {\r\n    const urlLower = url.toLowerCase();\r\n    return SEARCH_EXCLUDE_PATTERNS.some(indicator => urlLower.includes(indicator));\r\n  }\r\n\r\n  // ==================== \u6E90\u7279\u5B9A\u7684\u8BE6\u60C5\u9875\u9A8C\u8BC1\u65B9\u6CD5 ====================\r\n\r\n  /**\r\n   * JavBus\u8BE6\u60C5\u9875\u9762\u9A8C\u8BC1 - \u6839\u636E\u5B9E\u9645\u6570\u636E /IPX-156\r\n   */\r\n  isJavBusDetailPage(url) {\r\n    // JavBus\u8BE6\u60C5\u9875\u5C31\u662F\u76F4\u63A5\u7684\u756A\u53F7\u8DEF\u5F84\uFF1A/IPX-156\r\n    const hasCodePattern = /\\/[A-Z]{2,6}-?\\d{3,6}(?:\\/|$)/i.test(url);\r\n    const notSearchPage = !url.toLowerCase().includes('/search');\r\n    const notGenrePage = !url.toLowerCase().includes('/genre/');\r\n    const notActressPage = !url.toLowerCase().includes('/actresses/');\r\n    \r\n    return hasCodePattern && notSearchPage && notGenrePage && notActressPage;\r\n  }\r\n\r\n  /**\r\n   * JavDB\u8BE6\u60C5\u9875\u9762\u9A8C\u8BC1 - \u6839\u636E\u5B9E\u9645\u6570\u636E /v/KkZ97\r\n   */\r\n  isJavDBDetailPage(url) {\r\n    // JavDB\u8BE6\u60C5\u9875\u662F /v/xxxx \u683C\u5F0F\r\n    const hasVideoPattern = /\\/v\\/[a-zA-Z0-9]+/.test(url);\r\n    const notSearchPage = !url.toLowerCase().includes('/search');\r\n    \r\n    return hasVideoPattern && notSearchPage;\r\n  }\r\n\r\n  /**\r\n   * Jable\u8BE6\u60C5\u9875\u9762\u9A8C\u8BC1 - \u6839\u636E\u5B9E\u9645\u6570\u636E /videos/ipx-156/\r\n   */\r\n  isJableDetailPage(url) {\r\n    // Jable\u8BE6\u60C5\u9875\u662F\u89C6\u9891\u9875\u9762 /videos/xxx\r\n    const hasVideoPath = /\\/videos\\/[^\\/\\?]+/.test(url);\r\n    const notSearchPage = !url.toLowerCase().includes('/search');\r\n    \r\n    return hasVideoPath && notSearchPage;\r\n  }\r\n\r\n  /**\r\n   * JavGG\u8BE6\u60C5\u9875\u9762\u9A8C\u8BC1 - \u6839\u636E\u5B9E\u9645\u6570\u636E /jav/ipx-156-reduce-mosaic/\r\n   */\r\n  isJavGGDetailPage(url) {\r\n    // JavGG\u8BE6\u60C5\u9875\u683C\u5F0F\uFF1A/jav/[code-description]\r\n    const hasJavPath = /\\/jav\\/[a-z0-9\\-]+/i.test(url);\r\n    const notSearchPage = !url.toLowerCase().includes('/search');\r\n    \r\n    return hasJavPath && notSearchPage;\r\n  }\r\n\r\n  /**\r\n   * JavMost\u8BE6\u60C5\u9875\u9762\u9A8C\u8BC1 - \u6839\u636E\u5B9E\u9645\u6570\u636E /IPX-156/ \uFF08\u6CE8\u610F\u5B50\u57DF\u540D\uFF09\r\n   */\r\n  isJavMostDetailPage(url) {\r\n    // JavMost\u8BE6\u60C5\u9875\u5C31\u662F\u756A\u53F7\u8DEF\u5F84\uFF0C\u652F\u6301\u5B50\u57DF\u540D\u5982www5.javmost.com\r\n    const hasCodePattern = /\\/[A-Z]{2,6}-?\\d{3,6}[^\\/]*(?:\\/|$)/i.test(url);\r\n    const notSearchPage = !url.toLowerCase().includes('/search');\r\n    \r\n    return hasCodePattern && notSearchPage;\r\n  }\r\n\r\n  /**\r\n   * Sukebei\u8BE6\u60C5\u9875\u9762\u9A8C\u8BC1 - \u6839\u636E\u5B9E\u9645\u6570\u636E /view/3403743\r\n   */\r\n  isSukebeiDetailPage(url) {\r\n    // Sukebei\u8BE6\u60C5\u9875\u662F\u79CD\u5B50\u9875\u9762 /view/\u6570\u5B57\r\n    const hasViewPattern = /\\/view\\/\\d+/.test(url);\r\n    \r\n    return hasViewPattern;\r\n  }\r\n\r\n  /**\r\n   * JavGuru\u8BE6\u60C5\u9875\u9762\u9A8C\u8BC1 - \u6839\u636E\u5B9E\u9645\u6570\u636E /268681/ipx-156-sana-matsunaga...\r\n   */\r\n  isJavGuruDetailPage(url) {\r\n    // JavGuru\u7684\u8BE6\u60C5\u9875\u9762\u6A21\u5F0F\uFF1A\u6570\u5B57ID+\u8BE6\u7EC6\u63CF\u8FF0\r\n    const notSearchPage = !url.toLowerCase().includes('?s=');\r\n    const hasDetailPattern = /\\/\\d+\\/[a-z0-9\\-]+/i.test(url);\r\n    \r\n    return notSearchPage && hasDetailPattern;\r\n  }\r\n\r\n  /**\r\n   * \u901A\u7528\u8BE6\u60C5\u9875\u9762\u9A8C\u8BC1\r\n   */\r\n  isGenericDetailPage(url) {\r\n    const urlLower = url.toLowerCase();\r\n    \r\n    // \u8BE6\u60C5\u9875\u9762\u7279\u5F81\r\n    const detailIndicators = [\r\n      '/video/', '/watch/', '/play/', '/view/', '/detail/',\r\n      '/movie/', '/film/', '/content/', '/jav/'\r\n    ];\r\n    \r\n    const hasDetailIndicator = detailIndicators.some(indicator => \r\n      urlLower.includes(indicator)\r\n    );\r\n    \r\n    const hasCodePattern = /\\/[A-Z]{2,6}-?\\d{3,6}(?:\\/|$)/i.test(url);\r\n    \r\n    return hasDetailIndicator || hasCodePattern;\r\n  }\r\n\r\n  // ==================== \u57DF\u540D\u5904\u7406\u65B9\u6CD5 ====================\r\n\r\n  /**\r\n   * \u63D0\u53D6\u57DF\u540D - \u5DE5\u5177\u65B9\u6CD5\r\n   * @param {string} url - URL\r\n   * @returns {string} \u57DF\u540D\r\n   */\r\n  extractDomain(url) {\r\n    try {\r\n      const urlObj = new URL(url);\r\n      return urlObj.hostname.toLowerCase();\r\n    } catch {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u68C0\u67E5\u57DF\u540D\u662F\u5426\u5339\u914D - \u7B80\u5355\u7248\u672C\r\n   * @param {string} url - \u8981\u68C0\u67E5\u7684URL\r\n   * @param {string} expectedDomain - \u671F\u671B\u7684\u57DF\u540D\r\n   * @returns {boolean} \u57DF\u540D\u662F\u5426\u5339\u914D\r\n   */\r\n  isDomainMatch(url, expectedDomain) {\r\n    if (!url || !expectedDomain) return false;\r\n    \r\n    try {\r\n      const urlDomain = new URL(url).hostname.toLowerCase();\r\n      return urlDomain === expectedDomain.toLowerCase();\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u68C0\u67E5\u57DF\u540D\u6216\u5B50\u57DF\u540D\u662F\u5426\u5339\u914D - \u589E\u5F3A\u7248\u672C\uFF0C\u652F\u6301\u5B50\u57DF\u540D\r\n   * @param {string} linkDomain - \u94FE\u63A5\u57DF\u540D\r\n   * @param {string} expectedDomain - \u671F\u671B\u57DF\u540D\r\n   * @returns {boolean} \u662F\u5426\u5339\u914D\r\n   */\r\n  isDomainOrSubdomainMatch(linkDomain, expectedDomain) {\r\n    if (!linkDomain || !expectedDomain) return false;\r\n    \r\n    const linkDomainLower = linkDomain.toLowerCase();\r\n    const expectedDomainLower = expectedDomain.toLowerCase();\r\n    \r\n    // \u5B8C\u5168\u5339\u914D\r\n    if (linkDomainLower === expectedDomainLower) return true;\r\n    \r\n    // \u5B50\u57DF\u540D\u5339\u914D - \u91CD\u8981\uFF1A\u652F\u6301www5.javmost.com\u7B49\r\n    if (linkDomainLower.endsWith('.' + expectedDomainLower)) return true;\r\n    \r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * \u68C0\u67E5\u662F\u5426\u4E3A\u5B50\u57DF\u540D - \u5DE5\u5177\u65B9\u6CD5\r\n   * @param {string} linkDomain - \u94FE\u63A5\u57DF\u540D\r\n   * @param {string} baseDomain - \u57FA\u7840\u57DF\u540D\r\n   * @returns {boolean} \u662F\u5426\u4E3A\u5B50\u57DF\u540D\r\n   */\r\n  isDomainOrSubdomain(linkDomain, baseDomain) {\r\n    if (!linkDomain || !baseDomain) return false;\r\n    \r\n    const linkDomainLower = linkDomain.toLowerCase();\r\n    const baseDomainLower = baseDomain.toLowerCase();\r\n    \r\n    // \u5B8C\u5168\u5339\u914D\r\n    if (linkDomainLower === baseDomainLower) return true;\r\n    \r\n    // \u5B50\u57DF\u540D\u5339\u914D\r\n    if (linkDomainLower.endsWith('.' + baseDomainLower)) return true;\r\n    \r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * \u6807\u51C6\u5316URL - \u5DE5\u5177\u65B9\u6CD5\r\n   * @param {string} url - URL\r\n   * @returns {string} \u6807\u51C6\u5316\u7684URL\r\n   */\r\n  normalizeUrl(url) {\r\n    if (!url) return '';\r\n    \r\n    try {\r\n      const urlObj = new URL(url);\r\n      // \u79FB\u9664\u5C3E\u90E8\u659C\u6760\u548C\u5E38\u89C1\u67E5\u8BE2\u53C2\u6570\r\n      let normalized = urlObj.origin + urlObj.pathname;\r\n      \r\n      // \u79FB\u9664\u5C3E\u90E8\u659C\u6760\r\n      if (normalized.endsWith('/') && normalized.length > 1) {\r\n        normalized = normalized.slice(0, -1);\r\n      }\r\n      \r\n      return normalized.toLowerCase();\r\n    } catch {\r\n      return url.toLowerCase();\r\n    }\r\n  }\r\n\r\n  // ==================== URL\u5904\u7406\u5DE5\u5177\u65B9\u6CD5 ====================\r\n\r\n  /**\r\n   * \u89E3\u6790\u76F8\u5BF9URL\u4E3A\u7EDD\u5BF9URL\r\n   * @param {string} relativeUrl - \u76F8\u5BF9URL\r\n   * @param {string} baseUrl - \u57FA\u7840URL\r\n   * @returns {string} \u7EDD\u5BF9URL\r\n   */\r\n  resolveRelativeUrl(relativeUrl, baseUrl) {\r\n    if (!relativeUrl) return '';\r\n    if (relativeUrl.startsWith('http')) return relativeUrl;\r\n\r\n    try {\r\n      const base = new URL(baseUrl);\r\n      const resolved = new URL(relativeUrl, base);\r\n      return resolved.href;\r\n    } catch (error) {\r\n      console.warn('URL\u89E3\u6790\u5931\u8D25:', error.message);\r\n      return relativeUrl;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u9A8C\u8BC1URL\u683C\u5F0F\r\n   * @param {string} url - URL\r\n   * @returns {boolean} \u662F\u5426\u4E3A\u6709\u6548URL\r\n   */\r\n  validateImageUrl(url) {\r\n    if (!url || typeof url !== 'string') return false;\r\n    \r\n    try {\r\n      const urlObj = new URL(url);\r\n      return urlObj.protocol === 'http:' || urlObj.protocol === 'https:';\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // ==================== \u6587\u672C\u5904\u7406\u5DE5\u5177\u65B9\u6CD5 ====================\r\n\r\n  /**\r\n   * \u4ECE\u6587\u672C\u4E2D\u63D0\u53D6\u756A\u53F7 - \u4F7F\u7528\u4F18\u5316\u7684\u6B63\u5219\u8868\u8FBE\u5F0F\r\n   * @param {string} text - \u6587\u672C\r\n   * @returns {string} \u756A\u53F7\r\n   */\r\n  extractCodeFromText(text) {\r\n    if (!text) return '';\r\n    \r\n    // \u4F7F\u7528\u7EFC\u5408\u5339\u914D\u6A21\u5F0F\r\n    const match = text.match(CODE_PATTERNS.combined);\r\n    if (match) {\r\n      return match[1].toUpperCase();\r\n    }\r\n    \r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * \u4ECE\u6807\u9898\u4E2D\u63D0\u53D6\u756A\u53F7\r\n   * @param {string} title - \u6807\u9898\r\n   * @returns {string} \u756A\u53F7\r\n   */\r\n  extractCodeFromTitle(title) {\r\n    return this.extractCodeFromText(title);\r\n  }\r\n\r\n  /**\r\n   * \u4ECEURL\u4E2D\u63D0\u53D6\u756A\u53F7\r\n   * @param {string} url - URL\r\n   * @returns {string} \u756A\u53F7\r\n   */\r\n  extractCodeFromUrl(url) {\r\n    if (!url) return '';\r\n    \r\n    const patterns = [\r\n      /\\/([A-Z]{2,6}-?\\d{3,6})(?:\\/|$|-)/i,  // \u8DEF\u5F84\u4E2D\u7684\u756A\u53F7\r\n      /[?&].*?([A-Z]{2,6}-?\\d{3,6})/i        // \u67E5\u8BE2\u53C2\u6570\u4E2D\u7684\u756A\u53F7\r\n    ];\r\n    \r\n    for (const pattern of patterns) {\r\n      const match = url.match(pattern);\r\n      if (match) {\r\n        return match[1].toUpperCase();\r\n      }\r\n    }\r\n    \r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * \u8BA1\u7B97\u6587\u672C\u76F8\u4F3C\u5EA6\r\n   * @param {string} text1 - \u6587\u672C1\r\n   * @param {string} text2 - \u6587\u672C2\r\n   * @returns {number} \u76F8\u4F3C\u5EA6 (0-1)\r\n   */\r\n  calculateTextSimilarity(text1, text2) {\r\n    if (!text1 || !text2) return 0;\r\n    \r\n    const normalize = (str) => str.toLowerCase().replace(/[^\\w\\d]/g, '');\r\n    const norm1 = normalize(text1);\r\n    const norm2 = normalize(text2);\r\n    \r\n    if (norm1 === norm2) return 1;\r\n    \r\n    // \u7B80\u5355\u7684\u8BCD\u6C47\u91CD\u53E0\u8BA1\u7B97\r\n    const words1 = norm1.split(/\\s+/).filter(w => w.length > 2);\r\n    const words2 = norm2.split(/\\s+/).filter(w => w.length > 2);\r\n    \r\n    if (words1.length === 0 || words2.length === 0) return 0;\r\n    \r\n    const intersection = words1.filter(word => words2.includes(word));\r\n    const union = [...new Set([...words1, ...words2])];\r\n    \r\n    return intersection.length / union.length;\r\n  }\r\n\r\n  // ==================== \u6570\u636E\u9A8C\u8BC1\u5DE5\u5177\u65B9\u6CD5 ====================\r\n\r\n  /**\r\n   * \u9A8C\u8BC1\u65E5\u671F\u683C\u5F0F\r\n   * @param {string} dateStr - \u65E5\u671F\u5B57\u7B26\u4E32\r\n   * @returns {string} \u9A8C\u8BC1\u540E\u7684\u65E5\u671F\u5B57\u7B26\u4E32\r\n   */\r\n  validateDate(dateStr) {\r\n    if (!dateStr) return '';\r\n    \r\n    try {\r\n      const date = new Date(dateStr);\r\n      if (isNaN(date.getTime())) return '';\r\n      \r\n      return date.toISOString().split('T')[0];\r\n    } catch {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u9A8C\u8BC1\u78C1\u529B\u94FE\u63A5\r\n   * @param {Array} magnetLinks - \u78C1\u529B\u94FE\u63A5\u6570\u7EC4\r\n   * @returns {Array} \u9A8C\u8BC1\u540E\u7684\u78C1\u529B\u94FE\u63A5\u6570\u7EC4\r\n   */\r\n  validateMagnetLinks(magnetLinks) {\r\n    if (!Array.isArray(magnetLinks)) return [];\r\n    \r\n    return magnetLinks.filter(link => {\r\n      if (!link || typeof link !== 'object') return false;\r\n      return link.magnet && link.magnet.startsWith('magnet:?xt=urn:btih:');\r\n    }).map(link => ({\r\n      name: link.name || '\u78C1\u529B\u94FE\u63A5',\r\n      magnet: link.magnet,\r\n      size: link.size || '',\r\n      seeders: link.seeders || 0,\r\n      leechers: link.leechers || 0,\r\n      quality: link.quality || '',\r\n      addedDate: link.addedDate || ''\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * \u9A8C\u8BC1\u8BC4\u5206\r\n   * @param {any} rating - \u8BC4\u5206\r\n   * @returns {number} \u9A8C\u8BC1\u540E\u7684\u8BC4\u5206\r\n   */\r\n  validateRating(rating) {\r\n    if (rating === null || rating === undefined) return 0;\r\n    \r\n    const numRating = parseFloat(rating);\r\n    if (isNaN(numRating)) return 0;\r\n    \r\n    return Math.max(0, Math.min(10, numRating));\r\n  }\r\n\r\n  // ==================== \u9AD8\u7EA7\u9A8C\u8BC1\u65B9\u6CD5 ====================\r\n\r\n  /**\r\n   * \u9A8C\u8BC1\u548C\u8FC7\u6EE4\u4E0B\u8F7D\u94FE\u63A5 - \u6839\u636E\u5B9E\u9645\u5783\u573E\u94FE\u63A5\u589E\u5F3A\u7248\u672C\r\n   * @param {Array} links - \u4E0B\u8F7D\u94FE\u63A5\u6570\u7EC4\r\n   * @param {string} expectedDomain - \u671F\u671B\u7684\u57DF\u540D\r\n   * @returns {Array} \u8FC7\u6EE4\u540E\u7684\u94FE\u63A5\u6570\u7EC4\r\n   */\r\n  validateAndFilterDownloadLinks(links, expectedDomain) {\r\n    if (!Array.isArray(links)) return [];\r\n    \r\n    return links.filter(link => {\r\n      if (!link || typeof link !== 'object') return false;\r\n      \r\n      // \u9A8C\u8BC1URL\u6709\u6548\u6027\r\n      if (!link.url || !this.validateImageUrl(link.url)) return false;\r\n      \r\n      // \u5BF9\u4E8EHTTP\u94FE\u63A5\uFF0C\u9A8C\u8BC1\u57DF\u540D\u4E00\u81F4\u6027\uFF08\u652F\u6301\u5B50\u57DF\u540D\uFF09\r\n      if (link.url.startsWith('http')) {\r\n        const linkDomain = this.extractDomain(link.url);\r\n        if (!this.isDomainOrSubdomainMatch(linkDomain, expectedDomain)) {\r\n          console.log(`\u2310 \u8FC7\u6EE4\u4E0D\u540C\u57DF\u540D\u7684\u4E0B\u8F7D\u94FE\u63A5: ${link.url} (${linkDomain} != ${expectedDomain})`);\r\n          return false;\r\n        }\r\n      }\r\n      \r\n      // \u8FC7\u6EE4\u6389\u5783\u573E\u57DF\u540D\r\n      const urlLower = link.url.toLowerCase();\r\n      if (SPAM_DOMAINS.some(domain => urlLower.includes(domain))) {\r\n        console.log(`\u2310 \u8FC7\u6EE4\u5783\u573E\u57DF\u540D\u94FE\u63A5: ${link.url}`);\r\n        return false;\r\n      }\r\n      \r\n      // \u6392\u9664\u660E\u663E\u7684\u5BFC\u822A\u94FE\u63A5\r\n      const nameLower = (link.name || '').toLowerCase();\r\n      if (NAVIGATION_TEXTS.some(text => nameLower.includes(text.toLowerCase()))) {\r\n        console.log(`\u2310 \u8FC7\u6EE4\u5BFC\u822A\u6587\u672C\u94FE\u63A5: ${link.name}`);\r\n        return false;\r\n      }\r\n      \r\n      return true;\r\n    }).map(link => ({\r\n      name: link.name || '\u4E0B\u8F7D\u94FE\u63A5',\r\n      url: link.url,\r\n      type: link.type || 'unknown',\r\n      size: link.size || '',\r\n      quality: link.quality || ''\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * \u68C0\u67E5\u94FE\u63A5\u662F\u5426\u4E3A\u9AD8\u8D28\u91CF\u8BE6\u60C5URL\r\n   * @param {string} url - URL\r\n   * @param {string} source - \u6E90\r\n   * @returns {boolean} \u662F\u5426\u4E3A\u9AD8\u8D28\u91CFURL\r\n   */\r\n  isHighQualityDetailUrl(url, source) {\r\n    const urlLower = url.toLowerCase();\r\n    \r\n    // \u5305\u542B\u756A\u53F7\u7684URL\u4F18\u5148\u7EA7\u9AD8\r\n    if (/[A-Z]{2,6}-?\\d{3,6}/i.test(url)) return true;\r\n    \r\n    // \u68C0\u67E5\u662F\u5426\u5339\u914D\u5DF2\u77E5\u7684\u9AD8\u8D28\u91CF\u6A21\u5F0F\r\n    const sourceType = this.detectSourceType(url, source);\r\n    const patterns = DETAIL_URL_PATTERNS[sourceType];\r\n    \r\n    if (patterns) {\r\n      return patterns.some(pattern => pattern.test(url));\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * \u589E\u5F3A\u7248\u5339\u914D\u5206\u6570\u8BA1\u7B97\r\n   * @param {Object} link - \u94FE\u63A5\u5BF9\u8C61\r\n   * @param {Object} searchResult - \u641C\u7D22\u7ED3\u679C\r\n   * @param {string} searchKeyword - \u641C\u7D22\u5173\u952E\u8BCD\r\n   * @returns {number} \u589E\u5F3A\u540E\u7684\u5339\u914D\u5206\u6570\r\n   */\r\n  calculateEnhancedMatchScore(link, searchResult, searchKeyword) {\r\n    let score = link.score || 0;\r\n    \r\n    // \u756A\u53F7\u5B8C\u5168\u5339\u914D\u52A0\u5206\r\n    if (searchKeyword && link.code) {\r\n      if (searchKeyword.toLowerCase() === link.code.toLowerCase()) {\r\n        score += 40;\r\n      } else if (link.code.toLowerCase().includes(searchKeyword.toLowerCase()) || \r\n                 searchKeyword.toLowerCase().includes(link.code.toLowerCase())) {\r\n        score += 25;\r\n      }\r\n    }\r\n    \r\n    // \u6807\u9898\u76F8\u4F3C\u5EA6\u52A0\u5206\r\n    if (searchResult.title && link.title) {\r\n      const titleSimilarity = this.calculateTextSimilarity(\r\n        searchResult.title.toLowerCase(), \r\n        link.title.toLowerCase()\r\n      );\r\n      score += titleSimilarity * 15;\r\n    }\r\n    \r\n    // \u9AD8\u8D28\u91CFURL\u52A0\u5206\r\n    if (this.isHighQualityDetailUrl(link.url, searchResult.source)) {\r\n      score += 10;\r\n    }\r\n    \r\n    // \u7279\u5B9A\u63D0\u53D6\u6E90\u52A0\u5206\r\n    if (link.extractedFrom === 'javbus_moviebox' || \r\n        link.extractedFrom === 'javdb_video' ||\r\n        link.extractedFrom === 'javgg_video' ||\r\n        link.extractedFrom === 'jable_video' ||\r\n        link.extractedFrom === 'javmost_video' ||\r\n        link.extractedFrom === 'sukebei_torrent' ||\r\n        link.extractedFrom === 'javguru_video') {\r\n      score += 15;\r\n    }\r\n    \r\n    return Math.min(100, Math.max(0, score));\r\n  }\r\n\r\n  // ==================== \u641C\u7D22\u7ED3\u679C\u9A8C\u8BC1 ====================\r\n\r\n  /**\r\n   * \u9A8C\u8BC1\u641C\u7D22\u7ED3\u679C\u94FE\u63A5\u6709\u6548\u6027 - \u4E25\u683C\u7248\u672C\r\n   * @param {string} href - \u94FE\u63A5\u5730\u5740\r\n   * @param {string} content - \u94FE\u63A5\u5185\u5BB9\r\n   * @param {string} sourceType - \u6E90\u7C7B\u578B\r\n   * @param {string} expectedDomain - \u671F\u671B\u7684\u57DF\u540D\r\n   * @returns {boolean} \u662F\u5426\u4E3A\u6709\u6548\u641C\u7D22\u7ED3\u679C\u94FE\u63A5\r\n   */\r\n  isValidSearchResultLink(href, content, sourceType, expectedDomain) {\r\n    if (!href || typeof href !== 'string') return false;\r\n\r\n    const hrefLower = href.toLowerCase();\r\n    const contentLower = (content || '').toLowerCase();\r\n\r\n    // \u901A\u7528\u6392\u9664\u89C4\u5219\r\n    if (SEARCH_EXCLUDE_PATTERNS.some(pattern => hrefLower.includes(pattern))) {\r\n      return false;\r\n    }\r\n\r\n    // \u6392\u9664\u5BFC\u822A\u6587\u672C\r\n    if (NAVIGATION_TEXTS.some(text => contentLower.includes(text.toLowerCase()))) {\r\n      return false;\r\n    }\r\n\r\n    // \u6392\u9664\u7EAF\u6570\u5B57\uFF08\u5206\u9875\u94FE\u63A5\uFF09\r\n    if (/^\\s*\\d+\\s*$/.test(content)) {\r\n      return false;\r\n    }\r\n\r\n    // \u589E\u5F3A\u7684\u57DF\u540D\u68C0\u67E5\r\n    if (expectedDomain) {\r\n      const linkDomain = this.extractDomain(href);\r\n      if (!this.isDomainOrSubdomainMatch(linkDomain, expectedDomain)) {\r\n        // \u68C0\u67E5\u5DF2\u77E5\u7684\u5783\u573E\u57DF\u540D\r\n        if (SPAM_DOMAINS.some(domain => linkDomain.includes(domain))) {\r\n          console.log(`\u2310 \u68C0\u6D4B\u5230\u5783\u573E\u57DF\u540D: ${linkDomain}`);\r\n          return false;\r\n        }\r\n        \r\n        console.log(`\u2310 \u57DF\u540D\u4E0D\u5339\u914D: ${linkDomain} != ${expectedDomain}`);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // \u6839\u636E\u6E90\u7C7B\u578B\u8FDB\u884C\u7279\u5B9A\u9A8C\u8BC1\r\n    switch (sourceType?.toLowerCase()) {\r\n      case 'javbus':\r\n        return this.isValidJavBusSearchLink(href, content);\r\n      case 'javdb':\r\n        return this.isValidJavDBSearchLink(href, content);\r\n      case 'jable':\r\n        return this.isValidJableSearchLink(href, content);\r\n      case 'javgg':\r\n        return this.isValidJavGGSearchLink(href, content);\r\n      case 'javmost':\r\n        return this.isValidJavMostSearchLink(href, content);\r\n      case 'sukebei':\r\n        return this.isValidSukebeiSearchLink(href, content);\r\n      case 'javguru':\r\n        return this.isValidJavGuruSearchLink(href, content);\r\n      default:\r\n        return this.isValidGenericSearchLink(href, content);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * JavBus\u641C\u7D22\u94FE\u63A5\u9A8C\u8BC1 - \u6839\u636E\u5B9E\u9645\u6570\u636E\r\n   */\r\n  isValidJavBusSearchLink(href, content) {\r\n    // \u5FC5\u987B\u5305\u542B\u756A\u53F7\u8DEF\u5F84\uFF1A/IPX-156\r\n    if (!/\\/[A-Z]{2,6}-?\\d{3,6}(?:\\/|$)/i.test(href)) return false;\r\n    \r\n    // \u6392\u9664\u641C\u7D22\u9875\u9762\r\n    if (href.toLowerCase().includes('/search')) return false;\r\n    \r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * JavDB\u641C\u7D22\u94FE\u63A5\u9A8C\u8BC1 - \u6839\u636E\u5B9E\u9645\u6570\u636E\r\n   */\r\n  isValidJavDBSearchLink(href, content) {\r\n    // JavDB\u8BE6\u60C5\u9875\u683C\u5F0F\uFF1A/v/xxxx\r\n    if (/\\/v\\/[a-zA-Z0-9]+/.test(href)) return true;\r\n    \r\n    // \u6392\u9664\u641C\u7D22\u9875\u9762\r\n    if (href.toLowerCase().includes('/search')) return false;\r\n    \r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Jable\u641C\u7D22\u94FE\u63A5\u9A8C\u8BC1 - \u6839\u636E\u5B9E\u9645\u6570\u636E\uFF0C\u4E25\u683C\u7248\u672C\r\n   */\r\n  isValidJableSearchLink(href, content) {\r\n    // Jable\u89C6\u9891\u9875\u683C\u5F0F\uFF1A/videos/xxx\r\n    if (!/\\/videos\\/[^\\/]+/.test(href)) return false;\r\n    \r\n    // \u4E25\u683C\u68C0\u67E5\uFF1A\u5FC5\u987B\u662Fjable.tv\u57DF\u540D\r\n    const domain = this.extractDomain(href);\r\n    if (domain !== 'jable.tv') {\r\n      console.log(`\u2310 Jable\u94FE\u63A5\u57DF\u540D\u9519\u8BEF: ${domain}`);\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * JavGG\u641C\u7D22\u94FE\u63A5\u9A8C\u8BC1 - \u6839\u636E\u5B9E\u9645\u6570\u636E\r\n   */\r\n  isValidJavGGSearchLink(href, content) {\r\n    // JavGG\u8BE6\u60C5\u9875\u683C\u5F0F\uFF1A/jav/[code-description]\r\n    if (!/\\/jav\\/[a-z0-9\\-]+/i.test(href)) return false;\r\n    \r\n    // \u68C0\u67E5\u57DF\u540D\r\n    const domain = this.extractDomain(href);\r\n    const allowedDomains = ['javgg.net'];\r\n    \r\n    return allowedDomains.some(allowed => domain === allowed || domain.endsWith('.' + allowed));\r\n  }\r\n\r\n  /**\r\n   * JavMost\u641C\u7D22\u94FE\u63A5\u9A8C\u8BC1 - \u652F\u6301\u5B50\u57DF\u540D\r\n   */\r\n  isValidJavMostSearchLink(href, content) {\r\n    // \u5FC5\u987B\u5305\u542B\u756A\u53F7\u8DEF\u5F84\r\n    if (!/\\/[A-Z]{2,6}-?\\d{3,6}[^\\/]*(?:\\/|$)/i.test(href)) return false;\r\n    \r\n    // \u68C0\u67E5\u57DF\u540D - \u652F\u6301\u5B50\u57DF\u540D\r\n    const domain = this.extractDomain(href);\r\n    return this.isDomainOrSubdomain(domain, 'javmost.com');\r\n  }\r\n\r\n  /**\r\n   * Sukebei\u641C\u7D22\u94FE\u63A5\u9A8C\u8BC1 - \u6839\u636E\u5B9E\u9645\u6570\u636E\r\n   */\r\n  isValidSukebeiSearchLink(href, content) {\r\n    // Sukebei\u8BE6\u60C5\u9875\u683C\u5F0F\uFF1A/view/\u6570\u5B57\r\n    if (/\\/view\\/\\d+/.test(href)) return true;\r\n    \r\n    // \u6216\u5305\u542B\u756A\u53F7\u7684\u5185\u5BB9\r\n    return /[A-Z]{2,6}-?\\d{3,6}/i.test(content);\r\n  }\r\n\r\n  /**\r\n   * JavGuru\u641C\u7D22\u94FE\u63A5\u9A8C\u8BC1 - \u6839\u636E\u5B9E\u9645\u6570\u636E\r\n   */\r\n  isValidJavGuruSearchLink(href, content) {\r\n    // JavGuru\u7684\u8BE6\u60C5\u9875\u9762\u6A21\u5F0F\uFF1A/\u6570\u5B57/\u63CF\u8FF0\r\n    const hasDetailPattern = /\\/\\d+\\/[a-z0-9\\-]+/i.test(href);\r\n    \r\n    // \u6392\u9664\u641C\u7D22\u9875\u9762\r\n    const notSearchPage = !href.toLowerCase().includes('?s=');\r\n    \r\n    return hasDetailPattern && notSearchPage;\r\n  }\r\n\r\n  /**\r\n   * \u901A\u7528\u641C\u7D22\u94FE\u63A5\u9A8C\u8BC1\r\n   */\r\n  isValidGenericSearchLink(href, content) {\r\n    // \u5FC5\u987B\u5339\u914D\u5E38\u89C1\u8BE6\u60C5\u9875\u6A21\u5F0F\r\n    const detailPatterns = DETAIL_URL_PATTERNS;\r\n    const allPatterns = Object.values(detailPatterns).flat();\r\n    \r\n    return allPatterns.some(pattern => pattern.test(href)) ||\r\n           /[A-Z]{2,6}-?\\d{3,6}/i.test(content);\r\n  }\r\n}\r\n\r\n// \u521B\u5EFA\u5355\u4F8B\u5B9E\u4F8B\r\nexport const extractionValidator = new ExtractionValidatorService();\r\nexport default extractionValidator;", "// src/services/search-link-extractor.js - \u6839\u636E\u5B9E\u9645\u641C\u7D22\u6570\u636E\u4F18\u5316\u7684\u641C\u7D22\u9875\u9762\u8BE6\u60C5\u94FE\u63A5\u63D0\u53D6\u670D\u52A1\r\nimport { parserRules } from '../config/parser-rules.js';\r\nimport { cloudflareHTMLParser } from '../utils/html-parser.js';\r\nimport { extractionValidator } from './extraction-validator.js';\r\nimport { CONFIG } from '../constants.js';\r\n\r\nexport class SearchLinkExtractorService {\r\n  constructor() {\r\n    this.parseTimeout = CONFIG.DETAIL_EXTRACTION.PARSE_TIMEOUT;\r\n    this.maxRetries = CONFIG.DETAIL_EXTRACTION.MAX_RETRY_ATTEMPTS;\r\n  }\r\n\r\n  /**\r\n   * \u4ECE\u641C\u7D22\u9875\u9762\u4E2D\u63D0\u53D6\u8BE6\u60C5\u9875\u94FE\u63A5 - \u6839\u636E\u5B9E\u9645\u6570\u636E\u4F18\u5316\u7248\u672C\r\n   * @param {string} htmlContent - \u641C\u7D22\u9875\u9762HTML\u5185\u5BB9\r\n   * @param {Object} options - \u89E3\u6790\u9009\u9879\r\n   * @returns {Array} \u8BE6\u60C5\u9875\u94FE\u63A5\u6570\u7EC4\r\n   */\r\n  async extractDetailLinksFromSearchPage(htmlContent, options = {}) {\r\n    const { sourceType, baseUrl, searchKeyword } = options;\r\n    \r\n    console.log(`=== \u5F00\u59CB\u63D0\u53D6\u8BE6\u60C5\u94FE\u63A5 (\u6839\u636E\u5B9E\u9645\u6570\u636E\u4F18\u5316) ===`);\r\n\r\n    try {\r\n      const doc = cloudflareHTMLParser.parseFromString(htmlContent);\r\n      const baseDomain = extractionValidator.extractDomain(baseUrl);\r\n      \r\n      console.log(`\u57FA\u7840\u57DF\u540D: ${baseDomain}`);\r\n\r\n      // \u6839\u636E\u4E0D\u540C\u6E90\u7C7B\u578B\u4F7F\u7528\u4E13\u95E8\u7684\u63D0\u53D6\u7B56\u7565\r\n      switch (sourceType) {\r\n        case 'javbus':\r\n          return this.extractJavBusDetailLinks(doc, baseUrl, searchKeyword, baseDomain);\r\n        case 'javdb':\r\n          return this.extractJavDBDetailLinks(doc, baseUrl, searchKeyword, baseDomain);\r\n        case 'jable':\r\n          return this.extractJableDetailLinks(doc, baseUrl, searchKeyword, baseDomain);\r\n        case 'javgg':\r\n          return this.extractJavGGDetailLinks(doc, baseUrl, searchKeyword, baseDomain);\r\n        case 'javmost':\r\n          return this.extractJavMostDetailLinks(doc, baseUrl, searchKeyword, baseDomain);\r\n        case 'sukebei':\r\n          return this.extractSukebeiDetailLinks(doc, baseUrl, searchKeyword, baseDomain);\r\n        case 'javguru':\r\n          return this.extractJavGuruDetailLinks(doc, baseUrl, searchKeyword, baseDomain);\r\n        default:\r\n          return this.extractWithGenericRules(doc, baseUrl, searchKeyword, baseDomain, sourceType);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('=== \u8BE6\u60C5\u94FE\u63A5\u63D0\u53D6\u5931\u8D25 ===');\r\n      console.error('\u9519\u8BEF\u4FE1\u606F:', error.message);\r\n      console.error('\u9519\u8BEF\u5806\u6808:', error.stack);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * JavBus\u4E13\u7528\u8BE6\u60C5\u94FE\u63A5\u63D0\u53D6 - \u6839\u636E\u5B9E\u9645\u6570\u636E /IPX-156\r\n   */\r\n  extractJavBusDetailLinks(doc, baseUrl, searchKeyword, baseDomain) {\r\n    const detailLinks = [];\r\n    \r\n    try {\r\n      // JavBus\u7279\u6709\u7684movie-box\u7ED3\u6784\r\n      const movieBoxes = doc.querySelectorAll('.movie-box');\r\n      \r\n      movieBoxes.forEach((box, index) => {\r\n        \r\n        // \u67E5\u627E\u94FE\u63A5\r\n        const link = box.querySelector('a[href]') || box;\r\n        if (!link) return;\r\n        \r\n        const href = link.getAttribute('href');\r\n        \r\n        if (!href || href === '#' || href.startsWith('javascript')) return;\r\n        \r\n        const fullUrl = extractionValidator.resolveRelativeUrl(href, baseUrl);\r\n        \r\n        // \u9A8C\u8BC1\u57DF\u540D\u4E00\u81F4\u6027 - \u652F\u6301\u5B50\u57DF\u540D\r\n        if (!extractionValidator.isDomainOrSubdomainMatch(extractionValidator.extractDomain(fullUrl), baseDomain)) {\r\n          return;\r\n        }\r\n        \r\n        // JavBus\u8BE6\u60C5\u9875\u5FC5\u987B\u662F\u756A\u53F7\u8DEF\u5F84\uFF1A/IPX-156\r\n        if (!/\\/[A-Z]{2,6}-?\\d{3,6}(?:\\/|$)/i.test(fullUrl)) {\r\n          return;\r\n        }\r\n        \r\n        // \u907F\u514D\u641C\u7D22\u9875\u9762\r\n        if (extractionValidator.containsSearchIndicators(fullUrl)) {\r\n          return;\r\n        }\r\n        \r\n        // \u786E\u4FDD\u4E0D\u662F\u4E0E\u641C\u7D22URL\u76F8\u540C\r\n        if (extractionValidator.normalizeUrl(fullUrl) === extractionValidator.normalizeUrl(baseUrl)) {\r\n          return;\r\n        }\r\n        \r\n        // \u63D0\u53D6\u6807\u9898\u548C\u756A\u53F7\r\n        const img = box.querySelector('img');\r\n        const title = img ? (img.getAttribute('title') || img.getAttribute('alt') || '') : '';\r\n        const code = extractionValidator.extractCodeFromText(title) || extractionValidator.extractCodeFromText(fullUrl);\r\n        \r\n        // \u8BA1\u7B97\u5339\u914D\u5206\u6570\r\n        const score = this.calculateMatchScore(title, code, searchKeyword);\r\n        \r\n        console.log(`\u627E\u5230JavBus\u8BE6\u60C5: ${fullUrl}`);\r\n        \r\n        detailLinks.push({\r\n          url: fullUrl,\r\n          title: title || '\u672A\u77E5\u6807\u9898',\r\n          code: code || '',\r\n          score,\r\n          extractedFrom: 'javbus_moviebox'\r\n        });\r\n      });\r\n      \r\n      // \u5982\u679C\u6CA1\u627E\u5230movie-box\uFF0C\u5C1D\u8BD5\u5176\u4ED6\u65B9\u5F0F\r\n      if (detailLinks.length === 0) {\r\n        console.log('movie-box\u65B9\u5F0F\u672A\u627E\u5230\uFF0C\u5C1D\u8BD5\u76F4\u63A5\u94FE\u63A5\u65B9\u5F0F');\r\n        \r\n        const directLinks = doc.querySelectorAll('a[href*=\"/\"][href]:not([href*=\"/search\"]):not([href*=\"/page\"])');\r\n        directLinks.forEach(link => {\r\n          const href = link.getAttribute('href');\r\n          const fullUrl = extractionValidator.resolveRelativeUrl(href, baseUrl);\r\n          \r\n          // \u9A8C\u8BC1\u57DF\u540D\u548C\u683C\u5F0F\r\n          if (extractionValidator.isDomainOrSubdomainMatch(extractionValidator.extractDomain(fullUrl), baseDomain) && \r\n              /\\/[A-Z]{2,6}-?\\d{3,6}(?:\\/|$)/i.test(fullUrl) &&\r\n              !extractionValidator.containsSearchIndicators(fullUrl) &&\r\n              extractionValidator.normalizeUrl(fullUrl) !== extractionValidator.normalizeUrl(baseUrl)) {\r\n            \r\n            const title = link.textContent?.trim() || link.getAttribute('title') || '';\r\n            const code = extractionValidator.extractCodeFromText(title) || extractionValidator.extractCodeFromText(fullUrl);\r\n            const score = this.calculateMatchScore(title, code, searchKeyword);\r\n            \r\n            detailLinks.push({\r\n              url: fullUrl,\r\n              title: title || '\u672A\u77E5\u6807\u9898',\r\n              code: code || '',\r\n              score,\r\n              extractedFrom: 'javbus_direct'\r\n            });\r\n          }\r\n        });\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('JavBus\u4E13\u7528\u63D0\u53D6\u5931\u8D25:', error);\r\n    }\r\n    \r\n    // \u53BB\u91CD\u548C\u6392\u5E8F\r\n    const uniqueLinks = this.removeDuplicateLinks(detailLinks);\r\n    uniqueLinks.sort((a, b) => (b.score || 0) - (a.score || 0));\r\n    \r\n    console.log(`JavBus\u63D0\u53D6\u5B8C\u6210\uFF0C\u627E\u5230 ${uniqueLinks.length} \u4E2A\u6709\u6548\u94FE\u63A5`);\r\n    return uniqueLinks;\r\n  }\r\n\r\n  /**\r\n   * JavDB\u4E13\u7528\u8BE6\u60C5\u94FE\u63A5\u63D0\u53D6 - \u6839\u636E\u5B9E\u9645\u6570\u636E /v/KkZ97\r\n   */\r\n  extractJavDBDetailLinks(doc, baseUrl, searchKeyword, baseDomain) {\r\n    const detailLinks = [];\r\n    \r\n    try {\r\n      // JavDB\u7684\u89C6\u9891\u9879\u76EE\u9009\u62E9\u5668\r\n      const videoSelectors = [\r\n        '.movie-list .item a',\r\n        '.grid-item a',\r\n        '.video-node a',\r\n        'a[href*=\"/v/\"]'\r\n      ];\r\n      \r\n      for (const selector of videoSelectors) {\r\n        const links = doc.querySelectorAll(selector);\r\n        console.log(`\u9009\u62E9\u5668 ${selector} \u627E\u5230 ${links.length} \u4E2A\u94FE\u63A5`);\r\n        \r\n        links.forEach(link => {\r\n          const href = link.getAttribute('href');\r\n          if (!href) return;\r\n          \r\n          const fullUrl = extractionValidator.resolveRelativeUrl(href, baseUrl);\r\n          \r\n          // \u9A8C\u8BC1\u57DF\u540D\u4E00\u81F4\u6027 - \u652F\u6301\u5B50\u57DF\u540D\r\n          if (!extractionValidator.isDomainOrSubdomainMatch(extractionValidator.extractDomain(fullUrl), baseDomain)) {\r\n            return;\r\n          }\r\n          \r\n          // \u786E\u4FDD\u4E0D\u662F\u641C\u7D22URL\u672C\u8EAB\r\n          if (extractionValidator.normalizeUrl(fullUrl) === extractionValidator.normalizeUrl(baseUrl)) {\r\n            return;\r\n          }\r\n          \r\n          // JavDB\u8BE6\u60C5\u9875\u683C\u5F0F\u9A8C\u8BC1\uFF1A/v/xxxx\r\n          if (!/\\/v\\/[a-zA-Z0-9]+/.test(href)) {\r\n            return;\r\n          }\r\n          \r\n          // \u907F\u514D\u641C\u7D22\u9875\u9762\r\n          if (extractionValidator.containsSearchIndicators(fullUrl)) {\r\n            return;\r\n          }\r\n          \r\n          // \u63D0\u53D6\u6807\u9898\u4FE1\u606F\r\n          const titleElement = link.querySelector('.video-title, .title, h4') || link;\r\n          const title = titleElement.textContent?.trim() || link.getAttribute('title') || '';\r\n          const code = extractionValidator.extractCodeFromText(title) || extractionValidator.extractCodeFromText(fullUrl);\r\n          const score = this.calculateMatchScore(title, code, searchKeyword);\r\n          \r\n          detailLinks.push({\r\n            url: fullUrl,\r\n            title: title || '\u672A\u77E5\u6807\u9898',\r\n            code: code || '',\r\n            score,\r\n            extractedFrom: 'javdb_video'\r\n          });\r\n        });\r\n        \r\n        if (detailLinks.length > 0) break;\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('JavDB\u4E13\u7528\u63D0\u53D6\u5931\u8D25:', error);\r\n    }\r\n    \r\n    const uniqueLinks = this.removeDuplicateLinks(detailLinks);\r\n    uniqueLinks.sort((a, b) => (b.score || 0) - (a.score || 0));\r\n    \r\n    console.log(`JavDB\u63D0\u53D6\u5B8C\u6210\uFF0C\u627E\u5230 ${uniqueLinks.length} \u4E2A\u6709\u6548\u94FE\u63A5`);\r\n    return uniqueLinks;\r\n  }\r\n\r\n  /**\r\n   * Jable\u4E13\u7528\u8BE6\u60C5\u94FE\u63A5\u63D0\u53D6 - \u6839\u636E\u5B9E\u9645\u6570\u636E /videos/ipx-156/\r\n   */\r\n  extractJableDetailLinks(doc, baseUrl, searchKeyword, baseDomain) {\r\n    const detailLinks = [];\r\n    \r\n    try {\r\n      const videoSelectors = [\r\n        '.video-item a[href*=\"/videos/\"]',\r\n        '.list-videos a[href*=\"/videos/\"]',\r\n        'a[href*=\"/videos/\"]:not([href*=\"/search\"])'\r\n      ];\r\n      \r\n      for (const selector of videoSelectors) {\r\n        const links = doc.querySelectorAll(selector);\r\n        console.log(`\u9009\u62E9\u5668 ${selector} \u627E\u5230 ${links.length} \u4E2A\u94FE\u63A5`);\r\n        \r\n        links.forEach(link => {\r\n          const href = link.getAttribute('href');\r\n          if (!href) return;\r\n          \r\n          const fullUrl = extractionValidator.resolveRelativeUrl(href, baseUrl);\r\n          \r\n          // Jable\u4E25\u683C\u57DF\u540D\u68C0\u67E5 - \u5FC5\u987B\u662Fjable.tv\u57DF\u540D\r\n          const linkDomain = extractionValidator.extractDomain(fullUrl);\r\n          if (linkDomain !== 'jable.tv') {\r\n            return;\r\n          }\r\n          \r\n          if (extractionValidator.normalizeUrl(fullUrl) === extractionValidator.normalizeUrl(baseUrl)) return;\r\n          \r\n          // Jable\u8BE6\u60C5\u9875\u683C\u5F0F\uFF1A/videos/xxx\r\n          if (!(/\\/videos\\/[^\\/\\?]+/.test(fullUrl))) return;\r\n          if (extractionValidator.containsSearchIndicators(fullUrl)) return;\r\n          \r\n          const titleElement = link.querySelector('.title, h4, .video-title') || link;\r\n          const title = titleElement.textContent?.trim() || link.getAttribute('title') || '';\r\n          const code = extractionValidator.extractCodeFromText(title) || extractionValidator.extractCodeFromText(fullUrl);\r\n          const score = this.calculateMatchScore(title, code, searchKeyword);\r\n          \r\n          detailLinks.push({\r\n            url: fullUrl,\r\n            title: title || '\u672A\u77E5\u6807\u9898',\r\n            code: code || '',\r\n            score,\r\n            extractedFrom: 'jable_video'\r\n          });\r\n        });\r\n        \r\n        if (detailLinks.length > 0) break;\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Jable\u4E13\u7528\u63D0\u53D6\u5931\u8D25:', error);\r\n    }\r\n    \r\n    const uniqueLinks = this.removeDuplicateLinks(detailLinks);\r\n    uniqueLinks.sort((a, b) => (b.score || 0) - (a.score || 0));\r\n    \r\n    console.log(`Jable\u63D0\u53D6\u5B8C\u6210\uFF0C\u627E\u5230 ${uniqueLinks.length} \u4E2A\u6709\u6548\u94FE\u63A5`);\r\n    return uniqueLinks;\r\n  }\r\n\r\n  /**\r\n   * JavGG\u4E13\u7528\u8BE6\u60C5\u94FE\u63A5\u63D0\u53D6 - \u6839\u636E\u5B9E\u9645\u6570\u636E /jav/ipx-156-reduce-mosaic/\r\n   */\r\n  extractJavGGDetailLinks(doc, baseUrl, searchKeyword, baseDomain) {\r\n    const detailLinks = [];\r\n    \r\n    try {\r\n      // JavGG\u7684\u89C6\u9891\u9879\u76EE\u9009\u62E9\u5668\r\n      const videoSelectors = [\r\n        '.video-item a[href*=\"/jav/\"]',\r\n        '.movie-item a[href*=\"/jav/\"]',\r\n        'a[href*=\"/jav/\"]:not([href*=\"/search\"])'\r\n      ];\r\n      \r\n      for (const selector of videoSelectors) {\r\n        const links = doc.querySelectorAll(selector);\r\n        console.log(`\u9009\u62E9\u5668 ${selector} \u627E\u5230 ${links.length} \u4E2A\u94FE\u63A5`);\r\n        \r\n        links.forEach(link => {\r\n          const href = link.getAttribute('href');\r\n          if (!href) return;\r\n          \r\n          const fullUrl = extractionValidator.resolveRelativeUrl(href, baseUrl);\r\n          \r\n          // \u9A8C\u8BC1\u57DF\u540D\u4E00\u81F4\u6027\r\n          if (!extractionValidator.isDomainOrSubdomainMatch(extractionValidator.extractDomain(fullUrl), baseDomain)) {\r\n            return;\r\n          }\r\n          \r\n          // \u786E\u4FDD\u4E0D\u662F\u641C\u7D22URL\u672C\u8EAB\r\n          if (extractionValidator.normalizeUrl(fullUrl) === extractionValidator.normalizeUrl(baseUrl)) {\r\n            return;\r\n          }\r\n          \r\n          // JavGG\u8BE6\u60C5\u9875\u683C\u5F0F\u9A8C\u8BC1\uFF1A/jav/xxx\r\n          if (!/\\/jav\\/[a-z0-9\\-]+/i.test(fullUrl)) {\r\n            return;\r\n          }\r\n          \r\n          // \u907F\u514D\u641C\u7D22\u9875\u9762\r\n          if (extractionValidator.containsSearchIndicators(fullUrl)) {\r\n            return;\r\n          }\r\n          \r\n          // \u63D0\u53D6\u6807\u9898\u4FE1\u606F\r\n          const titleElement = link.querySelector('.title, h3, .video-title') || link;\r\n          const title = titleElement.textContent?.trim() || link.getAttribute('title') || '';\r\n          const code = extractionValidator.extractCodeFromText(title) || extractionValidator.extractCodeFromText(fullUrl);\r\n          const score = this.calculateMatchScore(title, code, searchKeyword);\r\n          \r\n          console.log(`\u627E\u5230JavGG\u8BE6\u60C5: ${fullUrl}`);\r\n          \r\n          detailLinks.push({\r\n            url: fullUrl,\r\n            title: title || '\u672A\u77E5\u6807\u9898',\r\n            code: code || '',\r\n            score,\r\n            extractedFrom: 'javgg_video'\r\n          });\r\n        });\r\n        \r\n        if (detailLinks.length > 0) break;\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('JavGG\u4E13\u7528\u63D0\u53D6\u5931\u8D25:', error);\r\n    }\r\n    \r\n    const uniqueLinks = this.removeDuplicateLinks(detailLinks);\r\n    uniqueLinks.sort((a, b) => (b.score || 0) - (a.score || 0));\r\n    \r\n    console.log(`JavGG\u63D0\u53D6\u5B8C\u6210\uFF0C\u627E\u5230 ${uniqueLinks.length} \u4E2A\u6709\u6548\u94FE\u63A5`);\r\n    return uniqueLinks;\r\n  }\r\n\r\n  /**\r\n   * JavMost\u4E13\u7528\u8BE6\u60C5\u94FE\u63A5\u63D0\u53D6 - \u6839\u636E\u5B9E\u9645\u6570\u636E /IPX-156/ \uFF08\u652F\u6301\u5B50\u57DF\u540D\uFF09\r\n   */\r\n  extractJavMostDetailLinks(doc, baseUrl, searchKeyword, baseDomain) {\r\n    const detailLinks = [];\r\n    \r\n    try {\r\n      const videoSelectors = [\r\n        '.video-item a',\r\n        '.movie-item a',\r\n        'a[href*=\"/\"][href]:not([href*=\"/search\"])'\r\n      ];\r\n      \r\n      for (const selector of videoSelectors) {\r\n        const links = doc.querySelectorAll(selector);\r\n        console.log(`\u9009\u62E9\u5668 ${selector} \u627E\u5230 ${links.length} \u4E2A\u94FE\u63A5`);\r\n        \r\n        links.forEach(link => {\r\n          const href = link.getAttribute('href');\r\n          if (!href) return;\r\n          \r\n          const fullUrl = extractionValidator.resolveRelativeUrl(href, baseUrl);\r\n          \r\n          // JavMost\u652F\u6301\u5B50\u57DF\u540D\u68C0\u67E5\uFF08\u91CD\u8981\uFF1Awww5.javmost.com\uFF09\r\n          const linkDomain = extractionValidator.extractDomain(fullUrl);\r\n          if (!extractionValidator.isDomainOrSubdomain(linkDomain, 'javmost.com')) {\r\n            return;\r\n          }\r\n          \r\n          if (extractionValidator.normalizeUrl(fullUrl) === extractionValidator.normalizeUrl(baseUrl)) return;\r\n          if (extractionValidator.containsSearchIndicators(fullUrl)) return;\r\n          \r\n          // JavMost\u8BE6\u60C5\u9875\u683C\u5F0F\uFF1A/IPX-156/\r\n          const hasCodePattern = /\\/[A-Z]{2,6}-?\\d{3,6}[^\\/]*(?:\\/|$)/i.test(fullUrl);\r\n          if (!hasCodePattern) return;\r\n          \r\n          const title = link.textContent?.trim() || link.getAttribute('title') || '';\r\n          const code = extractionValidator.extractCodeFromText(title) || extractionValidator.extractCodeFromText(fullUrl);\r\n          const score = this.calculateMatchScore(title, code, searchKeyword);\r\n          \r\n          detailLinks.push({\r\n            url: fullUrl,\r\n            title: title || '\u672A\u77E5\u6807\u9898',\r\n            code: code || '',\r\n            score,\r\n            extractedFrom: 'javmost_video'\r\n          });\r\n        });\r\n        \r\n        if (detailLinks.length > 0) break;\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('JavMost\u4E13\u7528\u63D0\u53D6\u5931\u8D25:', error);\r\n    }\r\n    \r\n    const uniqueLinks = this.removeDuplicateLinks(detailLinks);\r\n    uniqueLinks.sort((a, b) => (b.score || 0) - (a.score || 0));\r\n    \r\n    console.log(`JavMost\u63D0\u53D6\u5B8C\u6210\uFF0C\u627E\u5230 ${uniqueLinks.length} \u4E2A\u6709\u6548\u94FE\u63A5`);\r\n    return uniqueLinks;\r\n  }\r\n\r\n  /**\r\n   * Sukebei\u4E13\u7528\u8BE6\u60C5\u94FE\u63A5\u63D0\u53D6 - \u6839\u636E\u5B9E\u9645\u6570\u636E /view/3403743\r\n   */\r\n  extractSukebeiDetailLinks(doc, baseUrl, searchKeyword, baseDomain) {\r\n    const detailLinks = [];\r\n    \r\n    try {\r\n      const torrentSelectors = [\r\n        'tr td:first-child a',\r\n        '.torrent-name a',\r\n        'a[href*=\"/view/\"]'\r\n      ];\r\n      \r\n      for (const selector of torrentSelectors) {\r\n        const links = doc.querySelectorAll(selector);\r\n        console.log(`\u9009\u62E9\u5668 ${selector} \u627E\u5230 ${links.length} \u4E2A\u94FE\u63A5`);\r\n        \r\n        links.forEach(link => {\r\n          const href = link.getAttribute('href');\r\n          if (!href) return;\r\n          \r\n          const fullUrl = extractionValidator.resolveRelativeUrl(href, baseUrl);\r\n          \r\n          if (!extractionValidator.isDomainOrSubdomainMatch(extractionValidator.extractDomain(fullUrl), baseDomain)) return;\r\n          if (extractionValidator.normalizeUrl(fullUrl) === extractionValidator.normalizeUrl(baseUrl)) return;\r\n          \r\n          // Sukebei\u8BE6\u60C5\u9875\u683C\u5F0F\uFF1A/view/\u6570\u5B57\r\n          if (!(/\\/view\\/\\d+/.test(fullUrl))) return;\r\n          \r\n          const title = link.textContent?.trim() || link.getAttribute('title') || '';\r\n          const code = extractionValidator.extractCodeFromText(title) || extractionValidator.extractCodeFromText(fullUrl);\r\n          const score = this.calculateMatchScore(title, code, searchKeyword);\r\n          \r\n          detailLinks.push({\r\n            url: fullUrl,\r\n            title: title || '\u672A\u77E5\u6807\u9898',\r\n            code: code || '',\r\n            score,\r\n            extractedFrom: 'sukebei_torrent'\r\n          });\r\n        });\r\n        \r\n        if (detailLinks.length > 0) break;\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Sukebei\u4E13\u7528\u63D0\u53D6\u5931\u8D25:', error);\r\n    }\r\n    \r\n    const uniqueLinks = this.removeDuplicateLinks(detailLinks);\r\n    uniqueLinks.sort((a, b) => (b.score || 0) - (a.score || 0));\r\n    \r\n    console.log(`Sukebei\u63D0\u53D6\u5B8C\u6210\uFF0C\u627E\u5230 ${uniqueLinks.length} \u4E2A\u6709\u6548\u94FE\u63A5`);\r\n    return uniqueLinks;\r\n  }\r\n\r\n  /**\r\n   * JavGuru\u4E13\u7528\u8BE6\u60C5\u94FE\u63A5\u63D0\u53D6 - \u6839\u636E\u5B9E\u9645\u6570\u636E /268681/ipx-156-sana-matsunaga...\r\n   */\r\n  extractJavGuruDetailLinks(doc, baseUrl, searchKeyword, baseDomain) {\r\n    const detailLinks = [];\r\n    \r\n    try {\r\n      const videoSelectors = [\r\n        '.video-item a',\r\n        '.movie-item a',\r\n        'a[href]:not([href*=\"?s=\"])',\r\n        'a[href*=\"/\"][href]:not([href*=\"/search\"])'\r\n      ];\r\n      \r\n      for (const selector of videoSelectors) {\r\n        const links = doc.querySelectorAll(selector);\r\n        console.log(`\u9009\u62E9\u5668 ${selector} \u627E\u5230 ${links.length} \u4E2A\u94FE\u63A5`);\r\n        \r\n        links.forEach(link => {\r\n          const href = link.getAttribute('href');\r\n          if (!href) return;\r\n          \r\n          const fullUrl = extractionValidator.resolveRelativeUrl(href, baseUrl);\r\n          \r\n          if (!extractionValidator.isDomainOrSubdomainMatch(extractionValidator.extractDomain(fullUrl), baseDomain)) return;\r\n          if (extractionValidator.normalizeUrl(fullUrl) === extractionValidator.normalizeUrl(baseUrl)) return;\r\n          if (extractionValidator.containsSearchIndicators(fullUrl)) return;\r\n          \r\n          // JavGuru\u7684\u8BE6\u60C5\u9875\u9762\u7279\u5F81\uFF1A/\u6570\u5B57/\u63CF\u8FF0\r\n          const hasDetailPattern = /\\/\\d+\\/[a-z0-9\\-]+/i.test(fullUrl);\r\n          if (!hasDetailPattern) return;\r\n          \r\n          const title = link.textContent?.trim() || link.getAttribute('title') || '';\r\n          const code = extractionValidator.extractCodeFromText(title) || extractionValidator.extractCodeFromText(fullUrl);\r\n          const score = this.calculateMatchScore(title, code, searchKeyword);\r\n          \r\n          detailLinks.push({\r\n            url: fullUrl,\r\n            title: title || '\u672A\u77E5\u6807\u9898',\r\n            code: code || '',\r\n            score,\r\n            extractedFrom: 'javguru_video'\r\n          });\r\n        });\r\n        \r\n        if (detailLinks.length > 0) break;\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('JavGuru\u4E13\u7528\u63D0\u53D6\u5931\u8D25:', error);\r\n    }\r\n    \r\n    const uniqueLinks = this.removeDuplicateLinks(detailLinks);\r\n    uniqueLinks.sort((a, b) => (b.score || 0) - (a.score || 0));\r\n    \r\n    console.log(`JavGuru\u63D0\u53D6\u5B8C\u6210\uFF0C\u627E\u5230 ${uniqueLinks.length} \u4E2A\u6709\u6548\u94FE\u63A5`);\r\n    return uniqueLinks;\r\n  }\r\n\r\n  /**\r\n   * \u4F7F\u7528\u901A\u7528\u89C4\u5219\u63D0\u53D6\u8BE6\u60C5\u94FE\u63A5 - \u4F18\u5316\u7248\u672C\r\n   */\r\n  extractWithGenericRules(doc, baseUrl, searchKeyword, baseDomain, sourceType) {\r\n    console.log('=== \u4F7F\u7528\u901A\u7528\u89C4\u5219\u63D0\u53D6\u8BE6\u60C5\u94FE\u63A5 ===');\r\n    const detailLinks = [];\r\n    const maxGenericLinks = CONFIG.DETAIL_EXTRACTION.MAX_GENERIC_LINKS_PER_PAGE;\r\n    \r\n    try {\r\n      // \u83B7\u53D6\u89E3\u6790\u89C4\u5219\r\n      const searchPageRules = parserRules.getSearchPageRules(sourceType);\r\n      \r\n      if (searchPageRules && searchPageRules.detailLinkSelectors) {\r\n        console.log('\u4F7F\u7528\u914D\u7F6E\u7684\u89E3\u6790\u89C4\u5219');\r\n        \r\n        // \u5C1D\u8BD5\u6BCF\u4E2A\u9009\u62E9\u5668\u914D\u7F6E\r\n        for (const selectorConfig of searchPageRules.detailLinkSelectors) {\r\n          \r\n          const links = doc.querySelectorAll(selectorConfig.selector);\r\n\r\n          for (const linkElement of links) {\r\n            let href = linkElement.getAttribute('href');\r\n            \r\n            // \u517C\u5BB9 onclick \u8DF3\u8F6C\uFF08\u5982 javbus\uFF09\r\n            if (!href || href === 'javascript:;' || href.startsWith('javascript')) {\r\n              const onclick = linkElement.getAttribute('onclick');\r\n              if (onclick) {\r\n                let match = onclick.match(/window\\.open\\(['\"]([^'\"]+)['\"]/);\r\n                if (!match) {\r\n                  match = onclick.match(/location\\.href\\s*=\\s*['\"]([^'\"]+)['\"]/);\r\n                }\r\n                if (match && match[1]) {\r\n                  href = match[1];\r\n                }\r\n              }\r\n            }\r\n            \r\n            if (!href) continue;\r\n\r\n            // \u6784\u5EFA\u5B8C\u6574URL\r\n            const fullUrl = extractionValidator.resolveRelativeUrl(href, baseUrl);\r\n            \r\n            // \u589E\u5F3A\u7248\u94FE\u63A5\u6709\u6548\u6027\u9A8C\u8BC1\r\n            const isValid = this.isValidDetailLink(fullUrl, selectorConfig, sourceType, baseDomain, baseUrl);\r\n            \r\n            if (!isValid) continue;\r\n\r\n            // \u63D0\u53D6\u94FE\u63A5\u76F8\u5173\u4FE1\u606F\r\n            const linkInfo = this.extractLinkInfo(linkElement, selectorConfig, searchKeyword);\r\n            \r\n            if (linkInfo) {\r\n              const detailLink = {\r\n                url: fullUrl,\r\n                ...linkInfo\r\n              };\r\n              \r\n              detailLinks.push(detailLink);\r\n              \r\n              console.log(`\u2705 \u6210\u529F\u6DFB\u52A0\u8BE6\u60C5\u94FE\u63A5: ${fullUrl}`);\r\n\r\n            }\r\n          }\r\n\r\n          // \u5982\u679C\u627E\u5230\u94FE\u63A5\u5C31\u505C\u6B62\uFF0C\u907F\u514D\u91CD\u590D\r\n          if (detailLinks.length > 0) {\r\n            console.log(`\u4F7F\u7528\u9009\u62E9\u5668 ${selectorConfig.selector} \u627E\u5230 ${detailLinks.length} \u4E2A\u8BE6\u60C5\u94FE\u63A5`);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // \u5982\u679C\u914D\u7F6E\u89C4\u5219\u6CA1\u627E\u5230\uFF0C\u4F7F\u7528\u901A\u7528\u9009\u62E9\u5668\r\n      if (detailLinks.length === 0) {\r\n        console.log('\u4F7F\u7528\u901A\u7528\u9009\u62E9\u5668\u63D0\u53D6\u8BE6\u60C5\u94FE\u63A5');\r\n        \r\n        const genericSelectors = [\r\n          // \u4F18\u5148\u67E5\u627E\u5305\u542B\u756A\u53F7\u7684\u94FE\u63A5\r\n          'a[href*=\"/\"][href]:not([href*=\"/search\"]):not([href*=\"/page\"])',\r\n          // \u7136\u540E\u67E5\u627E\u5E26\u6807\u9898\u7684\u94FE\u63A5\r\n          'a[href*=\"/\"][title]:not([href*=\"/search\"])',\r\n          // \u6700\u540E\u67E5\u627E\u5BB9\u5668\u5185\u7684\u94FE\u63A5\r\n          '.item a, .movie a, .video a, .result a'\r\n        ];\r\n\r\n        for (const selector of genericSelectors) {\r\n          console.log(`\u5C1D\u8BD5\u901A\u7528\u9009\u62E9\u5668: ${selector}`);\r\n          const links = doc.querySelectorAll(selector);\r\n          console.log(`\u627E\u5230 ${links.length} \u4E2A\u5019\u9009\u94FE\u63A5`);\r\n          \r\n          let processedCount = 0;\r\n          for (const link of links) {\r\n            // \u9650\u5236\u5904\u7406\u6570\u91CF\u4EE5\u63D0\u9AD8\u6027\u80FD\r\n            if (processedCount >= maxGenericLinks) {\r\n              console.log(`\u5DF2\u8FBE\u5230\u901A\u7528\u94FE\u63A5\u5904\u7406\u9650\u5236 (${maxGenericLinks})\uFF0C\u505C\u6B62\u5904\u7406`);\r\n              break;\r\n            }\r\n            \r\n            const href = link.getAttribute('href');\r\n            if (!href) continue;\r\n\r\n            const fullUrl = extractionValidator.resolveRelativeUrl(href, baseUrl);\r\n            \r\n            // \u57DF\u540D\u9A8C\u8BC1 - \u652F\u6301\u5B50\u57DF\u540D\r\n            if (!extractionValidator.isDomainOrSubdomainMatch(extractionValidator.extractDomain(fullUrl), baseDomain)) {\r\n              continue;\r\n            }\r\n            \r\n            // \u786E\u4FDD\u4E0D\u662F\u641C\u7D22URL\u672C\u8EAB\r\n            if (extractionValidator.normalizeUrl(fullUrl) === extractionValidator.normalizeUrl(baseUrl)) {\r\n              continue;\r\n            }\r\n            \r\n            // \u7B80\u5355\u9A8C\u8BC1\r\n            if (!this.isGenericDetailLink(fullUrl)) {\r\n              continue;\r\n            }\r\n\r\n            const title = link.getAttribute('title') || link.textContent?.trim() || '';\r\n            const code = extractionValidator.extractCodeFromText(title) || extractionValidator.extractCodeFromText(fullUrl);\r\n            \r\n            // \u5982\u679C\u6709\u641C\u7D22\u5173\u952E\u8BCD\uFF0C\u53EA\u4FDD\u7559\u76F8\u5173\u7684\u94FE\u63A5\r\n            if (searchKeyword) {\r\n              const score = this.calculateMatchScore(title, code, searchKeyword);\r\n              if (score < 20) {\r\n                continue; // \u5206\u6570\u592A\u4F4E\uFF0C\u8DF3\u8FC7\r\n              }\r\n            }\r\n\r\n            detailLinks.push({\r\n              url: fullUrl,\r\n              title: title || '\u672A\u77E5\u6807\u9898',\r\n              code: code || '',\r\n              score: searchKeyword ? this.calculateMatchScore(title, code, searchKeyword) : 50,\r\n              extractedFrom: 'generic'\r\n            });\r\n            \r\n            processedCount++;\r\n          }\r\n\r\n          if (detailLinks.length > 0) break; // \u627E\u5230\u5C31\u505C\u6B62\r\n        }\r\n\r\n        // \u6309\u5206\u6570\u6392\u5E8F\r\n        detailLinks.sort((a, b) => (b.score || 0) - (a.score || 0));\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('\u901A\u7528\u89C4\u5219\u63D0\u53D6\u8BE6\u60C5\u94FE\u63A5\u5931\u8D25:', error);\r\n    }\r\n\r\n    console.log(`\u901A\u7528\u89C4\u5219\u63D0\u53D6\u5B8C\u6210\uFF0C\u627E\u5230 ${detailLinks.length} \u4E2A\u94FE\u63A5 (\u9650\u5236: ${maxGenericLinks})`);\r\n    return detailLinks;\r\n  }\r\n\r\n  /**\r\n   * \u68C0\u67E5\u662F\u5426\u4E3A\u901A\u7528\u8BE6\u60C5\u94FE\u63A5\r\n   */\r\n  isGenericDetailLink(url) {\r\n    if (!url) return false;\r\n    \r\n    const urlLower = url.toLowerCase();\r\n    \r\n    // \u6392\u9664\u660E\u663E\u7684\u975E\u8BE6\u60C5\u9875\u94FE\u63A5\r\n    const excludePatterns = [\r\n      '/search', '/category', '/tag', '/list', '/page', '?page',\r\n      '/login', '/register', '/user', '/profile', '/settings',\r\n      '/en', '/ja', '/ko', '/forum', '/doc', '/terms', '/privacy',\r\n      '.css', '.js', '.png', '.jpg', '.gif', '.ico', '/#'\r\n    ];\r\n    \r\n    if (excludePatterns.some(pattern => urlLower.includes(pattern))) {\r\n      return false;\r\n    }\r\n    \r\n    // \u5FC5\u987B\u5305\u542B\u756A\u53F7\u6216\u7279\u5B9A\u8BE6\u60C5\u9875\u6A21\u5F0F\r\n    const detailPatterns = [\r\n      /\\/[A-Z]{2,6}-?\\d{3,6}(?:\\/|$)/i,  // \u76F4\u63A5\u756A\u53F7\u8DEF\u5F84\r\n      /\\/v\\/[a-zA-Z0-9]+/,               // JavDB\u683C\u5F0F\r\n      /\\/videos\\/[^\\/]+/,                // Jable\u683C\u5F0F\r\n      /\\/jav\\/[^\\/]+/,                   // JavGG\u683C\u5F0F\r\n      /\\/view\\/\\d+/,                     // Sukebei\u683C\u5F0F\r\n      /\\/\\d+\\/[a-z0-9\\-]+/i,            // JavGuru\u683C\u5F0F\r\n      /\\/(watch|play|video|movie)\\//     // \u901A\u7528\u89C6\u9891\u9875\u9762\r\n    ];\r\n    \r\n    return detailPatterns.some(pattern => pattern.test(url));\r\n  }\r\n\r\n  /**\r\n   * \u589E\u5F3A\u7248\u94FE\u63A5\u6709\u6548\u6027\u9A8C\u8BC1\r\n   */\r\n  isValidDetailLink(url, selectorConfig, sourceType, expectedDomain, baseUrl) {\r\n    if (!url || typeof url !== 'string') return false;\r\n    \r\n    // 1. \u57DF\u540D\u4E00\u81F4\u6027\u68C0\u67E5\uFF08HTTP\u94FE\u63A5\uFF09\r\n    if (url.startsWith('http')) {\r\n      const urlDomain = extractionValidator.extractDomain(url);\r\n      \r\n      // \u68C0\u67E5\u57DF\u540D\u6A21\u5F0F\u5339\u914D\uFF08\u652F\u6301\u5B50\u57DF\u540D\uFF09\r\n      if (selectorConfig.allowedDomainPatterns && selectorConfig.allowedDomainPatterns.length > 0) {\r\n        const domainMatches = selectorConfig.allowedDomainPatterns.some(pattern => \r\n          pattern.test && pattern.test(urlDomain)\r\n        );\r\n        if (!domainMatches) {\r\n          return false;\r\n        }\r\n      } else if (selectorConfig.strictDomainCheck !== false) {\r\n        // \u6807\u51C6\u57DF\u540D\u68C0\u67E5 - \u652F\u6301\u5B50\u57DF\u540D\r\n        if (!extractionValidator.isDomainOrSubdomain(urlDomain, expectedDomain)) {\r\n          console.log(`\u2310 \u57DF\u540D\u4E0D\u5339\u914D: ${urlDomain} != ${expectedDomain}`);\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    \r\n    // 2. \u786E\u4FDD\u4E0D\u662F\u641C\u7D22URL\u672C\u8EAB\r\n    if (extractionValidator.normalizeUrl(url) === extractionValidator.normalizeUrl(baseUrl)) {\r\n      return false;\r\n    }\r\n    \r\n    // 3. \u68C0\u67E5\u641C\u7D22\u6307\u793A\u5668\r\n    if (extractionValidator.containsSearchIndicators(url)) {\r\n      return false;\r\n    }\r\n    \r\n    // 4. \u6839\u636E\u6E90\u7C7B\u578B\u8FDB\u884C\u4E13\u95E8\u9A8C\u8BC1\r\n    return extractionValidator.isDetailPageUrl(url, sourceType, expectedDomain);\r\n  }\r\n\r\n  /**\r\n   * \u63D0\u53D6\u94FE\u63A5\u76F8\u5173\u4FE1\u606F\r\n   */\r\n  extractLinkInfo(linkElement, selectorConfig, searchKeyword) {\r\n    try {\r\n      let title = '';\r\n      let code = '';\r\n      let score = 0;\r\n\r\n      // \u63D0\u53D6\u6807\u9898\r\n      if (selectorConfig.titleAttribute) {\r\n        title = linkElement.getAttribute(selectorConfig.titleAttribute) || '';\r\n      } else if (selectorConfig.titleSelector) {\r\n        const titleElement = linkElement.querySelector(selectorConfig.titleSelector) ||\r\n                           linkElement.closest('.item, .movie, .video, .result')?.querySelector(selectorConfig.titleSelector);\r\n        title = titleElement?.textContent?.trim() || '';\r\n      } else {\r\n        title = linkElement.textContent?.trim() || '';\r\n      }\r\n\r\n      // \u63D0\u53D6\u756A\u53F7\r\n      if (selectorConfig.codeSelector) {\r\n        const codeElement = linkElement.querySelector(selectorConfig.codeSelector) ||\r\n                          linkElement.closest('.item, .movie, .video, .result')?.querySelector(selectorConfig.codeSelector);\r\n        code = codeElement?.textContent?.trim() || '';\r\n      }\r\n\r\n      // \u5982\u679C\u6CA1\u6709\u663E\u5F0F\u756A\u53F7\uFF0C\u4ECE\u6807\u9898\u4E2D\u63D0\u53D6\r\n      if (!code) {\r\n        code = extractionValidator.extractCodeFromText(title);\r\n      }\r\n\r\n      // \u8BA1\u7B97\u5339\u914D\u5206\u6570\r\n      if (searchKeyword) {\r\n        score = this.calculateMatchScore(title, code, searchKeyword);\r\n      }\r\n\r\n      // \u9A8C\u8BC1\u662F\u5426\u9700\u8981\u5305\u542B\u756A\u53F7\r\n      if (selectorConfig.mustContainCode && !code) {\r\n        return null;\r\n      }\r\n\r\n      return {\r\n        title: title || '\u672A\u77E5\u6807\u9898',\r\n        code: code || '',\r\n        score,\r\n        extractedFrom: 'searchPage'\r\n      };\r\n\r\n    } catch (error) {\r\n      console.warn('\u63D0\u53D6\u94FE\u63A5\u4FE1\u606F\u5931\u8D25:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u8BA1\u7B97\u5339\u914D\u5206\u6570\r\n   */\r\n  calculateMatchScore(title, code, searchKeyword) {\r\n    if (!searchKeyword) return 50; // \u9ED8\u8BA4\u5206\u6570\r\n\r\n    let score = 0;\r\n    const keyword = searchKeyword.toLowerCase();\r\n    const titleLower = title.toLowerCase();\r\n    const codeLower = code.toLowerCase();\r\n\r\n    // \u756A\u53F7\u5B8C\u5168\u5339\u914D (40\u5206)\r\n    if (code && keyword === codeLower) {\r\n      score += 40;\r\n    }\r\n    // \u756A\u53F7\u5305\u542B\u5339\u914D (30\u5206)\r\n    else if (code && (codeLower.includes(keyword) || keyword.includes(codeLower))) {\r\n      score += 30;\r\n    }\r\n\r\n    // \u6807\u9898\u5B8C\u5168\u5339\u914D (30\u5206)\r\n    if (keyword === titleLower) {\r\n      score += 30;\r\n    }\r\n    // \u6807\u9898\u5305\u542B\u5339\u914D (20\u5206)\r\n    else if (titleLower.includes(keyword)) {\r\n      score += 20;\r\n    }\r\n\r\n    // \u5173\u952E\u8BCD\u76F8\u4F3C\u5EA6\u5339\u914D (\u6700\u591A30\u5206)\r\n    const similarity = this.calculateTextSimilarity(titleLower, keyword);\r\n    score += Math.round(similarity * 30);\r\n\r\n    return Math.min(100, score);\r\n  }\r\n\r\n  /**\r\n   * \u8BA1\u7B97\u6587\u672C\u76F8\u4F3C\u5EA6\r\n   */\r\n  calculateTextSimilarity(text1, text2) {\r\n    if (!text1 || !text2) return 0;\r\n    \r\n    const normalize = (str) => str.toLowerCase().replace(/[^\\w\\d]/g, '');\r\n    const norm1 = normalize(text1);\r\n    const norm2 = normalize(text2);\r\n    \r\n    if (norm1 === norm2) return 1;\r\n    \r\n    // \u7B80\u5355\u7684\u8BCD\u6C47\u91CD\u53E0\u8BA1\u7B97\r\n    const words1 = norm1.split(/\\s+/).filter(w => w.length > 2);\r\n    const words2 = norm2.split(/\\s+/).filter(w => w.length > 2);\r\n    \r\n    if (words1.length === 0 || words2.length === 0) return 0;\r\n    \r\n    const intersection = words1.filter(word => words2.includes(word));\r\n    const union = [...new Set([...words1, ...words2])];\r\n    \r\n    return intersection.length / union.length;\r\n  }\r\n\r\n  /**\r\n   * \u53BB\u91CD\u94FE\u63A5\r\n   */\r\n  removeDuplicateLinks(links) {\r\n    const seen = new Set();\r\n    return links.filter(link => {\r\n      const normalizedUrl = extractionValidator.normalizeUrl(link.url);\r\n      if (seen.has(normalizedUrl)) {\r\n        return false;\r\n      }\r\n      seen.add(normalizedUrl);\r\n      return true;\r\n    });\r\n  }\r\n}\r\n\r\n// \u521B\u5EFA\u5355\u4F8B\u5B9E\u4F8B\r\nexport const searchLinkExtractor = new SearchLinkExtractorService();\r\nexport default searchLinkExtractor;", "// src/services/detail-content-parser.js - \u6839\u636E7\u4E2A\u641C\u7D22\u6E90\u4F18\u5316\u7684\u8BE6\u60C5\u9875\u9762\u5185\u5BB9\u89E3\u6790\u670D\u52A1\r\nimport { parserRules } from '../config/parser-rules.js';\r\nimport { cloudflareHTMLParser } from '../utils/html-parser.js';\r\nimport { extractionValidator } from './extraction-validator.js';\r\nimport { CONFIG } from '../constants.js';\r\n\r\nexport class DetailContentParserService {\r\n  constructor() {\r\n    this.parseTimeout = CONFIG.DETAIL_EXTRACTION.PARSE_TIMEOUT;\r\n    this.maxRetries = CONFIG.DETAIL_EXTRACTION.MAX_RETRY_ATTEMPTS;\r\n  }\r\n\r\n  /**\r\n   * \u89E3\u6790\u8BE6\u60C5\u9875\u9762\u5185\u5BB9 - \u6839\u636E7\u4E2A\u641C\u7D22\u6E90\u4F18\u5316\u7248\u672C\r\n   * @param {string} htmlContent - HTML\u5185\u5BB9\r\n   * @param {Object} options - \u89E3\u6790\u9009\u9879\r\n   * @returns {Object} \u89E3\u6790\u540E\u7684\u8BE6\u60C5\u4FE1\u606F\r\n   */\r\n  async parseDetailPage(htmlContent, options = {}) {\r\n    const { sourceType, originalUrl, originalTitle } = options;\r\n    \r\n    console.log(`\u5F00\u59CB\u89E3\u6790\u8BE6\u60C5\u9875\u9762\u5185\u5BB9\uFF0C\u6E90\u7C7B\u578B: ${sourceType}`);\r\n\r\n    try {\r\n      // \u4F7F\u7528\u4E13\u7528\u7684Cloudflare Workers HTML\u89E3\u6790\u5668\r\n      const doc = cloudflareHTMLParser.parseFromString(htmlContent);\r\n\r\n      // \u83B7\u53D6\u8BE6\u60C5\u9875\u9762\u89E3\u6790\u89C4\u5219\r\n      const detailPageRules = parserRules.getDetailPageRules(sourceType);\r\n      if (!detailPageRules) {\r\n        console.warn(`\u672A\u627E\u5230 ${sourceType} \u7684\u8BE6\u60C5\u9875\u9762\u89E3\u6790\u89C4\u5219\uFF0C\u4F7F\u7528\u901A\u7528\u89C4\u5219`);\r\n        return this.parseWithGenericRules(doc, originalUrl, originalTitle);\r\n      }\r\n\r\n      console.log(`\u4F7F\u7528 ${sourceType} \u4E13\u7528\u8BE6\u60C5\u9875\u89E3\u6790\u89C4\u5219`);\r\n\r\n      // \u5E94\u7528\u89E3\u6790\u89C4\u5219\r\n      const detailInfo = {\r\n        sourceType,\r\n        originalUrl,\r\n        \r\n        // \u57FA\u672C\u4FE1\u606F\r\n        title: this.extractByRule(doc, detailPageRules.title),\r\n        originalTitle: this.extractByRule(doc, detailPageRules.originalTitle),\r\n        code: this.extractByRule(doc, detailPageRules.code),\r\n        \r\n        // \u5A92\u4F53\u4FE1\u606F\r\n        coverImage: this.extractImageByRule(doc, detailPageRules.coverImage, originalUrl),\r\n        screenshots: this.extractMultipleImagesByRule(doc, detailPageRules.screenshots, originalUrl),\r\n        \r\n        // \u6F14\u5458\u4FE1\u606F\r\n        actresses: this.extractActressesByRule(doc, detailPageRules.actresses),\r\n        director: this.extractByRule(doc, detailPageRules.director),\r\n        studio: this.extractByRule(doc, detailPageRules.studio),\r\n        label: this.extractByRule(doc, detailPageRules.label),\r\n        series: this.extractByRule(doc, detailPageRules.series),\r\n        \r\n        // \u53D1\u5E03\u4FE1\u606F\r\n        releaseDate: this.extractByRule(doc, detailPageRules.releaseDate),\r\n        duration: this.extractByRule(doc, detailPageRules.duration),\r\n        \r\n        // \u6280\u672F\u4FE1\u606F\r\n        quality: this.extractByRule(doc, detailPageRules.quality),\r\n        fileSize: this.extractByRule(doc, detailPageRules.fileSize),\r\n        resolution: this.extractByRule(doc, detailPageRules.resolution),\r\n        \r\n        // \u4E0B\u8F7D\u4FE1\u606F\r\n        downloadLinks: this.extractDownloadLinksByRule(doc, detailPageRules.downloadLinks, originalUrl),\r\n        magnetLinks: this.extractMagnetLinksByRule(doc, detailPageRules.magnetLinks),\r\n        \r\n        // \u5176\u4ED6\u4FE1\u606F\r\n        description: this.extractByRule(doc, detailPageRules.description),\r\n        tags: this.extractTagsByRule(doc, detailPageRules.tags),\r\n        rating: this.extractRatingByRule(doc, detailPageRules.rating)\r\n      };\r\n\r\n      // \u6570\u636E\u6E05\u7406\u548C\u9A8C\u8BC1\r\n      const cleanedInfo = this.cleanAndValidateData(detailInfo);\r\n      \r\n      console.log(`\u8BE6\u60C5\u9875\u9762\u89E3\u6790\u5B8C\u6210\uFF0C\u63D0\u53D6\u5230 ${Object.keys(cleanedInfo).length} \u4E2A\u5B57\u6BB5`);\r\n      return cleanedInfo;\r\n\r\n    } catch (error) {\r\n      console.error('\u8BE6\u60C5\u9875\u9762\u89E3\u6790\u5931\u8D25:', error);\r\n      \r\n      // \u964D\u7EA7\u5230\u901A\u7528\u89E3\u6790\r\n      try {\r\n        const doc = cloudflareHTMLParser.parseFromString(htmlContent);\r\n        return this.parseWithGenericRules(doc, originalUrl, originalTitle);\r\n      } catch (fallbackError) {\r\n        console.error('\u901A\u7528\u89E3\u6790\u4E5F\u5931\u8D25:', fallbackError);\r\n        throw new Error(`\u9875\u9762\u89E3\u6790\u5931\u8D25: ${error.message}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u6839\u636E\u89C4\u5219\u63D0\u53D6\u5185\u5BB9\r\n   * @param {Document} doc - DOM\u6587\u6863\r\n   * @param {Object} rule - \u63D0\u53D6\u89C4\u5219\r\n   * @returns {string} \u63D0\u53D6\u7684\u5185\u5BB9\r\n   */\r\n  extractByRule(doc, rule) {\r\n    if (!rule || !rule.selector) return '';\r\n\r\n    try {\r\n      const element = doc.querySelector(rule.selector);\r\n      if (!element) return '';\r\n\r\n      let text = '';\r\n      \r\n      if (rule.attribute) {\r\n        text = element.getAttribute(rule.attribute) || '';\r\n      } else {\r\n        text = element.textContent || element.innerText || '';\r\n      }\r\n\r\n      // \u5E94\u7528\u6587\u672C\u5904\u7406\u89C4\u5219\r\n      if (rule.transform) {\r\n        text = this.applyTextTransform(text, rule.transform);\r\n      }\r\n\r\n      return text.trim();\r\n\r\n    } catch (error) {\r\n      console.warn(`\u63D0\u53D6\u5931\u8D25 [${rule.selector}]:`, error.message);\r\n      return '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u63D0\u53D6\u56FE\u7247URL\r\n   * @param {Document} doc - DOM\u6587\u6863\r\n   * @param {Object} rule - \u63D0\u53D6\u89C4\u5219\r\n   * @param {string} baseUrl - \u57FA\u7840URL\r\n   * @returns {string} \u56FE\u7247URL\r\n   */\r\n  extractImageByRule(doc, rule, baseUrl) {\r\n    if (!rule || !rule.selector) return '';\r\n\r\n    try {\r\n      const element = doc.querySelector(rule.selector);\r\n      if (!element) return '';\r\n\r\n      let imageUrl = '';\r\n      \r\n      if (rule.attribute) {\r\n        imageUrl = element.getAttribute(rule.attribute) || '';\r\n      } else {\r\n        imageUrl = element.getAttribute('src') || element.getAttribute('data-src') || '';\r\n      }\r\n\r\n      // \u5904\u7406\u76F8\u5BF9URL\r\n      if (imageUrl && !imageUrl.startsWith('http')) {\r\n        imageUrl = extractionValidator.resolveRelativeUrl(imageUrl, baseUrl);\r\n      }\r\n\r\n      return imageUrl;\r\n\r\n    } catch (error) {\r\n      console.warn(`\u56FE\u7247\u63D0\u53D6\u5931\u8D25 [${rule.selector}]:`, error.message);\r\n      return '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u63D0\u53D6\u591A\u4E2A\u56FE\u7247URL\r\n   * @param {Document} doc - DOM\u6587\u6863\r\n   * @param {Object} rule - \u63D0\u53D6\u89C4\u5219\r\n   * @param {string} baseUrl - \u57FA\u7840URL\r\n   * @returns {Array} \u56FE\u7247URL\u6570\u7EC4\r\n   */\r\n  extractMultipleImagesByRule(doc, rule, baseUrl) {\r\n    if (!rule || !rule.selector) return [];\r\n\r\n    try {\r\n      const elements = doc.querySelectorAll(rule.selector);\r\n      const imageUrls = [];\r\n\r\n      elements.forEach(element => {\r\n        let imageUrl = '';\r\n        \r\n        if (rule.attribute) {\r\n          imageUrl = element.getAttribute(rule.attribute) || '';\r\n        } else {\r\n          imageUrl = element.getAttribute('src') || element.getAttribute('data-src') || '';\r\n        }\r\n\r\n        if (imageUrl) {\r\n          if (!imageUrl.startsWith('http')) {\r\n            imageUrl = extractionValidator.resolveRelativeUrl(imageUrl, baseUrl);\r\n          }\r\n          imageUrls.push(imageUrl);\r\n        }\r\n      });\r\n\r\n      // \u9650\u5236\u622A\u56FE\u6570\u91CF\r\n      const maxScreenshots = CONFIG.DETAIL_EXTRACTION.MAX_SCREENSHOTS;\r\n      if (imageUrls.length > maxScreenshots) {\r\n        console.log(`\u622A\u56FE\u6570\u91CF (${imageUrls.length}) \u8D85\u8FC7\u9650\u5236 (${maxScreenshots})\uFF0C\u622A\u53D6\u524D ${maxScreenshots} \u4E2A`);\r\n        return imageUrls.slice(0, maxScreenshots);\r\n      }\r\n\r\n      return imageUrls;\r\n\r\n    } catch (error) {\r\n      console.warn(`\u591A\u56FE\u7247\u63D0\u53D6\u5931\u8D25 [${rule.selector}]:`, error.message);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u63D0\u53D6\u6F14\u5458\u4FE1\u606F\r\n   * @param {Document} doc - DOM\u6587\u6863\r\n   * @param {Object} rule - \u63D0\u53D6\u89C4\u5219\r\n   * @returns {Array} \u6F14\u5458\u4FE1\u606F\u6570\u7EC4\r\n   */\r\n  extractActressesByRule(doc, rule) {\r\n    if (!rule || !rule.selector) return [];\r\n\r\n    try {\r\n      const elements = doc.querySelectorAll(rule.selector);\r\n      const actresses = [];\r\n\r\n      elements.forEach(element => {\r\n        const name = element.textContent?.trim() || '';\r\n        if (name) {\r\n          const actress = { name };\r\n          \r\n          // \u63D0\u53D6\u6F14\u5458\u94FE\u63A5\r\n          const link = element.getAttribute('href') || \r\n                      element.querySelector('a')?.getAttribute('href') || '';\r\n          if (link) {\r\n            actress.profileUrl = link;\r\n          }\r\n\r\n          // \u63D0\u53D6\u6F14\u5458\u5934\u50CF\r\n          const avatar = element.querySelector('img')?.getAttribute('src') || '';\r\n          if (avatar) {\r\n            actress.avatar = avatar;\r\n          }\r\n\r\n          actresses.push(actress);\r\n        }\r\n      });\r\n\r\n      return actresses;\r\n\r\n    } catch (error) {\r\n      console.warn(`\u6F14\u5458\u4FE1\u606F\u63D0\u53D6\u5931\u8D25 [${rule.selector}]:`, error.message);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u63D0\u53D6\u4E0B\u8F7D\u94FE\u63A5 - \u6839\u636E\u5B9E\u9645\u6570\u636E\u4F18\u5316\u7248\u672C\r\n   * @param {Document} doc - DOM\u6587\u6863\r\n   * @param {Object} rule - \u63D0\u53D6\u89C4\u5219\r\n   * @param {string} baseUrl - \u57FA\u7840URL\r\n   * @returns {Array} \u4E0B\u8F7D\u94FE\u63A5\u6570\u7EC4\r\n   */\r\n  extractDownloadLinksByRule(doc, rule, baseUrl) {\r\n    if (!rule || !rule.selector) return [];\r\n\r\n    try {\r\n      const elements = doc.querySelectorAll(rule.selector);\r\n      const downloadLinks = [];\r\n      const maxDownloadLinks = CONFIG.DETAIL_EXTRACTION.MAX_DOWNLOAD_LINKS;\r\n\r\n      for (const element of elements) {\r\n        // \u68C0\u67E5\u662F\u5426\u5DF2\u8FBE\u5230\u6700\u5927\u6570\u91CF\u9650\u5236\r\n        if (downloadLinks.length >= maxDownloadLinks) {\r\n          console.log(`\u4E0B\u8F7D\u94FE\u63A5\u6570\u91CF\u5DF2\u8FBE\u5230\u6700\u5927\u9650\u5236 (${maxDownloadLinks})\uFF0C\u505C\u6B62\u63D0\u53D6`);\r\n          break;\r\n        }\r\n\r\n        const url = element.getAttribute('href') || '';\r\n        const name = element.textContent?.trim() || '\u4E0B\u8F7D\u94FE\u63A5';\r\n        \r\n        if (url) {\r\n          const link = {\r\n            name,\r\n            url: extractionValidator.resolveRelativeUrl(url, baseUrl),\r\n            type: this.detectLinkType(url, name)\r\n          };\r\n\r\n          // \u63D0\u53D6\u6587\u4EF6\u5927\u5C0F\u4FE1\u606F\r\n          const sizeText = element.querySelector('.size, .filesize')?.textContent || '';\r\n          if (sizeText) {\r\n            link.size = sizeText.trim();\r\n          }\r\n\r\n          // \u63D0\u53D6\u8D28\u91CF\u4FE1\u606F\r\n          const qualityText = element.querySelector('.quality, .resolution')?.textContent || '';\r\n          if (qualityText) {\r\n            link.quality = qualityText.trim();\r\n          }\r\n\r\n          // \u9A8C\u8BC1\u4E0B\u8F7D\u94FE\u63A5\u7684\u6709\u6548\u6027 - \u6839\u636E\u5B9E\u9645\u641C\u7D22\u6E90\u4E25\u683C\u8FC7\u6EE4\r\n          const expectedDomain = extractionValidator.extractDomain(baseUrl);\r\n          if (this.isValidDownloadLink(link, expectedDomain, rule)) {\r\n            downloadLinks.push(link);\r\n          }\r\n        }\r\n      }\r\n\r\n      console.log(`\u63D0\u53D6\u5230 ${downloadLinks.length} \u4E2A\u6709\u6548\u4E0B\u8F7D\u94FE\u63A5 (\u9650\u5236: ${maxDownloadLinks})`);\r\n      return downloadLinks;\r\n\r\n    } catch (error) {\r\n      console.warn(`\u4E0B\u8F7D\u94FE\u63A5\u63D0\u53D6\u5931\u8D25 [${rule.selector}]:`, error.message);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u63D0\u53D6\u78C1\u529B\u94FE\u63A5\r\n   * @param {Document} doc - DOM\u6587\u6863\r\n   * @param {Object} rule - \u63D0\u53D6\u89C4\u5219\r\n   * @returns {Array} \u78C1\u529B\u94FE\u63A5\u6570\u7EC4\r\n   */\r\n  extractMagnetLinksByRule(doc, rule) {\r\n    if (!rule || !rule.selector) return [];\r\n\r\n    try {\r\n      const elements = doc.querySelectorAll(rule.selector);\r\n      const magnetLinks = [];\r\n      const maxMagnetLinks = CONFIG.DETAIL_EXTRACTION.MAX_MAGNET_LINKS;\r\n\r\n      for (const element of elements) {\r\n        // \u68C0\u67E5\u662F\u5426\u5DF2\u8FBE\u5230\u6700\u5927\u6570\u91CF\u9650\u5236\r\n        if (magnetLinks.length >= maxMagnetLinks) {\r\n          console.log(`\u78C1\u529B\u94FE\u63A5\u6570\u91CF\u5DF2\u8FBE\u5230\u6700\u5927\u9650\u5236 (${maxMagnetLinks})\uFF0C\u505C\u6B62\u63D0\u53D6`);\r\n          break;\r\n        }\r\n\r\n        const magnet = element.getAttribute('href') || element.textContent || '';\r\n        \r\n        if (magnet.startsWith('magnet:?xt=urn:btih:')) {\r\n          const name = element.getAttribute('title') || \r\n                      element.querySelector('.name, .title')?.textContent?.trim() || \r\n                      '\u78C1\u529B\u94FE\u63A5';\r\n\r\n          const link = { name, magnet };\r\n\r\n          // \u63D0\u53D6\u6587\u4EF6\u5927\u5C0F\r\n          const sizeElement = element.querySelector('.size, .filesize') || \r\n                             element.parentElement?.querySelector('.size, .filesize');\r\n          if (sizeElement) {\r\n            link.size = sizeElement.textContent?.trim() || '';\r\n          }\r\n\r\n          // \u63D0\u53D6\u79CD\u5B50\u4FE1\u606F\r\n          const seedersElement = element.querySelector('.seeders, .seeds') ||\r\n                                element.parentElement?.querySelector('.seeders, .seeds');\r\n          if (seedersElement) {\r\n            link.seeders = parseInt(seedersElement.textContent) || 0;\r\n          }\r\n\r\n          const leechersElement = element.querySelector('.leechers, .peers') ||\r\n                                 element.parentElement?.querySelector('.leechers, .peers');\r\n          if (leechersElement) {\r\n            link.leechers = parseInt(leechersElement.textContent) || 0;\r\n          }\r\n\r\n          magnetLinks.push(link);\r\n        }\r\n      }\r\n\r\n      console.log(`\u63D0\u53D6\u5230 ${magnetLinks.length} \u4E2A\u6709\u6548\u78C1\u529B\u94FE\u63A5 (\u9650\u5236: ${maxMagnetLinks})`);\r\n      return magnetLinks;\r\n\r\n    } catch (error) {\r\n      console.warn(`\u78C1\u529B\u94FE\u63A5\u63D0\u53D6\u5931\u8D25 [${rule.selector}]:`, error.message);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u63D0\u53D6\u6807\u7B7E\r\n   * @param {Document} doc - DOM\u6587\u6863\r\n   * @param {Object} rule - \u63D0\u53D6\u89C4\u5219\r\n   * @returns {Array} \u6807\u7B7E\u6570\u7EC4\r\n   */\r\n  extractTagsByRule(doc, rule) {\r\n    if (!rule || !rule.selector) return [];\r\n\r\n    try {\r\n      const elements = doc.querySelectorAll(rule.selector);\r\n      const tags = [];\r\n\r\n      elements.forEach(element => {\r\n        const tag = element.textContent?.trim() || '';\r\n        if (tag && !tags.includes(tag)) {\r\n          // \u68C0\u67E5\u662F\u5426\u5728\u6392\u9664\u5217\u8868\u4E2D\r\n          if (rule.excludeTexts && rule.excludeTexts.includes(tag)) {\r\n            return;\r\n          }\r\n          tags.push(tag);\r\n        }\r\n      });\r\n\r\n      return tags;\r\n\r\n    } catch (error) {\r\n      console.warn(`\u6807\u7B7E\u63D0\u53D6\u5931\u8D25 [${rule.selector}]:`, error.message);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u63D0\u53D6\u8BC4\u5206\r\n   * @param {Document} doc - DOM\u6587\u6863\r\n   * @param {Object} rule - \u63D0\u53D6\u89C4\u5219\r\n   * @returns {number} \u8BC4\u5206\r\n   */\r\n  extractRatingByRule(doc, rule) {\r\n    if (!rule || !rule.selector) return 0;\r\n\r\n    try {\r\n      const element = doc.querySelector(rule.selector);\r\n      if (!element) return 0;\r\n\r\n      let ratingText = element.textContent?.trim() || '';\r\n      \r\n      if (rule.attribute) {\r\n        ratingText = element.getAttribute(rule.attribute) || '';\r\n      }\r\n\r\n      // \u89E3\u6790\u8BC4\u5206\u6570\u5B57\r\n      const ratingMatch = ratingText.match(/(\\d+(?:\\.\\d+)?)/);\r\n      if (ratingMatch) {\r\n        return parseFloat(ratingMatch[1]);\r\n      }\r\n\r\n      return 0;\r\n\r\n    } catch (error) {\r\n      console.warn(`\u8BC4\u5206\u63D0\u53D6\u5931\u8D25 [${rule.selector}]:`, error.message);\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u5E94\u7528\u6587\u672C\u8F6C\u6362\r\n   * @param {string} text - \u539F\u59CB\u6587\u672C\r\n   * @param {Array} transforms - \u8F6C\u6362\u89C4\u5219\r\n   * @returns {string} \u8F6C\u6362\u540E\u7684\u6587\u672C\r\n   */\r\n  applyTextTransform(text, transforms) {\r\n    if (!Array.isArray(transforms)) return text;\r\n\r\n    let result = text;\r\n\r\n    transforms.forEach(transform => {\r\n      switch (transform.type) {\r\n        case 'replace':\r\n          if (transform.pattern && transform.replacement !== undefined) {\r\n            const regex = new RegExp(transform.pattern, transform.flags || 'g');\r\n            result = result.replace(regex, transform.replacement);\r\n          }\r\n          break;\r\n          \r\n        case 'trim':\r\n          result = result.trim();\r\n          break;\r\n          \r\n        case 'uppercase':\r\n          result = result.toUpperCase();\r\n          break;\r\n          \r\n        case 'lowercase':\r\n          result = result.toLowerCase();\r\n          break;\r\n          \r\n        case 'extract':\r\n          if (transform.pattern) {\r\n            const regex = new RegExp(transform.pattern, transform.flags || '');\r\n            const match = result.match(regex);\r\n            if (match && match[transform.group || 1]) {\r\n              result = match[transform.group || 1];\r\n            }\r\n          }\r\n          break;\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * \u68C0\u6D4B\u94FE\u63A5\u7C7B\u578B\r\n   * @param {string} url - \u94FE\u63A5URL\r\n   * @param {string} name - \u94FE\u63A5\u540D\u79F0\r\n   * @returns {string} \u94FE\u63A5\u7C7B\u578B\r\n   */\r\n  detectLinkType(url, name) {\r\n    const urlLower = url.toLowerCase();\r\n    const nameLower = name.toLowerCase();\r\n\r\n    if (urlLower.includes('magnet:') || nameLower.includes('\u78C1\u529B')) {\r\n      return 'magnet';\r\n    }\r\n    \r\n    if (urlLower.includes('.torrent') || nameLower.includes('\u79CD\u5B50')) {\r\n      return 'torrent';\r\n    }\r\n    \r\n    if (urlLower.includes('ed2k:') || nameLower.includes('\u7535\u9A74')) {\r\n      return 'ed2k';\r\n    }\r\n    \r\n    if (urlLower.includes('ftp://') || nameLower.includes('ftp')) {\r\n      return 'ftp';\r\n    }\r\n    \r\n    if (urlLower.includes('pan.baidu.com') || nameLower.includes('\u767E\u5EA6\u7F51\u76D8')) {\r\n      return 'baidu_pan';\r\n    }\r\n    \r\n    if (urlLower.includes('drive.google.com') || nameLower.includes('google drive')) {\r\n      return 'google_drive';\r\n    }\r\n\r\n    return 'http';\r\n  }\r\n\r\n  /**\r\n   * \u9A8C\u8BC1\u4E0B\u8F7D\u94FE\u63A5\u7684\u6709\u6548\u6027 - \u6839\u636E\u5B9E\u9645\u641C\u7D22\u6E90\u4E25\u683C\u8FC7\u6EE4\r\n   * @param {Object} link - \u4E0B\u8F7D\u94FE\u63A5\u5BF9\u8C61\r\n   * @param {string} expectedDomain - \u671F\u671B\u7684\u57DF\u540D\r\n   * @param {Object} rule - \u9A8C\u8BC1\u89C4\u5219\r\n   * @returns {boolean} \u662F\u5426\u6709\u6548\r\n   */\r\n  isValidDownloadLink(link, expectedDomain, rule) {\r\n    if (!link || !link.url) return false;\r\n\r\n    const url = link.url;\r\n    const name = link.name || '';\r\n    const urlLower = url.toLowerCase();\r\n    const nameLower = name.toLowerCase();\r\n\r\n    // \u4E25\u683C\u57DF\u540D\u68C0\u67E5\r\n    if (rule.strictValidation && expectedDomain) {\r\n      const linkDomain = extractionValidator.extractDomain(url);\r\n      \r\n      // \u68C0\u67E5\u57DF\u540D\u6A21\u5F0F\u5339\u914D\r\n      if (rule.allowedDomainPatterns && rule.allowedDomainPatterns.length > 0) {\r\n        const domainMatches = rule.allowedDomainPatterns.some(pattern => \r\n          pattern.test && pattern.test(linkDomain)\r\n        );\r\n        if (!domainMatches) {\r\n          console.log(`\u2310 \u4E0B\u8F7D\u94FE\u63A5\u57DF\u540D\u4E0D\u5728\u767D\u540D\u5355: ${linkDomain}`);\r\n          return false;\r\n        }\r\n      } else {\r\n        // \u6807\u51C6\u57DF\u540D\u68C0\u67E5\r\n        if (!extractionValidator.isDomainOrSubdomain(linkDomain, expectedDomain)) {\r\n          console.log(`\u2310 \u4E0B\u8F7D\u94FE\u63A5\u57DF\u540D\u4E0D\u5339\u914D: ${linkDomain} != ${expectedDomain}`);\r\n          return false;\r\n        }\r\n      }\r\n\r\n      // \u68C0\u67E5\u57DF\u540D\u9ED1\u540D\u5355\uFF08\u6839\u636E\u5B9E\u9645\u9047\u5230\u7684\u5783\u573E\u94FE\u63A5\uFF09\r\n      const excludeDomains = [\r\n        'seedmm.cyou', 'busfan.cyou', 'dmmsee.ink', 'ph7zhi.vip', '8pla6t.vip',\r\n        'ltrpvkga.com', 'frozaflurkiveltra.com', 'shvaszc.cc', 'fpnylxm.cc',\r\n        'mvqttfwf.com', 'jempoprostoklimor.com', '128zha.cc', 'aciyopg.cc',\r\n        'mnaspm.com', 'asacp.org', 'pr0rze.vip', 'go.mnaspm.com'\r\n      ];\r\n      \r\n      if (excludeDomains.some(domain => urlLower.includes(domain))) {\r\n        console.log(`\u2310 \u4E0B\u8F7D\u94FE\u63A5\u57DF\u540D\u5728\u9ED1\u540D\u5355: ${linkDomain}`);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // \u6392\u9664\u660E\u663E\u7684\u5BFC\u822A\u94FE\u63A5\r\n    const excludeTexts = [\r\n      'english', '\u4E2D\u6587', '\u65E5\u672C\u8A9E', '\uD55C\uAD6D\uC5B4', '\u6709\u78BC', '\u7121\u78BC', '\u5973\u512A', '\u985E\u5225',\r\n      '\u8AD6\u58C7', '\u4E0B\u4E00\u9875', '\u4E0A\u4E00\u9875', '\u9996\u9875', 'terms', 'privacy', '\u767B\u5165', 'agent_code',\r\n      'rta', '2257', 'contact', 'about', 'help', 'support'\r\n    ];\r\n\r\n    if (excludeTexts.some(text => nameLower.includes(text.toLowerCase()))) {\r\n      console.log(`\u2310 \u6392\u9664\u5BFC\u822A\u6587\u672C\u94FE\u63A5: ${name}`);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * \u901A\u7528\u89E3\u6790\u89C4\u5219\uFF08\u4F5C\u4E3A\u540E\u5907\u65B9\u6848\uFF09\r\n   * @param {Document} doc - DOM\u6587\u6863\r\n   * @param {string} originalUrl - \u539F\u59CBURL\r\n   * @param {string} originalTitle - \u539F\u59CB\u6807\u9898\r\n   * @returns {Object} \u89E3\u6790\u7ED3\u679C\r\n   */\r\n  parseWithGenericRules(doc, originalUrl, originalTitle) {\r\n    console.log('\u4F7F\u7528\u901A\u7528\u89E3\u6790\u89C4\u5219');\r\n\r\n    try {\r\n      const result = {\r\n        title: originalTitle,\r\n        originalUrl,\r\n        sourceType: 'generic'\r\n      };\r\n\r\n      // \u5C1D\u8BD5\u4ECE\u9875\u9762\u6807\u9898\u63D0\u53D6\u4FE1\u606F\r\n      const pageTitle = doc.querySelector('title')?.textContent?.trim() || '';\r\n      if (pageTitle && pageTitle !== originalTitle) {\r\n        result.title = pageTitle;\r\n      }\r\n\r\n      // \u5C1D\u8BD5\u63D0\u53D6\u756A\u53F7\r\n      const codeMatch = (pageTitle || originalTitle).match(/([A-Z]{2,6}-?\\d{3,6})/i);\r\n      if (codeMatch) {\r\n        result.code = codeMatch[1].toUpperCase();\r\n      }\r\n\r\n      // \u5C1D\u8BD5\u63D0\u53D6\u5C01\u9762\u56FE\u7247\r\n      const possibleCoverSelectors = [\r\n        'img[class*=\"cover\"]',\r\n        'img[class*=\"poster\"]',\r\n        'img[class*=\"thumb\"]',\r\n        '.cover img',\r\n        '.poster img',\r\n        '.thumbnail img',\r\n        'img[src*=\"cover\"]',\r\n        'img[src*=\"poster\"]'\r\n      ];\r\n\r\n      for (const selector of possibleCoverSelectors) {\r\n        const img = doc.querySelector(selector);\r\n        if (img) {\r\n          const src = img.getAttribute('src') || img.getAttribute('data-src');\r\n          if (src) {\r\n            result.coverImage = extractionValidator.resolveRelativeUrl(src, originalUrl);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // \u5C1D\u8BD5\u63D0\u53D6\u63CF\u8FF0\r\n      const possibleDescSelectors = [\r\n        '.description',\r\n        '.summary',\r\n        '.synopsis',\r\n        '[class*=\"desc\"]',\r\n        '[class*=\"summary\"]'\r\n      ];\r\n\r\n      for (const selector of possibleDescSelectors) {\r\n        const desc = doc.querySelector(selector);\r\n        if (desc) {\r\n          result.description = desc.textContent?.trim() || '';\r\n          if (result.description.length > 50) break;\r\n        }\r\n      }\r\n\r\n      // \u5C1D\u8BD5\u63D0\u53D6\u78C1\u529B\u94FE\u63A5\uFF08\u9650\u5236\u6570\u91CF\uFF09\r\n      const magnetLinks = [];\r\n      const magnetElements = doc.querySelectorAll('a[href^=\"magnet:\"]');\r\n      const maxMagnetLinks = CONFIG.DETAIL_EXTRACTION.MAX_MAGNET_LINKS;\r\n      \r\n      for (let i = 0; i < Math.min(magnetElements.length, maxMagnetLinks); i++) {\r\n        const element = magnetElements[i];\r\n        const magnet = element.getAttribute('href');\r\n        const name = element.textContent?.trim() || '\u78C1\u529B\u94FE\u63A5';\r\n        if (magnet) {\r\n          magnetLinks.push({ name, magnet });\r\n        }\r\n      }\r\n      result.magnetLinks = magnetLinks;\r\n\r\n      // \u5C1D\u8BD5\u63D0\u53D6\u4E0B\u8F7D\u94FE\u63A5\uFF08\u9650\u5236\u6570\u91CF\uFF09\r\n      const downloadLinks = [];\r\n      const downloadElements = doc.querySelectorAll('a[href*=\"download\"], a[class*=\"download\"], .download a');\r\n      const maxDownloadLinks = CONFIG.DETAIL_EXTRACTION.MAX_DOWNLOAD_LINKS;\r\n      \r\n      for (let i = 0; i < Math.min(downloadElements.length, maxDownloadLinks); i++) {\r\n        const element = downloadElements[i];\r\n        const url = element.getAttribute('href');\r\n        const name = element.textContent?.trim() || '\u4E0B\u8F7D\u94FE\u63A5';\r\n        if (url && !url.startsWith('magnet:')) {\r\n          downloadLinks.push({\r\n            name,\r\n            url: extractionValidator.resolveRelativeUrl(url, originalUrl),\r\n            type: this.detectLinkType(url, name)\r\n          });\r\n        }\r\n      }\r\n      result.downloadLinks = downloadLinks;\r\n\r\n      console.log('\u901A\u7528\u89E3\u6790\u5B8C\u6210');\r\n      return result;\r\n\r\n    } catch (error) {\r\n      console.error('\u901A\u7528\u89E3\u6790\u5931\u8D25:', error);\r\n      return {\r\n        title: originalTitle,\r\n        originalUrl,\r\n        sourceType: 'generic',\r\n        extractionError: error.message\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u6E05\u7406\u548C\u9A8C\u8BC1\u6570\u636E\r\n   * @param {Object} data - \u539F\u59CB\u6570\u636E\r\n   * @returns {Object} \u6E05\u7406\u540E\u7684\u6570\u636E\r\n   */\r\n  cleanAndValidateData(data) {\r\n    const cleaned = {};\r\n\r\n    Object.keys(data).forEach(key => {\r\n      const value = data[key];\r\n      \r\n      if (value === null || value === undefined) {\r\n        return;\r\n      }\r\n\r\n      if (typeof value === 'string') {\r\n        const trimmed = value.trim();\r\n        if (trimmed) {\r\n          cleaned[key] = trimmed;\r\n        }\r\n      } else if (Array.isArray(value)) {\r\n        const filtered = value.filter(item => \r\n          item !== null && \r\n          item !== undefined && \r\n          (typeof item !== 'string' || item.trim())\r\n        );\r\n        if (filtered.length > 0) {\r\n          cleaned[key] = filtered;\r\n        }\r\n      } else {\r\n        cleaned[key] = value;\r\n      }\r\n    });\r\n\r\n    return cleaned;\r\n  }\r\n}\r\n\r\n// \u521B\u5EFA\u5355\u4F8B\u5B9E\u4F8B\r\nexport const detailContentParser = new DetailContentParserService();\r\nexport default detailContentParser;", "// src/services/cache-manager.js - \u8BE6\u60C5\u7F13\u5B58\u7BA1\u7406\u670D\u52A1\uFF08Cloudflare Workers \u517C\u5BB9\u7248\u672C\uFF09\r\nimport { utils } from '../utils.js';\r\nimport { CONFIG } from '../constants.js';\r\n\r\nexport class CacheManagerService {\r\n  constructor() {\r\n    this.maxCacheSize = CONFIG.DETAIL_EXTRACTION.CACHE_MAX_SIZE; // \u4ECE\u914D\u7F6E\u5F15\u7528\r\n    this.defaultTTL = CONFIG.DETAIL_EXTRACTION.DEFAULT_CACHE_DURATION; // \u4ECE\u914D\u7F6E\u5F15\u7528\r\n    this.cleanupInterval = CONFIG.DETAIL_EXTRACTION.CACHE_CLEANUP_INTERVAL; // \u4ECE\u914D\u7F6E\u5F15\u7528\r\n    this.compressionEnabled = true;\r\n    this.cleanupTimer = null;\r\n    this.initialized = false;\r\n    \r\n    // \u5185\u5B58\u7F13\u5B58\uFF08\u7528\u4E8E Workers \u73AF\u5883\uFF09\r\n    this.memoryCache = new Map();\r\n    this.env = null; // \u5B58\u50A8 env \u5BF9\u8C61\u4EE5\u8BBF\u95EE KV\r\n  }\r\n\r\n  /**\r\n   * \u521D\u59CB\u5316\u7F13\u5B58\u7BA1\u7406\u5668\r\n   * @param {Object} env - Cloudflare Workers \u73AF\u5883\u5BF9\u8C61\r\n   */\r\n  async initialize(env) {\r\n    if (this.initialized) return;\r\n    \r\n    this.env = env;\r\n    this.initialized = true;\r\n    \r\n    // \u5728 Workers \u73AF\u5883\u4E2D\u4E0D\u542F\u52A8\u5B9A\u65F6\u5668\r\n    if (this.isWorkersEnvironment()) {\r\n      console.log('Cloudflare Workers \u73AF\u5883\uFF1A\u8DF3\u8FC7\u5B9A\u65F6\u5668\u521D\u59CB\u5316');\r\n    } else {\r\n      this.startCleanupTimer();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u68C0\u67E5\u662F\u5426\u4E3A Cloudflare Workers \u73AF\u5883\r\n   */\r\n  isWorkersEnvironment() {\r\n    return typeof caches !== 'undefined' && typeof globalThis.crypto !== 'undefined' && \r\n           typeof fetch === 'function' && typeof addEventListener === 'function';\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u8BE6\u60C5\u7F13\u5B58\r\n   * @param {string} url - \u641C\u7D22\u7ED3\u679CURL\r\n   * @returns {Object|null} \u7F13\u5B58\u7684\u8BE6\u60C5\u4FE1\u606F\r\n   */\r\n  async getDetailCache(url) {\r\n    if (!url) return null;\r\n\r\n    try {\r\n      const cacheKey = this.generateCacheKey(url);\r\n      const cached = await this.getCacheItem(cacheKey);\r\n      \r\n      if (!cached) return null;\r\n\r\n      // \u68C0\u67E5\u662F\u5426\u8FC7\u671F\r\n      if (Date.now() > cached.expiresAt) {\r\n        await this.deleteCacheItem(cacheKey);\r\n        return null;\r\n      }\r\n\r\n      // \u89E3\u538B\u7F29\u6570\u636E\uFF08\u5982\u679C\u9700\u8981\uFF09\r\n      const data = this.compressionEnabled ? \r\n        this.decompressData(cached.data) : cached.data;\r\n\r\n      console.log(`\u7F13\u5B58\u547D\u4E2D: ${url}`);\r\n      \r\n      // \u66F4\u65B0\u8BBF\u95EE\u65F6\u95F4\r\n      cached.lastAccessed = Date.now();\r\n      cached.accessCount = (cached.accessCount || 0) + 1;\r\n      await this.setCacheItem(cacheKey, cached);\r\n\r\n      return data;\r\n\r\n    } catch (error) {\r\n      console.error('\u83B7\u53D6\u8BE6\u60C5\u7F13\u5B58\u5931\u8D25:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u8BBE\u7F6E\u8BE6\u60C5\u7F13\u5B58\r\n   * @param {string} url - \u641C\u7D22\u7ED3\u679CURL\r\n   * @param {Object} detailData - \u8BE6\u60C5\u6570\u636E\r\n   * @param {number} ttl - \u751F\u5B58\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09\r\n   * @returns {boolean} \u662F\u5426\u8BBE\u7F6E\u6210\u529F\r\n   */\r\n  async setDetailCache(url, detailData, ttl = this.defaultTTL) {\r\n    if (!url || !detailData) return false;\r\n\r\n    try {\r\n      const cacheKey = this.generateCacheKey(url);\r\n      \r\n      // \u538B\u7F29\u6570\u636E\uFF08\u5982\u679C\u53EF\u7528\uFF09\r\n      const data = this.compressionEnabled ? \r\n        this.compressData(detailData) : detailData;\r\n\r\n      const cacheItem = {\r\n        key: cacheKey,\r\n        data: data,\r\n        url: url,\r\n        createdAt: Date.now(),\r\n        expiresAt: Date.now() + ttl,\r\n        lastAccessed: Date.now(),\r\n        accessCount: 0,\r\n        size: this.calculateDataSize(detailData)\r\n      };\r\n\r\n      await this.setCacheItem(cacheKey, cacheItem);\r\n      \r\n      // \u68C0\u67E5\u7F13\u5B58\u5927\u5C0F\u9650\u5236\r\n      await this.enforceSizeLimit();\r\n\r\n      console.log(`\u8BE6\u60C5\u7F13\u5B58\u5DF2\u4FDD\u5B58: ${url} (TTL: ${ttl}ms)`);\r\n      return true;\r\n\r\n    } catch (error) {\r\n      console.error('\u8BBE\u7F6E\u8BE6\u60C5\u7F13\u5B58\u5931\u8D25:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u5220\u9664\u8BE6\u60C5\u7F13\u5B58\r\n   * @param {string} url - \u641C\u7D22\u7ED3\u679CURL\r\n   * @returns {boolean} \u662F\u5426\u5220\u9664\u6210\u529F\r\n   */\r\n  async deleteDetailCache(url) {\r\n    if (!url) return false;\r\n\r\n    try {\r\n      const cacheKey = this.generateCacheKey(url);\r\n      await this.deleteCacheItem(cacheKey);\r\n      console.log(`\u8BE6\u60C5\u7F13\u5B58\u5DF2\u5220\u9664: ${url}`);\r\n      return true;\r\n\r\n    } catch (error) {\r\n      console.error('\u5220\u9664\u8BE6\u60C5\u7F13\u5B58\u5931\u8D25:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u6E05\u7406\u8FC7\u671F\u7F13\u5B58\r\n   * @returns {number} \u6E05\u7406\u7684\u6761\u76EE\u6570\r\n   */\r\n  async cleanupExpiredCache() {\r\n    try {\r\n      const allKeys = await this.getAllCacheKeys();\r\n      let cleanedCount = 0;\r\n      const now = Date.now();\r\n\r\n      for (const key of allKeys) {\r\n        const item = await this.getCacheItem(key);\r\n        if (item && now > item.expiresAt) {\r\n          await this.deleteCacheItem(key);\r\n          cleanedCount++;\r\n        }\r\n      }\r\n\r\n      if (cleanedCount > 0) {\r\n        console.log(`\u6E05\u7406\u4E86 ${cleanedCount} \u4E2A\u8FC7\u671F\u7F13\u5B58\u6761\u76EE`);\r\n      }\r\n\r\n      return cleanedCount;\r\n\r\n    } catch (error) {\r\n      console.error('\u6E05\u7406\u8FC7\u671F\u7F13\u5B58\u5931\u8D25:', error);\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u6E05\u7A7A\u6240\u6709\u7F13\u5B58\r\n   * @returns {boolean} \u662F\u5426\u6E05\u7A7A\u6210\u529F\r\n   */\r\n  async clearAllCache() {\r\n    try {\r\n      await this.clearStorage();\r\n      console.log('\u6240\u6709\u8BE6\u60C5\u7F13\u5B58\u5DF2\u6E05\u7A7A');\r\n      return true;\r\n\r\n    } catch (error) {\r\n      console.error('\u6E05\u7A7A\u7F13\u5B58\u5931\u8D25:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u7F13\u5B58\u7EDF\u8BA1\u4FE1\u606F\r\n   * @returns {Object} \u7F13\u5B58\u7EDF\u8BA1\r\n   */\r\n  async getCacheStats() {\r\n    try {\r\n      const allKeys = await this.getAllCacheKeys();\r\n      const stats = {\r\n        totalItems: 0,\r\n        totalSize: 0,\r\n        expiredItems: 0,\r\n        oldestItem: null,\r\n        newestItem: null,\r\n        mostAccessed: null,\r\n        averageSize: 0,\r\n        hitRate: 0\r\n      };\r\n\r\n      const now = Date.now();\r\n      let totalAccessCount = 0;\r\n      let totalHits = 0;\r\n\r\n      for (const key of allKeys) {\r\n        const item = await this.getCacheItem(key);\r\n        if (!item) continue;\r\n\r\n        stats.totalItems++;\r\n        stats.totalSize += item.size || 0;\r\n        totalAccessCount += item.accessCount || 0;\r\n        \r\n        if (item.accessCount && item.accessCount > 0) {\r\n          totalHits += item.accessCount;\r\n        }\r\n\r\n        if (now > item.expiresAt) {\r\n          stats.expiredItems++;\r\n        }\r\n\r\n        if (!stats.oldestItem || item.createdAt < stats.oldestItem.createdAt) {\r\n          stats.oldestItem = item;\r\n        }\r\n\r\n        if (!stats.newestItem || item.createdAt > stats.newestItem.createdAt) {\r\n          stats.newestItem = item;\r\n        }\r\n\r\n        if (!stats.mostAccessed || (item.accessCount || 0) > (stats.mostAccessed.accessCount || 0)) {\r\n          stats.mostAccessed = item;\r\n        }\r\n      }\r\n\r\n      stats.averageSize = stats.totalItems > 0 ? stats.totalSize / stats.totalItems : 0;\r\n      stats.hitRate = totalAccessCount > 0 ? (totalHits / totalAccessCount) * 100 : 0;\r\n\r\n      return stats;\r\n\r\n    } catch (error) {\r\n      console.error('\u83B7\u53D6\u7F13\u5B58\u7EDF\u8BA1\u5931\u8D25:', error);\r\n      return {\r\n        totalItems: 0,\r\n        totalSize: 0,\r\n        expiredItems: 0,\r\n        averageSize: 0,\r\n        hitRate: 0\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u751F\u6210\u7F13\u5B58\u952E\r\n   * @param {string} url - URL\r\n   * @returns {string} \u7F13\u5B58\u952E\r\n   */\r\n  generateCacheKey(url) {\r\n    // \u4F7F\u7528URL\u7684\u54C8\u5E0C\u4F5C\u4E3A\u7F13\u5B58\u952E\uFF0C\u907F\u514D\u7279\u6B8A\u5B57\u7B26\u95EE\u9898\r\n    return 'detail_' + utils.hashPassword(url).substring(0, 16);\r\n  }\r\n\r\n  /**\r\n   * \u4ECE\u5B58\u50A8\u4E2D\u83B7\u53D6\u7F13\u5B58\u9879\r\n   * @param {string} key - \u7F13\u5B58\u952E\r\n   * @returns {Object|null} \u7F13\u5B58\u9879\r\n   */\r\n  async getCacheItem(key) {\r\n    try {\r\n      // \u4F18\u5148\u4F7F\u7528 KV \u5B58\u50A8\uFF08Workers \u73AF\u5883\uFF09\r\n      if (this.env && this.env.CACHE_KV) {\r\n        const item = await this.env.CACHE_KV.get(key, 'json');\r\n        return item;\r\n      }\r\n      \r\n      // \u964D\u7EA7\u5230\u5185\u5B58\u7F13\u5B58\r\n      if (this.memoryCache.has(key)) {\r\n        return this.memoryCache.get(key);\r\n      }\r\n      \r\n      // \u6700\u540E\u5C1D\u8BD5 localStorage\uFF08\u6D4F\u89C8\u5668\u73AF\u5883\uFF09\r\n      if (typeof localStorage !== 'undefined') {\r\n        const item = localStorage.getItem(key);\r\n        return item ? JSON.parse(item) : null;\r\n      }\r\n      \r\n      return null;\r\n\r\n    } catch (error) {\r\n      console.warn('\u83B7\u53D6\u7F13\u5B58\u9879\u5931\u8D25\uFF0C\u5C1D\u8BD5\u5220\u9664\u635F\u574F\u7684\u6570\u636E:', error);\r\n      await this.deleteCacheItem(key);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u5411\u5B58\u50A8\u4E2D\u8BBE\u7F6E\u7F13\u5B58\u9879\r\n   * @param {string} key - \u7F13\u5B58\u952E\r\n   * @param {Object} item - \u7F13\u5B58\u9879\r\n   */\r\n  async setCacheItem(key, item) {\r\n    try {\r\n      // \u4F18\u5148\u4F7F\u7528 KV \u5B58\u50A8\uFF08Workers \u73AF\u5883\uFF09\r\n      if (this.env && this.env.CACHE_KV) {\r\n        const ttlSeconds = Math.ceil((item.expiresAt - Date.now()) / 1000);\r\n        if (ttlSeconds > 0) {\r\n          await this.env.CACHE_KV.put(key, JSON.stringify(item), {\r\n            expirationTtl: ttlSeconds\r\n          });\r\n        }\r\n        return;\r\n      }\r\n      \r\n      // \u964D\u7EA7\u5230\u5185\u5B58\u7F13\u5B58\r\n      this.memoryCache.set(key, item);\r\n      \r\n      // \u9650\u5236\u5185\u5B58\u7F13\u5B58\u5927\u5C0F\r\n      if (this.memoryCache.size > this.maxCacheSize) {\r\n        await this.cleanupLeastRecentlyUsed(10);\r\n      }\r\n      \r\n      // \u6700\u540E\u5C1D\u8BD5 localStorage\uFF08\u6D4F\u89C8\u5668\u73AF\u5883\uFF09\r\n      if (typeof localStorage !== 'undefined') {\r\n        localStorage.setItem(key, JSON.stringify(item));\r\n      }\r\n\r\n    } catch (error) {\r\n      console.warn('\u7F13\u5B58\u5B58\u50A8\u5931\u8D25\uFF0C\u5C1D\u8BD5\u6E05\u7406\u7A7A\u95F4:', error);\r\n      await this.cleanupLeastRecentlyUsed();\r\n      \r\n      // \u518D\u6B21\u5C1D\u8BD5\u5B58\u50A8\u5230\u5185\u5B58\r\n      try {\r\n        this.memoryCache.set(key, item);\r\n      } catch (retryError) {\r\n        console.error('\u91CD\u8BD5\u7F13\u5B58\u5B58\u50A8\u4ECD\u7136\u5931\u8D25:', retryError);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u4ECE\u5B58\u50A8\u4E2D\u5220\u9664\u7F13\u5B58\u9879\r\n   * @param {string} key - \u7F13\u5B58\u952E\r\n   */\r\n  async deleteCacheItem(key) {\r\n    try {\r\n      // KV \u5B58\u50A8\r\n      if (this.env && this.env.CACHE_KV) {\r\n        await this.env.CACHE_KV.delete(key);\r\n      }\r\n      \r\n      // \u5185\u5B58\u7F13\u5B58\r\n      this.memoryCache.delete(key);\r\n      \r\n      // localStorage\r\n      if (typeof localStorage !== 'undefined') {\r\n        localStorage.removeItem(key);\r\n      }\r\n    } catch (error) {\r\n      console.error('\u5220\u9664\u7F13\u5B58\u9879\u5931\u8D25:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u6240\u6709\u7F13\u5B58\u952E\r\n   * @returns {Array} \u7F13\u5B58\u952E\u6570\u7EC4\r\n   */\r\n  async getAllCacheKeys() {\r\n    try {\r\n      const keys = [];\r\n      \r\n      // KV \u5B58\u50A8\u7684\u952E\u5217\u8868\uFF08\u5982\u679C\u652F\u6301\uFF09\r\n      if (this.env && this.env.CACHE_KV && this.env.CACHE_KV.list) {\r\n        try {\r\n          const kvKeys = await this.env.CACHE_KV.list({ prefix: 'detail_' });\r\n          keys.push(...kvKeys.keys.map(k => k.name));\r\n        } catch (kvError) {\r\n          console.warn('\u83B7\u53D6 KV \u952E\u5217\u8868\u5931\u8D25:', kvError);\r\n        }\r\n      }\r\n      \r\n      // \u5185\u5B58\u7F13\u5B58\u952E\r\n      keys.push(...Array.from(this.memoryCache.keys()).filter(k => k.startsWith('detail_')));\r\n      \r\n      // localStorage \u952E\uFF08\u6D4F\u89C8\u5668\u73AF\u5883\uFF09\r\n      if (typeof localStorage !== 'undefined') {\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n          const key = localStorage.key(i);\r\n          if (key && key.startsWith('detail_') && !keys.includes(key)) {\r\n            keys.push(key);\r\n          }\r\n        }\r\n      }\r\n      \r\n      // \u53BB\u91CD\r\n      return [...new Set(keys)];\r\n\r\n    } catch (error) {\r\n      console.error('\u83B7\u53D6\u7F13\u5B58\u952E\u5931\u8D25:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u6E05\u7A7A\u5B58\u50A8\r\n   */\r\n  async clearStorage() {\r\n    try {\r\n      // \u6E05\u7A7A KV \u5B58\u50A8\uFF08\u6279\u91CF\u5220\u9664\uFF09\r\n      if (this.env && this.env.CACHE_KV) {\r\n        const keys = await this.getAllCacheKeys();\r\n        for (const key of keys) {\r\n          if (key.startsWith('detail_')) {\r\n            await this.env.CACHE_KV.delete(key);\r\n          }\r\n        }\r\n      }\r\n      \r\n      // \u6E05\u7A7A\u5185\u5B58\u7F13\u5B58\r\n      this.memoryCache.clear();\r\n      \r\n      // \u6E05\u7A7A localStorage\uFF08\u6D4F\u89C8\u5668\u73AF\u5883\uFF09\r\n      if (typeof localStorage !== 'undefined') {\r\n        const keys = [];\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n          const key = localStorage.key(i);\r\n          if (key && key.startsWith('detail_')) {\r\n            keys.push(key);\r\n          }\r\n        }\r\n        keys.forEach(key => localStorage.removeItem(key));\r\n      }\r\n    } catch (error) {\r\n      console.error('\u6E05\u7A7A\u5B58\u50A8\u5931\u8D25:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u5F3A\u5236\u6267\u884C\u7F13\u5B58\u5927\u5C0F\u9650\u5236\r\n   */\r\n  async enforceSizeLimit() {\r\n    try {\r\n      const allKeys = await this.getAllCacheKeys();\r\n      \r\n      if (allKeys.length <= this.maxCacheSize) {\r\n        return;\r\n      }\r\n\r\n      // \u83B7\u53D6\u6240\u6709\u7F13\u5B58\u9879\u5E76\u6309\u6700\u540E\u8BBF\u95EE\u65F6\u95F4\u6392\u5E8F\r\n      const items = [];\r\n      for (const key of allKeys) {\r\n        const item = await this.getCacheItem(key);\r\n        if (item) {\r\n          items.push(item);\r\n        }\r\n      }\r\n\r\n      items.sort((a, b) => (a.lastAccessed || 0) - (b.lastAccessed || 0));\r\n\r\n      // \u5220\u9664\u6700\u4E45\u672A\u8BBF\u95EE\u7684\u9879\u76EE\r\n      const itemsToDelete = items.slice(0, items.length - this.maxCacheSize);\r\n      for (const item of itemsToDelete) {\r\n        await this.deleteCacheItem(item.key);\r\n      }\r\n\r\n      console.log(`\u5F3A\u5236\u6E05\u7406\u4E86 ${itemsToDelete.length} \u4E2A\u7F13\u5B58\u9879\u4EE5\u6EE1\u8DB3\u5927\u5C0F\u9650\u5236`);\r\n\r\n    } catch (error) {\r\n      console.error('\u5F3A\u5236\u6267\u884C\u5927\u5C0F\u9650\u5236\u5931\u8D25:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u6E05\u7406\u6700\u8FD1\u6700\u5C11\u4F7F\u7528\u7684\u7F13\u5B58\u9879\r\n   * @param {number} count - \u8981\u6E05\u7406\u7684\u6570\u91CF\r\n   */\r\n  async cleanupLeastRecentlyUsed(count = 10) {\r\n    try {\r\n      const allKeys = await this.getAllCacheKeys();\r\n      const items = [];\r\n\r\n      for (const key of allKeys) {\r\n        const item = await this.getCacheItem(key);\r\n        if (item) {\r\n          items.push(item);\r\n        }\r\n      }\r\n\r\n      // \u6309\u6700\u540E\u8BBF\u95EE\u65F6\u95F4\u6392\u5E8F\uFF0C\u6E05\u7406\u6700\u4E45\u672A\u8BBF\u95EE\u7684\r\n      items.sort((a, b) => (a.lastAccessed || 0) - (b.lastAccessed || 0));\r\n      \r\n      const itemsToDelete = items.slice(0, Math.min(count, items.length));\r\n      for (const item of itemsToDelete) {\r\n        await this.deleteCacheItem(item.key);\r\n      }\r\n\r\n      console.log(`\u6E05\u7406\u4E86 ${itemsToDelete.length} \u4E2A\u6700\u8FD1\u6700\u5C11\u4F7F\u7528\u7684\u7F13\u5B58\u9879`);\r\n\r\n    } catch (error) {\r\n      console.error('\u6E05\u7406LRU\u7F13\u5B58\u5931\u8D25:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u538B\u7F29\u6570\u636E\r\n   * @param {Object} data - \u8981\u538B\u7F29\u7684\u6570\u636E\r\n   * @returns {string} \u538B\u7F29\u540E\u7684\u6570\u636E\r\n   */\r\n  compressData(data) {\r\n    try {\r\n      // \u7B80\u5355\u7684JSON\u5B57\u7B26\u4E32\u538B\u7F29\uFF08\u79FB\u9664\u4E0D\u5FC5\u8981\u7684\u7A7A\u683C\uFF09\r\n      return JSON.stringify(data);\r\n    } catch (error) {\r\n      console.error('\u6570\u636E\u538B\u7F29\u5931\u8D25:', error);\r\n      return data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u89E3\u538B\u7F29\u6570\u636E\r\n   * @param {string} compressedData - \u538B\u7F29\u7684\u6570\u636E\r\n   * @returns {Object} \u89E3\u538B\u7F29\u540E\u7684\u6570\u636E\r\n   */\r\n  decompressData(compressedData) {\r\n    try {\r\n      if (typeof compressedData === 'string') {\r\n        return JSON.parse(compressedData);\r\n      }\r\n      return compressedData;\r\n    } catch (error) {\r\n      console.error('\u6570\u636E\u89E3\u538B\u7F29\u5931\u8D25:', error);\r\n      return compressedData;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u8BA1\u7B97\u6570\u636E\u5927\u5C0F\r\n   * @param {Object} data - \u6570\u636E\u5BF9\u8C61\r\n   * @returns {number} \u5927\u5C0F\uFF08\u5B57\u8282\uFF09\r\n   */\r\n  calculateDataSize(data) {\r\n    try {\r\n      return JSON.stringify(data).length * 2; // \u7C97\u7565\u4F30\u7B97UTF-16\u5B57\u7B26\u5927\u5C0F\r\n    } catch (error) {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u542F\u52A8\u6E05\u7406\u5B9A\u65F6\u5668\uFF08\u4EC5\u5728\u652F\u6301\u7684\u73AF\u5883\u4E2D\uFF09\r\n   */\r\n  startCleanupTimer() {\r\n    if (this.isWorkersEnvironment()) {\r\n      console.log('Cloudflare Workers \u73AF\u5883\uFF1A\u8DF3\u8FC7\u5B9A\u65F6\u5668\u542F\u52A8');\r\n      return;\r\n    }\r\n\r\n    if (typeof setInterval === 'undefined') {\r\n      console.log('\u5B9A\u65F6\u5668\u5728\u5F53\u524D\u73AF\u5883\u4E2D\u4E0D\u53EF\u7528\uFF0C\u8DF3\u8FC7\u81EA\u52A8\u6E05\u7406');\r\n      return;\r\n    }\r\n\r\n    if (this.cleanupTimer) {\r\n      clearInterval(this.cleanupTimer);\r\n    }\r\n\r\n    this.cleanupTimer = setInterval(async () => {\r\n      await this.cleanupExpiredCache();\r\n    }, this.cleanupInterval);\r\n\r\n    console.log('\u7F13\u5B58\u6E05\u7406\u5B9A\u65F6\u5668\u5DF2\u542F\u52A8');\r\n  }\r\n\r\n  /**\r\n   * \u505C\u6B62\u6E05\u7406\u5B9A\u65F6\u5668\r\n   */\r\n  stopCleanupTimer() {\r\n    if (this.cleanupTimer) {\r\n      clearInterval(this.cleanupTimer);\r\n      this.cleanupTimer = null;\r\n      console.log('\u7F13\u5B58\u6E05\u7406\u5B9A\u65F6\u5668\u5DF2\u505C\u6B62');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u9884\u70ED\u7F13\u5B58\uFF08\u9884\u52A0\u8F7D\u5E38\u7528\u5185\u5BB9\uFF09\r\n   * @param {Array} urls - \u8981\u9884\u70ED\u7684URL\u5217\u8868\r\n   */\r\n  async warmupCache(urls = []) {\r\n    console.log(`\u5F00\u59CB\u9884\u70ED ${urls.length} \u4E2AURL\u7684\u7F13\u5B58`);\r\n    \r\n    for (const url of urls) {\r\n      try {\r\n        const cached = await this.getDetailCache(url);\r\n        if (cached) {\r\n          console.log(`\u7F13\u5B58\u9884\u70ED\u547D\u4E2D: ${url}`);\r\n        }\r\n      } catch (error) {\r\n        console.warn(`\u7F13\u5B58\u9884\u70ED\u5931\u8D25 [${url}]:`, error);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u5BFC\u51FA\u7F13\u5B58\u6570\u636E\uFF08\u7528\u4E8E\u5907\u4EFD\uFF09\r\n   * @returns {Object} \u7F13\u5B58\u6570\u636E\r\n   */\r\n  async exportCacheData() {\r\n    try {\r\n      const allKeys = await this.getAllCacheKeys();\r\n      const exportData = {\r\n        version: '1.0',\r\n        exportTime: Date.now(),\r\n        totalItems: allKeys.length,\r\n        items: []\r\n      };\r\n\r\n      for (const key of allKeys) {\r\n        const item = await this.getCacheItem(key);\r\n        if (item) {\r\n          exportData.items.push({\r\n            key: item.key,\r\n            url: item.url,\r\n            data: item.data,\r\n            createdAt: item.createdAt,\r\n            expiresAt: item.expiresAt\r\n          });\r\n        }\r\n      }\r\n\r\n      console.log(`\u5BFC\u51FA\u4E86 ${exportData.items.length} \u4E2A\u7F13\u5B58\u9879`);\r\n      return exportData;\r\n\r\n    } catch (error) {\r\n      console.error('\u5BFC\u51FA\u7F13\u5B58\u6570\u636E\u5931\u8D25:', error);\r\n      return { version: '1.0', exportTime: Date.now(), totalItems: 0, items: [] };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u5BFC\u5165\u7F13\u5B58\u6570\u636E\uFF08\u7528\u4E8E\u6062\u590D\uFF09\r\n   * @param {Object} importData - \u8981\u5BFC\u5165\u7684\u7F13\u5B58\u6570\u636E\r\n   * @returns {boolean} \u662F\u5426\u5BFC\u5165\u6210\u529F\r\n   */\r\n  async importCacheData(importData) {\r\n    if (!importData || !Array.isArray(importData.items)) {\r\n      console.error('\u65E0\u6548\u7684\u5BFC\u5165\u6570\u636E\u683C\u5F0F');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      let importedCount = 0;\r\n      const now = Date.now();\r\n\r\n      for (const item of importData.items) {\r\n        // \u68C0\u67E5\u6570\u636E\u5B8C\u6574\u6027\r\n        if (!item.key || !item.url || !item.data) {\r\n          console.warn('\u8DF3\u8FC7\u65E0\u6548\u7684\u7F13\u5B58\u9879:', item.key);\r\n          continue;\r\n        }\r\n\r\n        // \u68C0\u67E5\u662F\u5426\u5DF2\u8FC7\u671F\r\n        if (item.expiresAt && now > item.expiresAt) {\r\n          console.warn('\u8DF3\u8FC7\u5DF2\u8FC7\u671F\u7684\u7F13\u5B58\u9879:', item.url);\r\n          continue;\r\n        }\r\n\r\n        // \u91CD\u5EFA\u7F13\u5B58\u9879\r\n        const cacheItem = {\r\n          key: item.key,\r\n          data: item.data,\r\n          url: item.url,\r\n          createdAt: item.createdAt || now,\r\n          expiresAt: item.expiresAt || (now + this.defaultTTL),\r\n          lastAccessed: now,\r\n          accessCount: 0,\r\n          size: this.calculateDataSize(item.data)\r\n        };\r\n\r\n        await this.setCacheItem(item.key, cacheItem);\r\n        importedCount++;\r\n      }\r\n\r\n      console.log(`\u6210\u529F\u5BFC\u5165\u4E86 ${importedCount}/${importData.items.length} \u4E2A\u7F13\u5B58\u9879`);\r\n      return true;\r\n\r\n    } catch (error) {\r\n      console.error('\u5BFC\u5165\u7F13\u5B58\u6570\u636E\u5931\u8D25:', error);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n// \u521B\u5EFA\u5355\u4F8B\u5B9E\u4F8B\uFF08\u4E0D\u5728\u6784\u9020\u65F6\u521D\u59CB\u5316\uFF09\r\nexport const cacheManager = new CacheManagerService();\r\n\r\n// \u5BFC\u51FA\u521D\u59CB\u5316\u51FD\u6570\r\nexport const initializeCacheManager = async (env) => {\r\n  await cacheManager.initialize(env);\r\n  return cacheManager;\r\n};\r\n\r\nexport default cacheManager;", "// src/services/detail-extractor.js - \u6839\u636E7\u4E2A\u641C\u7D22\u6E90\u4F18\u5316\u7684\u8BE6\u60C5\u63D0\u53D6\u4E3B\u670D\u52A1\r\nimport { utils } from '../utils.js';\r\nimport { searchLinkExtractor } from './search-link-extractor.js';\r\nimport { detailContentParser } from './detail-content-parser.js';\r\nimport { extractionValidator } from './extraction-validator.js';\r\nimport { cacheManager } from './cache-manager.js';\r\nimport { CONFIG, SOURCE_SPECIFIC_CONFIG, SPAM_DOMAINS } from '../constants.js';\r\n\r\nexport class DetailExtractorService {\r\n  constructor() {\r\n    this.maxConcurrentExtractions = CONFIG.DETAIL_EXTRACTION.MAX_CONCURRENT_EXTRACTIONS;\r\n    this.defaultTimeout = CONFIG.DETAIL_EXTRACTION.DEFAULT_TIMEOUT;\r\n    this.retryAttempts = CONFIG.DETAIL_EXTRACTION.MAX_RETRY_ATTEMPTS;\r\n    this.retryDelay = CONFIG.DETAIL_EXTRACTION.RETRY_DELAY;\r\n    this.userAgent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36';\r\n  }\r\n\r\n/**\r\n * \u63D0\u53D6\u5355\u4E2A\u641C\u7D22\u7ED3\u679C\u7684\u8BE6\u60C5\u4FE1\u606F - \u6839\u636E\u5B9E\u9645\u641C\u7D22\u6570\u636E\u4F18\u5316\u7248\u672C\r\n * @param {Object} searchResult - \u641C\u7D22\u7ED3\u679C\u5BF9\u8C61\r\n * @param {Object} options - \u63D0\u53D6\u9009\u9879\r\n * @returns {Object} \u8BE6\u60C5\u4FE1\u606F\u5BF9\u8C61\r\n */\r\nasync extractSingleDetail(searchResult, options = {}) {\r\n  const { timeout = this.defaultTimeout, enableRetry = true } = options;\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    console.log(`=== \u5F00\u59CB\u63D0\u53D6\u8BE6\u60C5 (\u6839\u636E\u5B9E\u9645\u6570\u636E\u4F18\u5316) ===`);\r\n    console.log(`\u6807\u9898: ${searchResult.title}`);\r\n    console.log(`\u641C\u7D22URL: ${searchResult.url}`);\r\n    console.log(`\u539F\u59CBID: ${searchResult.id}`); // \u6DFB\u52A0ID\u65E5\u5FD7\r\n\r\n    // \u68C0\u6D4B\u641C\u7D22\u6E90\u7C7B\u578B - \u4F7F\u7528\u4F18\u5316\u7684\u68C0\u6D4B\u903B\u8F91\r\n    const sourceType = extractionValidator.detectSourceType(searchResult.url, searchResult.source);\r\n    const searchDomain = extractionValidator.extractDomain(searchResult.url);\r\n    \r\n    console.log(`\u68C0\u6D4B\u5230\u641C\u7D22\u6E90\u7C7B\u578B: ${sourceType}`);\r\n    console.log(`\u641C\u7D22\u57DF\u540D: ${searchDomain}`);\r\n    console.log(`\u6E90\u914D\u7F6E\u5B58\u5728: ${!!SOURCE_SPECIFIC_CONFIG[sourceType]}`);\r\n\r\n    // \u7B2C\u4E00\u6B65\uFF1A\u786E\u5B9A\u771F\u6B63\u7684\u8BE6\u60C5\u9875\u9762URL\r\n    const detailPageUrl = await this.findActualDetailPageUrl(searchResult, sourceType, searchDomain, timeout);\r\n    console.log(`\u786E\u5B9A\u7684\u8BE6\u60C5\u9875\u9762URL: ${detailPageUrl}`);\r\n\r\n    // \u9A8C\u8BC1\u8BE6\u60C5\u9875\u9762URL\u7684\u6709\u6548\u6027\r\n    if (!extractionValidator.validateDetailPageUrl(detailPageUrl, searchResult.url, sourceType)) {\r\n      throw new Error('\u672A\u627E\u5230\u6709\u6548\u7684\u8BE6\u60C5\u9875\u9762URL');\r\n    }\r\n\r\n    // \u7B2C\u4E8C\u6B65\uFF1A\u83B7\u53D6\u8BE6\u60C5\u9875\u9762\u5185\u5BB9\r\n    const pageContent = await this.fetchPageContent(detailPageUrl, timeout);\r\n    \r\n    if (!pageContent || pageContent.trim().length < 100) {\r\n      throw new Error('\u8BE6\u60C5\u9875\u9762\u5185\u5BB9\u4E3A\u7A7A\u6216\u8FC7\u77ED');\r\n    }\r\n\r\n    console.log(`\u8BE6\u60C5\u9875\u9762\u5185\u5BB9\u957F\u5EA6: ${pageContent.length}`);\r\n\r\n    // \u7B2C\u4E09\u6B65\uFF1A\u89E3\u6790\u8BE6\u60C5\u4FE1\u606F\r\n    const detailInfo = await detailContentParser.parseDetailPage(pageContent, {\r\n      sourceType,\r\n      originalUrl: detailPageUrl,\r\n      originalTitle: searchResult.title\r\n    });\r\n\r\n    const extractionTime = Date.now() - startTime;\r\n\r\n    // \u9A8C\u8BC1\u548C\u589E\u5F3A\u6570\u636E\r\n    const validatedDetails = this.validateAndEnhanceDetails(\r\n      detailInfo, \r\n      searchResult, \r\n      detailPageUrl, \r\n      searchDomain,\r\n      sourceType\r\n    );\r\n\r\n    console.log(`\u8BE6\u60C5\u63D0\u53D6\u6210\u529F: ${searchResult.title} (${extractionTime}ms)`);\r\n\r\n    // \u5173\u952E\u4FEE\u590D\uFF1A\u786E\u4FDD\u8FD4\u56DE\u5305\u542B\u539F\u59CBID\u7684\u5B8C\u6574\u6570\u636E\r\n    return {\r\n      // \u4FDD\u7559\u539F\u59CB\u641C\u7D22\u7ED3\u679C\u7684\u5173\u952E\u6807\u8BC6\u4FE1\u606F\r\n      id: searchResult.id,\r\n      originalId: searchResult.id,\r\n      originalUrl: searchResult.url,\r\n      originalTitle: searchResult.title,\r\n      originalSource: searchResult.source,\r\n      \r\n      // \u9A8C\u8BC1\u540E\u7684\u8BE6\u60C5\u6570\u636E\r\n      ...validatedDetails,\r\n      \r\n      // \u63D0\u53D6\u72B6\u6001\u548C\u5143\u6570\u636E\r\n      extractionStatus: 'success',\r\n      extractionTime,\r\n      sourceType,\r\n      extractedAt: Date.now(),\r\n      detailPageUrl,\r\n      searchUrl: searchResult.url\r\n    };\r\n\r\n  } catch (error) {\r\n    const extractionTime = Date.now() - startTime;\r\n    console.error(`\u8BE6\u60C5\u63D0\u53D6\u5931\u8D25 [${searchResult.title}]:`, error);\r\n\r\n    // \u91CD\u8BD5\u673A\u5236\r\n    if (enableRetry && this.retryAttempts > 0) {\r\n      console.log(`\u5C1D\u8BD5\u91CD\u8BD5\u63D0\u53D6: ${searchResult.title}`);\r\n      await utils.delay(this.retryDelay);\r\n      \r\n      return await this.extractSingleDetail(searchResult, {\r\n        ...options,\r\n        enableRetry: false\r\n      });\r\n    }\r\n\r\n    // \u9519\u8BEF\u60C5\u51B5\u4E5F\u8981\u4FDD\u7559\u539F\u59CBID\r\n    return {\r\n      // \u4FDD\u7559\u539F\u59CB\u6807\u8BC6\u4FE1\u606F\r\n      id: searchResult.id,\r\n      originalId: searchResult.id,\r\n      originalUrl: searchResult.url,\r\n      originalTitle: searchResult.title,\r\n      originalSource: searchResult.source,\r\n      \r\n      // \u9519\u8BEF\u72B6\u6001\r\n      extractionStatus: 'error',\r\n      extractionError: error.message,\r\n      extractionTime,\r\n      extractedAt: Date.now(),\r\n      detailPageUrl: searchResult.url,\r\n      searchUrl: searchResult.url\r\n    };\r\n  }\r\n}\r\n\r\n  /**\r\n   * \u67E5\u627E\u771F\u6B63\u7684\u8BE6\u60C5\u9875\u9762URL - \u6839\u636E\u5B9E\u9645\u6570\u636E\u4F18\u5316\u7248\u672C\r\n   * @param {Object} searchResult - \u641C\u7D22\u7ED3\u679C\r\n   * @param {string} sourceType - \u6E90\u7C7B\u578B\r\n   * @param {string} searchDomain - \u641C\u7D22\u57DF\u540D\r\n   * @param {number} timeout - \u8D85\u65F6\u65F6\u95F4\r\n   * @returns {string} \u8BE6\u60C5\u9875\u9762URL\r\n   */\r\n  async findActualDetailPageUrl(searchResult, sourceType, searchDomain, timeout) {\r\n    try {\r\n      console.log(`=== \u67E5\u627E\u771F\u5B9E\u8BE6\u60C5\u9875\u9762URL (\u6839\u636E\u5B9E\u9645\u6570\u636E\u4F18\u5316) ===`);\r\n      console.log(`\u641C\u7D22\u7ED3\u679CURL: ${searchResult.url}`);\r\n      console.log(`\u6E90\u7C7B\u578B: ${sourceType}`);\r\n      console.log(`\u641C\u7D22\u57DF\u540D: ${searchDomain}`);\r\n      \r\n      // \u68C0\u67E5URL\u662F\u5426\u5DF2\u7ECF\u662F\u8BE6\u60C5\u9875\r\n      const isAlreadyDetail = extractionValidator.isDetailPageUrl(searchResult.url, sourceType, searchDomain);\r\n      console.log(`\u662F\u5426\u5DF2\u7ECF\u662F\u8BE6\u60C5\u9875: ${isAlreadyDetail}`);\r\n      \r\n      if (isAlreadyDetail) {\r\n        console.log(`\u76F4\u63A5\u4F7F\u7528\u641C\u7D22URL\u4F5C\u4E3A\u8BE6\u60C5\u9875: ${searchResult.url}`);\r\n        return searchResult.url;\r\n      }\r\n\r\n      // \u83B7\u53D6\u641C\u7D22\u9875\u9762\u5185\u5BB9\uFF0C\u67E5\u627E\u8BE6\u60C5\u94FE\u63A5\r\n      console.log(`\u5F00\u59CB\u83B7\u53D6\u641C\u7D22\u9875\u9762\u5185\u5BB9\u4EE5\u67E5\u627E\u8BE6\u60C5\u94FE\u63A5...`);\r\n      const searchPageContent = await this.fetchPageContent(searchResult.url, timeout);\r\n      \r\n      console.log(`\u641C\u7D22\u9875\u9762\u5185\u5BB9\u957F\u5EA6: ${searchPageContent?.length || 0}`);\r\n      \r\n      if (!searchPageContent) {\r\n        throw new Error('\u65E0\u6CD5\u83B7\u53D6\u641C\u7D22\u9875\u9762\u5185\u5BB9');\r\n      }\r\n\r\n      // \u4F7F\u7528 searchLinkExtractor \u4ECE\u641C\u7D22\u9875\u9762\u63D0\u53D6\u8BE6\u60C5\u94FE\u63A5\r\n      console.log(`\u5F00\u59CB\u4ECE\u641C\u7D22\u9875\u9762\u63D0\u53D6\u8BE6\u60C5\u94FE\u63A5...`);\r\n      const detailLinks = await searchLinkExtractor.extractDetailLinksFromSearchPage(searchPageContent, {\r\n        sourceType,\r\n        baseUrl: searchResult.url,\r\n        searchKeyword: this.extractSearchKeyword(searchResult)\r\n      });\r\n\r\n      console.log(`\u63D0\u53D6\u5230\u7684\u8BE6\u60C5\u94FE\u63A5\u6570\u91CF: ${detailLinks?.length || 0}`);\r\n      \r\n      if (detailLinks && detailLinks.length > 0) {\r\n        // \u8FC7\u6EE4\u548C\u9A8C\u8BC1\u8BE6\u60C5\u94FE\u63A5\r\n        const validLinks = this.filterValidDetailLinks(detailLinks, searchDomain, searchResult.url, sourceType);\r\n        \r\n        if (validLinks.length > 0) {\r\n          // \u6839\u636E\u5339\u914D\u5206\u6570\u548C\u76F8\u5173\u6027\u9009\u62E9\u6700\u4F73\u94FE\u63A5\r\n          const bestMatch = this.selectBestDetailLink(validLinks, searchResult, sourceType);\r\n          \r\n          console.log(`\u9009\u62E9\u6700\u4F73\u5339\u914D: ${bestMatch.url}`);\r\n          console.log(`\u5339\u914D\u5206\u6570: ${bestMatch.score || bestMatch.enhancedScore}`);\r\n          console.log(`\u5339\u914D\u6807\u9898: ${bestMatch.title}`);\r\n          \r\n          return bestMatch.url;\r\n        }\r\n      }\r\n\r\n      console.warn('\u672A\u627E\u5230\u6709\u6548\u7684\u8BE6\u60C5\u94FE\u63A5\uFF0C\u4F7F\u7528\u539F\u59CBURL');\r\n      return searchResult.url;\r\n\r\n    } catch (error) {\r\n      console.error(`\u67E5\u627E\u8BE6\u60C5\u9875URL\u5931\u8D25: ${error.message}`);\r\n      return searchResult.url;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u8FC7\u6EE4\u6709\u6548\u7684\u8BE6\u60C5\u94FE\u63A5 - \u6839\u636E\u5B9E\u9645\u6570\u636E\u4E25\u683C\u8FC7\u6EE4\r\n   */\r\n  filterValidDetailLinks(detailLinks, searchDomain, searchUrl, sourceType) {\r\n    console.log(`=== \u8FC7\u6EE4\u6709\u6548\u8BE6\u60C5\u94FE\u63A5 ===`);\r\n    console.log(`\u539F\u59CB\u94FE\u63A5\u6570\u91CF: ${detailLinks.length}`);\r\n    console.log(`\u641C\u7D22\u57DF\u540D: ${searchDomain}`);\r\n    console.log(`\u641C\u7D22URL: ${searchUrl}`);\r\n\r\n    const validLinks = detailLinks.filter(link => {\r\n      // 1. \u57FA\u672C\u9A8C\u8BC1\r\n      if (!link || !link.url || typeof link.url !== 'string') {\r\n        console.log(`\u2310 \u8DF3\u8FC7\u65E0\u6548\u94FE\u63A5: ${link?.url || 'undefined'}`);\r\n        return false;\r\n      }\r\n\r\n      // 2. \u57DF\u540D\u4E00\u81F4\u6027\u68C0\u67E5\uFF08\u652F\u6301\u5B50\u57DF\u540D\uFF09\r\n      if (link.url.startsWith('http')) {\r\n        const linkDomain = extractionValidator.extractDomain(link.url);\r\n        if (!extractionValidator.isDomainOrSubdomainMatch(linkDomain, searchDomain)) {\r\n          console.log(`\u2310 \u8DF3\u8FC7\u4E0D\u540C\u57DF\u540D\u94FE\u63A5: ${link.url} (${linkDomain} != ${searchDomain})`);\r\n          return false;\r\n        }\r\n      }\r\n\r\n      // 3. \u786E\u4FDD\u4E0D\u662F\u641C\u7D22\u9875\u9762\u672C\u8EAB\r\n      if (extractionValidator.normalizeUrl(link.url) === extractionValidator.normalizeUrl(searchUrl)) {\r\n        console.log(`\u2310 \u8DF3\u8FC7\u76F8\u540C\u7684\u641C\u7D22URL: ${link.url}`);\r\n        return false;\r\n      }\r\n\r\n      // 4. \u68C0\u67E5\u662F\u5426\u4E3A\u8BE6\u60C5\u9875\u9762URL\r\n      if (!extractionValidator.isDetailPageUrl(link.url, sourceType, searchDomain)) {\r\n        console.log(`\u2310 \u8DF3\u8FC7\u975E\u8BE6\u60C5\u9875\u9762: ${link.url}`);\r\n        return false;\r\n      }\r\n\r\n      // 5. \u6392\u9664\u660E\u663E\u7684\u641C\u7D22\u9875\u9762\u7279\u5F81\r\n      if (extractionValidator.containsSearchIndicators(link.url)) {\r\n        console.log(`\u2310 \u8DF3\u8FC7\u5305\u542B\u641C\u7D22\u6307\u793A\u5668\u7684\u94FE\u63A5: ${link.url}`);\r\n        return false;\r\n      }\r\n\r\n      // 6. \u68C0\u67E5\u5783\u573E\u57DF\u540D\uFF08\u6839\u636E\u5B9E\u9645\u9047\u5230\u7684\u60C5\u51B5\uFF09\r\n      const linkDomain = extractionValidator.extractDomain(link.url);\r\n      if (SPAM_DOMAINS.some(spamDomain => linkDomain.includes(spamDomain))) {\r\n        console.log(`\u2310 \u8DF3\u8FC7\u5783\u573E\u57DF\u540D: ${linkDomain}`);\r\n        return false;\r\n      }\r\n\r\n      console.log(`\u2705 \u901A\u8FC7\u9A8C\u8BC1\u7684\u8BE6\u60C5\u94FE\u63A5: ${link.url}`);\r\n      return true;\r\n    });\r\n\r\n    console.log(`\u8FC7\u6EE4\u540E\u6709\u6548\u94FE\u63A5\u6570\u91CF: ${validLinks.length}`);\r\n    return validLinks;\r\n  }\r\n\r\n  /**\r\n   * \u9009\u62E9\u6700\u4F73\u8BE6\u60C5\u94FE\u63A5 - \u6839\u636E\u5B9E\u9645\u6570\u636E\u4F18\u5316\u7248\u672C\r\n   */\r\n  selectBestDetailLink(detailLinks, searchResult, sourceType) {\r\n    console.log(`=== \u9009\u62E9\u6700\u4F73\u8BE6\u60C5\u94FE\u63A5 ===`);\r\n    \r\n    const searchKeyword = this.extractSearchKeyword(searchResult);\r\n    console.log(`\u641C\u7D22\u5173\u952E\u8BCD: ${searchKeyword}`);\r\n    \r\n    const scoredLinks = detailLinks.map(link => {\r\n      const enhancedScore = extractionValidator.calculateEnhancedMatchScore(link, searchResult, searchKeyword);\r\n      console.log(`\u94FE\u63A5\u8BC4\u5206: ${link.url} - ${enhancedScore}\u5206`);\r\n      console.log(`  \u6807\u9898: ${link.title}`);\r\n      console.log(`  \u756A\u53F7: ${link.code}`);\r\n      console.log(`  \u63D0\u53D6\u6E90: ${link.extractedFrom}`);\r\n      \r\n      return {\r\n        ...link,\r\n        enhancedScore\r\n      };\r\n    });\r\n    \r\n    // \u6309\u5206\u6570\u6392\u5E8F\uFF0C\u4F18\u5148\u9009\u62E9\u9AD8\u5206\u94FE\u63A5\r\n    scoredLinks.sort((a, b) => (b.enhancedScore || 0) - (a.enhancedScore || 0));\r\n    \r\n    const bestLink = scoredLinks[0];\r\n    console.log(`\u6700\u4F73\u5339\u914D\u9009\u62E9: ${bestLink.url} (${bestLink.enhancedScore}\u5206)`);\r\n    \r\n    return bestLink;\r\n  }\r\n\r\n  /**\r\n   * \u9A8C\u8BC1\u548C\u589E\u5F3A\u8BE6\u60C5\u6570\u636E - \u6839\u636E\u5B9E\u9645\u6570\u636E\u4F18\u5316\u7248\u672C\r\n   */\r\n  validateAndEnhanceDetails(detailInfo, searchResult, detailPageUrl, searchDomain, sourceType) {\r\n    console.log(`=== \u9A8C\u8BC1\u548C\u589E\u5F3A\u8BE6\u60C5\u6570\u636E ===`);\r\n    console.log(`\u6E90\u7C7B\u578B: ${sourceType}`);\r\n    console.log(`\u8BE6\u60C5\u9875URL: ${detailPageUrl}`);\r\n    console.log(`\u641C\u7D22\u57DF\u540D: ${searchDomain}`);\r\n\r\n    const validated = {\r\n      // \u57FA\u672C\u4FE1\u606F\r\n      title: detailInfo.title || searchResult.title || '\u672A\u77E5\u6807\u9898',\r\n      originalTitle: detailInfo.originalTitle || '',\r\n      code: detailInfo.code || \r\n            extractionValidator.extractCodeFromUrl(detailPageUrl) || \r\n            extractionValidator.extractCodeFromTitle(searchResult.title) || '',\r\n      \r\n      // \u5A92\u4F53\u4FE1\u606F\r\n      coverImage: extractionValidator.validateImageUrl(detailInfo.coverImage) ? detailInfo.coverImage : '',\r\n      screenshots: (detailInfo.screenshots || []).filter(url => extractionValidator.validateImageUrl(url)),\r\n      \r\n      // \u6F14\u5458\u4FE1\u606F\r\n      actresses: detailInfo.actresses || [],\r\n      director: detailInfo.director || '',\r\n      studio: detailInfo.studio || '',\r\n      label: detailInfo.label || '',\r\n      series: detailInfo.series || '',\r\n      \r\n      // \u53D1\u5E03\u4FE1\u606F\r\n      releaseDate: extractionValidator.validateDate(detailInfo.releaseDate) || '',\r\n      duration: detailInfo.duration || '',\r\n      \r\n      // \u6280\u672F\u4FE1\u606F\r\n      quality: detailInfo.quality || '',\r\n      fileSize: detailInfo.fileSize || '',\r\n      resolution: detailInfo.resolution || '',\r\n      \r\n      // \u4E0B\u8F7D\u4FE1\u606F - \u4E25\u683C\u8FC7\u6EE4\uFF0C\u786E\u4FDD\u57DF\u540D\u4E00\u81F4\r\n      downloadLinks: this.validateDownloadLinks(detailInfo.downloadLinks || [], searchDomain, sourceType),\r\n      magnetLinks: extractionValidator.validateMagnetLinks(detailInfo.magnetLinks || []),\r\n      \r\n      // \u5176\u4ED6\u4FE1\u606F\r\n      description: detailInfo.description || '',\r\n      tags: detailInfo.tags || [],\r\n      rating: extractionValidator.validateRating(detailInfo.rating),\r\n      \r\n      // \u5143\u6570\u636E\r\n      detailUrl: detailPageUrl,\r\n      searchUrl: searchResult.url,\r\n      sourceType: detailInfo.sourceType || sourceType\r\n    };\r\n\r\n    console.log(`\u9A8C\u8BC1\u5B8C\u6210\uFF0C\u4FDD\u7559\u5B57\u6BB5\u6570\u91CF: ${Object.keys(validated).filter(k => validated[k] && (typeof validated[k] !== 'object' || validated[k].length > 0)).length}`);\r\n    return validated;\r\n  }\r\n\r\n  /**\r\n   * \u9A8C\u8BC1\u4E0B\u8F7D\u94FE\u63A5 - \u6839\u636E\u5B9E\u9645\u641C\u7D22\u6E90\u4E25\u683C\u8FC7\u6EE4\r\n   */\r\n  validateDownloadLinks(downloadLinks, expectedDomain, sourceType) {\r\n    if (!Array.isArray(downloadLinks)) return [];\r\n\r\n    console.log(`=== \u9A8C\u8BC1\u4E0B\u8F7D\u94FE\u63A5 ===`);\r\n    console.log(`\u539F\u59CB\u4E0B\u8F7D\u94FE\u63A5\u6570\u91CF: ${downloadLinks.length}`);\r\n    console.log(`\u671F\u671B\u57DF\u540D: ${expectedDomain}`);\r\n    console.log(`\u6E90\u7C7B\u578B: ${sourceType}`);\r\n\r\n    const validLinks = downloadLinks.filter(link => {\r\n      if (!link || !link.url) return false;\r\n\r\n      const linkDomain = extractionValidator.extractDomain(link.url);\r\n      \r\n      // \u4E25\u683C\u57DF\u540D\u68C0\u67E5 - \u5FC5\u987B\u5339\u914D\u6216\u662F\u5B50\u57DF\u540D\r\n      if (!extractionValidator.isDomainOrSubdomainMatch(linkDomain, expectedDomain)) {\r\n        console.log(`\u2310 \u8FC7\u6EE4\u4E0D\u540C\u57DF\u540D\u7684\u4E0B\u8F7D\u94FE\u63A5: ${link.url} (${linkDomain} != ${expectedDomain})`);\r\n        return false;\r\n      }\r\n\r\n      // \u68C0\u67E5\u5783\u573E\u57DF\u540D\r\n      if (SPAM_DOMAINS.some(domain => linkDomain.includes(domain))) {\r\n        console.log(`\u2310 \u8FC7\u6EE4\u5783\u573E\u57DF\u540D\u4E0B\u8F7D\u94FE\u63A5: ${linkDomain}`);\r\n        return false;\r\n      }\r\n\r\n      // \u6E90\u7279\u5B9A\u9A8C\u8BC1\r\n      const sourceConfig = SOURCE_SPECIFIC_CONFIG[sourceType];\r\n      if (sourceConfig && sourceConfig.strictDomain) {\r\n        // \u5BF9\u4E8E\u9700\u8981\u4E25\u683C\u57DF\u540D\u68C0\u67E5\u7684\u6E90\uFF08\u5982Jable\uFF09\uFF0C\u786E\u4FDD\u57DF\u540D\u5B8C\u5168\u5339\u914D\r\n        if (linkDomain !== expectedDomain) {\r\n          console.log(`\u2310 ${sourceType}\u4E25\u683C\u57DF\u540D\u68C0\u67E5\u5931\u8D25: ${linkDomain} != ${expectedDomain}`);\r\n          return false;\r\n        }\r\n      }\r\n\r\n      console.log(`\u2705 \u6709\u6548\u4E0B\u8F7D\u94FE\u63A5: ${link.url}`);\r\n      return true;\r\n    });\r\n\r\n    console.log(`\u9A8C\u8BC1\u540E\u6709\u6548\u4E0B\u8F7D\u94FE\u63A5\u6570\u91CF: ${validLinks.length}`);\r\n    return validLinks;\r\n  }\r\n\r\n  /**\r\n   * \u63D0\u53D6\u641C\u7D22\u5173\u952E\u8BCD - \u4F18\u5316\u7248\u672C\r\n   */\r\n  extractSearchKeyword(searchResult) {\r\n    const sources = [\r\n      searchResult.keyword,\r\n      searchResult.query,\r\n      searchResult.title,\r\n      searchResult.code\r\n    ];\r\n    \r\n    for (const source of sources) {\r\n      if (source && typeof source === 'string' && source.trim()) {\r\n        return source.trim();\r\n      }\r\n    }\r\n    \r\n    // \u5C1D\u8BD5\u4ECEURL\u4E2D\u63D0\u53D6\u756A\u53F7\r\n    const urlCode = extractionValidator.extractCodeFromUrl(searchResult.url);\r\n    if (urlCode) return urlCode;\r\n    \r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u9875\u9762\u5185\u5BB9 - \u4F18\u5316\u7248\u672C\uFF0C\u6839\u636E\u6E90\u7C7B\u578B\u8C03\u6574\u7B56\u7565\r\n   */\r\n  async fetchPageContent(url, timeout) {\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => controller.abort(), timeout);\r\n\r\n    try {\r\n      console.log(`=== \u5F00\u59CB\u83B7\u53D6\u9875\u9762\u5185\u5BB9 ===`);\r\n      console.log(`URL: ${url}`);\r\n      console.log(`\u8D85\u65F6\u65F6\u95F4: ${timeout}ms`);\r\n\r\n      // \u6839\u636E\u6E90\u7C7B\u578B\u8C03\u6574\u8BF7\u6C42\u5934\r\n      const sourceType = extractionValidator.detectSourceType(url);\r\n      const headers = this.getSourceSpecificHeaders(sourceType);\r\n\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        signal: controller.signal,\r\n        headers\r\n      });\r\n\r\n      clearTimeout(timeoutId);\r\n\r\n      console.log(`\u54CD\u5E94\u72B6\u6001: ${response.status} ${response.statusText}`);\r\n      console.log(`\u5185\u5BB9\u7C7B\u578B: ${response.headers.get('content-type')}`);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      const content = await response.text();\r\n      \r\n      console.log(`=== \u9875\u9762\u5185\u5BB9\u5206\u6790 ===`);\r\n      console.log(`\u5185\u5BB9\u957F\u5EA6: ${content.length}`);\r\n      \r\n      const pageAnalysis = this.analyzePageContent(content, url, sourceType);\r\n      console.log(`\u9875\u9762\u5206\u6790:`, pageAnalysis);\r\n      \r\n      if (pageAnalysis.hasIssues) {\r\n        console.warn(`\u26A0\uFE0F \u9875\u9762\u53EF\u80FD\u6709\u95EE\u9898:`, pageAnalysis.issues);\r\n      }\r\n      \r\n      console.log(`=== \u9875\u9762\u5185\u5BB9\u83B7\u53D6\u5B8C\u6210 ===`);\r\n      return content;\r\n\r\n    } catch (error) {\r\n      clearTimeout(timeoutId);\r\n      \r\n      console.error(`=== \u9875\u9762\u5185\u5BB9\u83B7\u53D6\u5931\u8D25 ===`);\r\n      console.error(`\u9519\u8BEF\u7C7B\u578B: ${error.name}`);\r\n      console.error(`\u9519\u8BEF\u4FE1\u606F: ${error.message}`);\r\n      \r\n      if (error.name === 'AbortError') {\r\n        throw new Error(`\u8BF7\u6C42\u8D85\u65F6 (${timeout}ms)`);\r\n      }\r\n      \r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u6E90\u7279\u5B9A\u7684\u8BF7\u6C42\u5934\r\n   */\r\n  getSourceSpecificHeaders(sourceType) {\r\n    const baseHeaders = {\r\n      'User-Agent': this.userAgent,\r\n      'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\r\n      'Accept-Language': 'zh-CN,zh;q=0.8,en;q=0.6,ja;q=0.4',\r\n      'Accept-Encoding': 'gzip, deflate',\r\n      'Cache-Control': 'no-cache',\r\n      'Pragma': 'no-cache'\r\n    };\r\n\r\n    // \u6839\u636E\u6E90\u7C7B\u578B\u6DFB\u52A0\u7279\u5B9A\u5934\u90E8\r\n    switch (sourceType) {\r\n      case 'jable':\r\n        // Jable\u53EF\u80FD\u9700\u8981\u7279\u5B9A\u7684Referer\r\n        return {\r\n          ...baseHeaders,\r\n          'Referer': 'https://jable.tv/'\r\n        };\r\n      case 'javdb':\r\n        // JavDB\u53EF\u80FD\u9700\u8981\u7279\u5B9A\u7684Referer\r\n        return {\r\n          ...baseHeaders,\r\n          'Referer': 'https://javdb.com/'\r\n        };\r\n      default:\r\n        return baseHeaders;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u5206\u6790\u9875\u9762\u5185\u5BB9 - \u6839\u636E\u6E90\u7C7B\u578B\u4F18\u5316\u7248\u672C\r\n   */\r\n  analyzePageContent(content, url, sourceType) {\r\n    const analysis = {\r\n      hasTitle: false,\r\n      hasBody: false,\r\n      isLoginPage: false,\r\n      is404Page: false,\r\n      isCloudflareBlocked: false,\r\n      hasVideoContent: false,\r\n      hasDetailContent: false,\r\n      hasIssues: false,\r\n      issues: []\r\n    };\r\n\r\n    if (!content || content.length < 100) {\r\n      analysis.hasIssues = true;\r\n      analysis.issues.push('\u5185\u5BB9\u8FC7\u77ED\u6216\u4E3A\u7A7A');\r\n      return analysis;\r\n    }\r\n\r\n    analysis.hasTitle = content.includes('<title>');\r\n    analysis.hasBody = content.includes('<body>');\r\n\r\n    const contentLower = content.toLowerCase();\r\n    \r\n    // \u68C0\u67E5\u767B\u5F55\u9875\u9762\r\n    if (contentLower.includes('\u767B\u5F55') || contentLower.includes('login') || \r\n        contentLower.includes('\u9A8C\u8BC1\u7801') || contentLower.includes('captcha')) {\r\n      analysis.isLoginPage = true;\r\n      analysis.hasIssues = true;\r\n      analysis.issues.push('\u53EF\u80FD\u662F\u767B\u5F55\u9875\u9762');\r\n    }\r\n    \r\n    // \u68C0\u67E5404\u9875\u9762\r\n    if (contentLower.includes('404') || contentLower.includes('not found') ||\r\n        contentLower.includes('page not found')) {\r\n      analysis.is404Page = true;\r\n      analysis.hasIssues = true;\r\n      analysis.issues.push('\u53EF\u80FD\u662F404\u9875\u9762');\r\n    }\r\n    \r\n    // \u68C0\u67E5Cloudflare\u62E6\u622A\r\n    if (contentLower.includes('cloudflare') || \r\n        contentLower.includes('checking your browser') ||\r\n        contentLower.includes('ddos protection')) {\r\n      analysis.isCloudflareBlocked = true;\r\n      analysis.hasIssues = true;\r\n      analysis.issues.push('\u53EF\u80FD\u88ABCloudflare\u62E6\u622A');\r\n    }\r\n\r\n    // \u6839\u636E\u6E90\u7C7B\u578B\u68C0\u67E5\u7279\u5B9A\u5185\u5BB9\r\n    const sourceIndicators = this.getSourceSpecificIndicators(sourceType);\r\n    analysis.hasDetailContent = sourceIndicators.some(indicator => \r\n      contentLower.includes(indicator)\r\n    );\r\n\r\n    // \u68C0\u67E5\u89C6\u9891\u5185\u5BB9\r\n    const videoIndicators = ['<video', 'player', '.mp4', '.avi', 'stream'];\r\n    analysis.hasVideoContent = videoIndicators.some(indicator => \r\n      contentLower.includes(indicator)\r\n    );\r\n\r\n    return analysis;\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u6E90\u7279\u5B9A\u7684\u5185\u5BB9\u6307\u793A\u5668\r\n   */\r\n  getSourceSpecificIndicators(sourceType) {\r\n    const commonIndicators = [\r\n      'video', 'movie', 'download', 'magnet', 'actress', 'genre',\r\n      '\u6F14\u5458', '\u5BFC\u6F14', '\u53D1\u884C', '\u756A\u53F7', '\u78C1\u529B', '\u4E0B\u8F7D'\r\n    ];\r\n\r\n    switch (sourceType) {\r\n      case 'javbus':\r\n        return [...commonIndicators, 'movie-box', 'screencap', 'star-name'];\r\n      case 'javdb':\r\n        return [...commonIndicators, 'video-cover', 'panel-block', 'tile-images'];\r\n      case 'jable':\r\n        return [...commonIndicators, 'video-item', 'models', 'video-title'];\r\n      case 'javgg':\r\n        return [...commonIndicators, 'video-cover', 'screenshots'];\r\n      case 'javmost':\r\n        return [...commonIndicators, 'video-item', 'actress'];\r\n      case 'sukebei':\r\n        return [...commonIndicators, 'torrent', 'magnet', 'seeders'];\r\n      case 'javguru':\r\n        return [...commonIndicators, 'video-title', 'description'];\r\n      default:\r\n        return commonIndicators;\r\n    }\r\n  }\r\n\r\n  // ==================== \u6279\u91CF\u63D0\u53D6\u65B9\u6CD5 ====================\r\n\r\n  /**\r\n   * \u6279\u91CF\u63D0\u53D6\u8BE6\u60C5\u4FE1\u606F - \u4FDD\u6301\u539F\u6709\u63A5\u53E3\r\n   */\r\n  async extractBatchDetails(searchResults, options = {}) {\r\n    const {\r\n      enableCache = true,\r\n      timeout = this.defaultTimeout,\r\n      onProgress = null,\r\n      enableRetry = true\r\n    } = options;\r\n\r\n    console.log(`\u5F00\u59CB\u6279\u91CF\u63D0\u53D6 ${searchResults.length} \u4E2A\u7ED3\u679C\u7684\u8BE6\u60C5\u4FE1\u606F`);\r\n\r\n    const results = [];\r\n    const concurrency = Math.min(this.maxConcurrentExtractions, searchResults.length);\r\n\r\n    for (let i = 0; i < searchResults.length; i += concurrency) {\r\n      const batch = searchResults.slice(i, i + concurrency);\r\n      \r\n      const batchPromises = batch.map(async (result, index) => {\r\n        try {\r\n          const globalIndex = i + index;\r\n          \r\n          if (enableCache) {\r\n            const cached = await cacheManager.getDetailCache(result.url);\r\n            if (cached) {\r\n              console.log(`\u4F7F\u7528\u7F13\u5B58\u8BE6\u60C5: ${result.title}`);\r\n              onProgress && onProgress({\r\n                current: globalIndex + 1,\r\n                total: searchResults.length,\r\n                status: 'cached',\r\n                item: result.title\r\n              });\r\n              \r\n              return {\r\n                ...result,\r\n                ...cached,\r\n                extractionStatus: 'cached',\r\n                extractionTime: 0\r\n              };\r\n            }\r\n          }\r\n\r\n          const extractedDetails = await this.extractSingleDetail(result, {\r\n            timeout,\r\n            enableRetry\r\n          });\r\n\r\n          if (enableCache && extractedDetails.extractionStatus === 'success') {\r\n            await cacheManager.setDetailCache(result.url, extractedDetails, CONFIG.DETAIL_EXTRACTION.DEFAULT_CACHE_DURATION);\r\n          }\r\n\r\n          onProgress && onProgress({\r\n            current: globalIndex + 1,\r\n            total: searchResults.length,\r\n            status: extractedDetails.extractionStatus,\r\n            item: result.title\r\n          });\r\n\r\n          return {\r\n            ...result,\r\n            ...extractedDetails\r\n          };\r\n\r\n        } catch (error) {\r\n          console.error(`\u6279\u91CF\u63D0\u53D6\u8BE6\u60C5\u5931\u8D25 [${result.title}]:`, error);\r\n          \r\n          onProgress && onProgress({\r\n            current: i + index + 1,\r\n            total: searchResults.length,\r\n            status: 'error',\r\n            item: result.title,\r\n            error: error.message\r\n          });\r\n\r\n          return {\r\n            ...result,\r\n            extractionStatus: 'error',\r\n            extractionError: error.message,\r\n            extractionTime: 0\r\n          };\r\n        }\r\n      });\r\n\r\n      const batchResults = await Promise.all(batchPromises);\r\n      results.push(...batchResults);\r\n\r\n      if (i + concurrency < searchResults.length) {\r\n        await utils.delay(500);\r\n      }\r\n    }\r\n\r\n    console.log(`\u6279\u91CF\u63D0\u53D6\u5B8C\u6210: ${results.length}/${searchResults.length}`);\r\n    return results;\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u63D0\u53D6\u7EDF\u8BA1\u4FE1\u606F\r\n   */\r\n  getExtractionStats() {\r\n    return {\r\n      totalExtractions: this.totalExtractions || 0,\r\n      successfulExtractions: this.successfulExtractions || 0,\r\n      failedExtractions: this.failedExtractions || 0,\r\n      averageExtractionTime: this.averageExtractionTime || 0,\r\n      cacheHitRate: this.cacheHitRate || 0\r\n    };\r\n  }\r\n}\r\n\r\n// \u521B\u5EFA\u5355\u4F8B\u5B9E\u4F8B\r\nexport const detailExtractor = new DetailExtractorService();\r\nexport default detailExtractor;", "// src/services/detail-config-service.js - \u8BE6\u60C5\u63D0\u53D6\u914D\u7F6E\u7BA1\u7406\u670D\u52A1\r\nimport { SYSTEM_VALIDATION } from '../constants.js';\r\n\r\nexport class DetailConfigService {\r\n  constructor() {\r\n    this.defaultConfig = this.getDefaultUserConfig();\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u7528\u6237\u9ED8\u8BA4\u914D\u7F6E\r\n   */\r\n  getDefaultUserConfig() {\r\n    return {\r\n      // \u57FA\u7840\u529F\u80FD\u5F00\u5173\r\n      enableDetailExtraction: true,\r\n      autoExtractDetails: false,\r\n      \r\n      // \u63D0\u53D6\u6570\u91CF\u63A7\u5236\r\n      maxAutoExtractions: 5,\r\n      extractionBatchSize: 3,\r\n      maxDownloadLinks: 10,\r\n      maxMagnetLinks: 10,\r\n      maxScreenshots: 10,\r\n      \r\n      // \u65F6\u95F4\u63A7\u5236\r\n      extractionTimeout: 15000, // 15\u79D2\r\n      cacheDuration: 86400000, // 24\u5C0F\u65F6\r\n      \r\n      // \u91CD\u8BD5\u63A7\u5236\r\n      enableRetry: true,\r\n      maxRetryAttempts: 2,\r\n      \r\n      // \u7F13\u5B58\u63A7\u5236\r\n      enableCache: true,\r\n      enableLocalCache: true,\r\n      \r\n      // \u663E\u793A\u63A7\u5236\r\n      showScreenshots: true,\r\n      showDownloadLinks: true,\r\n      showMagnetLinks: true,\r\n      showActressInfo: true,\r\n      showExtractedTags: true,\r\n      showRating: true,\r\n      showDescription: true,\r\n      \r\n      // \u754C\u9762\u63A7\u5236\r\n      compactMode: false,\r\n      enableImagePreview: true,\r\n      showExtractionProgress: true,\r\n      enableProgressNotifications: true,\r\n      \r\n      // \u5185\u5BB9\u8FC7\u6EE4\r\n      enableContentFilter: false,\r\n      contentFilterKeywords: [],\r\n      \r\n      // \u9AD8\u7EA7\u9009\u9879\r\n      enableStrictDomainCheck: true,\r\n      enableSpamFilter: true,\r\n      preferOriginalSources: true,\r\n      enableAutoCodeExtraction: true,\r\n      \r\n      // \u6027\u80FD\u4F18\u5316\r\n      enableConcurrentExtraction: true,\r\n      maxConcurrentExtractions: 3,\r\n      enableSmartBatching: true,\r\n      \r\n      // \u6570\u636E\u8D28\u91CF\r\n      requireMinimumData: true,\r\n      skipLowQualityResults: false,\r\n      validateImageUrls: true,\r\n      validateDownloadLinks: true\r\n    };\r\n  }\r\n\r\n  /**\r\n   * \u4ECE\u6570\u636E\u5E93\u83B7\u53D6\u7528\u6237\u914D\u7F6E\r\n   */\r\n  async getUserConfig(env, userId) {\r\n    try {\r\n      const userConfig = await env.DB.prepare(`\r\n        SELECT * FROM detail_extraction_config WHERE user_id = ?\r\n      `).bind(userId).first();\r\n\r\n      if (!userConfig) {\r\n        return this.defaultConfig;\r\n      }\r\n\r\n      return {\r\n        // \u57FA\u7840\u529F\u80FD\u5F00\u5173\r\n        enableDetailExtraction: Boolean(userConfig.enable_detail_extraction),\r\n        autoExtractDetails: Boolean(userConfig.auto_extract_details),\r\n        \r\n        // \u63D0\u53D6\u6570\u91CF\u63A7\u5236\r\n        maxAutoExtractions: userConfig.max_auto_extractions || this.defaultConfig.maxAutoExtractions,\r\n        extractionBatchSize: userConfig.extraction_batch_size || this.defaultConfig.extractionBatchSize,\r\n        maxDownloadLinks: userConfig.max_download_links || this.defaultConfig.maxDownloadLinks,\r\n        maxMagnetLinks: userConfig.max_magnet_links || this.defaultConfig.maxMagnetLinks,\r\n        maxScreenshots: userConfig.max_screenshots || this.defaultConfig.maxScreenshots,\r\n        \r\n        // \u65F6\u95F4\u63A7\u5236\r\n        extractionTimeout: userConfig.extraction_timeout || this.defaultConfig.extractionTimeout,\r\n        cacheDuration: userConfig.cache_duration || this.defaultConfig.cacheDuration,\r\n        \r\n        // \u91CD\u8BD5\u63A7\u5236\r\n        enableRetry: Boolean(userConfig.enable_retry),\r\n        maxRetryAttempts: userConfig.max_retry_attempts || this.defaultConfig.maxRetryAttempts,\r\n        \r\n        // \u7F13\u5B58\u63A7\u5236\r\n        enableCache: Boolean(userConfig.enable_cache),\r\n        enableLocalCache: Boolean(userConfig.enable_local_cache),\r\n        \r\n        // \u663E\u793A\u63A7\u5236\r\n        showScreenshots: Boolean(userConfig.show_screenshots),\r\n        showDownloadLinks: Boolean(userConfig.show_download_links),\r\n        showMagnetLinks: Boolean(userConfig.show_magnet_links),\r\n        showActressInfo: Boolean(userConfig.show_actress_info),\r\n        showExtractedTags: Boolean(userConfig.show_extracted_tags),\r\n        showRating: Boolean(userConfig.show_rating),\r\n        showDescription: Boolean(userConfig.show_description),\r\n        \r\n        // \u754C\u9762\u63A7\u5236\r\n        compactMode: Boolean(userConfig.compact_mode),\r\n        enableImagePreview: Boolean(userConfig.enable_image_preview),\r\n        showExtractionProgress: Boolean(userConfig.show_extraction_progress),\r\n        enableProgressNotifications: Boolean(userConfig.enable_progress_notifications),\r\n        \r\n        // \u5185\u5BB9\u8FC7\u6EE4\r\n        enableContentFilter: Boolean(userConfig.enable_content_filter),\r\n        contentFilterKeywords: JSON.parse(userConfig.content_filter_keywords || '[]'),\r\n        \r\n        // \u9AD8\u7EA7\u9009\u9879\r\n        enableStrictDomainCheck: Boolean(userConfig.enable_strict_domain_check),\r\n        enableSpamFilter: Boolean(userConfig.enable_spam_filter),\r\n        preferOriginalSources: Boolean(userConfig.prefer_original_sources),\r\n        enableAutoCodeExtraction: Boolean(userConfig.enable_auto_code_extraction),\r\n        \r\n        // \u6027\u80FD\u4F18\u5316\r\n        enableConcurrentExtraction: Boolean(userConfig.enable_concurrent_extraction),\r\n        maxConcurrentExtractions: userConfig.max_concurrent_extractions || this.defaultConfig.maxConcurrentExtractions,\r\n        enableSmartBatching: Boolean(userConfig.enable_smart_batching),\r\n        \r\n        // \u6570\u636E\u8D28\u91CF\r\n        requireMinimumData: Boolean(userConfig.require_minimum_data),\r\n        skipLowQualityResults: Boolean(userConfig.skip_low_quality_results),\r\n        validateImageUrls: Boolean(userConfig.validate_image_urls),\r\n        validateDownloadLinks: Boolean(userConfig.validate_download_links)\r\n      };\r\n    } catch (error) {\r\n      console.error('\u83B7\u53D6\u7528\u6237\u914D\u7F6E\u5931\u8D25:', error);\r\n      return this.defaultConfig;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u4FDD\u5B58\u7528\u6237\u914D\u7F6E\r\n   */\r\n  async saveUserConfig(env, userId, config) {\r\n    try {\r\n      const validation = this.validateConfig(config);\r\n      if (!validation.valid) {\r\n        throw new Error(`\u914D\u7F6E\u9A8C\u8BC1\u5931\u8D25: ${validation.errors.join(', ')}`);\r\n      }\r\n\r\n      const configId = `${userId}_detail_config`;\r\n      const now = Date.now();\r\n\r\n      await env.DB.prepare(`\r\n        INSERT OR REPLACE INTO detail_extraction_config (\r\n          id, user_id,\r\n          enable_detail_extraction, auto_extract_details, max_auto_extractions,\r\n          extraction_batch_size, max_download_links, max_magnet_links, max_screenshots,\r\n          extraction_timeout, cache_duration,\r\n          enable_retry, max_retry_attempts,\r\n          enable_cache, enable_local_cache,\r\n          show_screenshots, show_download_links, show_magnet_links, show_actress_info,\r\n          show_extracted_tags, show_rating, show_description,\r\n          compact_mode, enable_image_preview, show_extraction_progress, enable_progress_notifications,\r\n          enable_content_filter, content_filter_keywords,\r\n          enable_strict_domain_check, enable_spam_filter, prefer_original_sources, enable_auto_code_extraction,\r\n          enable_concurrent_extraction, max_concurrent_extractions, enable_smart_batching,\r\n          require_minimum_data, skip_low_quality_results, validate_image_urls, validate_download_links,\r\n          created_at, updated_at\r\n        ) VALUES (\r\n          ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?\r\n        )\r\n      `).bind(\r\n        configId, userId,\r\n        config.enableDetailExtraction ? 1 : 0,\r\n        config.autoExtractDetails ? 1 : 0,\r\n        config.maxAutoExtractions,\r\n        config.extractionBatchSize,\r\n        config.maxDownloadLinks,\r\n        config.maxMagnetLinks,\r\n        config.maxScreenshots,\r\n        config.extractionTimeout,\r\n        config.cacheDuration,\r\n        config.enableRetry ? 1 : 0,\r\n        config.maxRetryAttempts,\r\n        config.enableCache ? 1 : 0,\r\n        config.enableLocalCache ? 1 : 0,\r\n        config.showScreenshots ? 1 : 0,\r\n        config.showDownloadLinks ? 1 : 0,\r\n        config.showMagnetLinks ? 1 : 0,\r\n        config.showActressInfo ? 1 : 0,\r\n        config.showExtractedTags ? 1 : 0,\r\n        config.showRating ? 1 : 0,\r\n        config.showDescription ? 1 : 0,\r\n        config.compactMode ? 1 : 0,\r\n        config.enableImagePreview ? 1 : 0,\r\n        config.showExtractionProgress ? 1 : 0,\r\n        config.enableProgressNotifications ? 1 : 0,\r\n        config.enableContentFilter ? 1 : 0,\r\n        JSON.stringify(config.contentFilterKeywords || []),\r\n        config.enableStrictDomainCheck ? 1 : 0,\r\n        config.enableSpamFilter ? 1 : 0,\r\n        config.preferOriginalSources ? 1 : 0,\r\n        config.enableAutoCodeExtraction ? 1 : 0,\r\n        config.enableConcurrentExtraction ? 1 : 0,\r\n        config.maxConcurrentExtractions,\r\n        config.enableSmartBatching ? 1 : 0,\r\n        config.requireMinimumData ? 1 : 0,\r\n        config.skipLowQualityResults ? 1 : 0,\r\n        config.validateImageUrls ? 1 : 0,\r\n        config.validateDownloadLinks ? 1 : 0,\r\n        now, now\r\n      ).run();\r\n\r\n      return { success: true, warnings: validation.warnings };\r\n    } catch (error) {\r\n      console.error('\u4FDD\u5B58\u7528\u6237\u914D\u7F6E\u5931\u8D25:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u9A8C\u8BC1\u914D\u7F6E\r\n   */\r\n  validateConfig(config) {\r\n    const errors = [];\r\n    const warnings = [];\r\n\r\n    // \u9A8C\u8BC1\u63D0\u53D6\u8D85\u65F6\u65F6\u95F4\r\n    if (config.extractionTimeout !== undefined) {\r\n      const timeout = Number(config.extractionTimeout);\r\n      if (isNaN(timeout) || timeout < SYSTEM_VALIDATION.extractionTimeout.min || \r\n          timeout > SYSTEM_VALIDATION.extractionTimeout.max) {\r\n        errors.push(`\u63D0\u53D6\u8D85\u65F6\u65F6\u95F4\u5FC5\u987B\u5728 ${SYSTEM_VALIDATION.extractionTimeout.min}-${SYSTEM_VALIDATION.extractionTimeout.max}ms \u4E4B\u95F4`);\r\n      }\r\n      if (timeout > 20000) {\r\n        warnings.push('\u8D85\u65F6\u65F6\u95F4\u8BBE\u7F6E\u8FC7\u957F\u53EF\u80FD\u5F71\u54CD\u7528\u6237\u4F53\u9A8C');\r\n      }\r\n    }\r\n\r\n    // \u9A8C\u8BC1\u7F13\u5B58\u65F6\u957F\r\n    if (config.cacheDuration !== undefined) {\r\n      const duration = Number(config.cacheDuration);\r\n      if (isNaN(duration) || duration < SYSTEM_VALIDATION.cacheDuration.min || \r\n          duration > SYSTEM_VALIDATION.cacheDuration.max) {\r\n        errors.push(`\u7F13\u5B58\u65F6\u957F\u5FC5\u987B\u5728 ${SYSTEM_VALIDATION.cacheDuration.min}-${SYSTEM_VALIDATION.cacheDuration.max}ms \u4E4B\u95F4`);\r\n      }\r\n    }\r\n\r\n    // \u9A8C\u8BC1\u6279\u91CF\u5927\u5C0F\r\n    if (config.extractionBatchSize !== undefined) {\r\n      const batchSize = Number(config.extractionBatchSize);\r\n      if (isNaN(batchSize) || batchSize < SYSTEM_VALIDATION.extractionBatchSize.min || \r\n          batchSize > SYSTEM_VALIDATION.extractionBatchSize.max) {\r\n        errors.push(`\u6279\u91CF\u5927\u5C0F\u5FC5\u987B\u5728 ${SYSTEM_VALIDATION.extractionBatchSize.min}-${SYSTEM_VALIDATION.extractionBatchSize.max} \u4E4B\u95F4`);\r\n      }\r\n      if (batchSize > 10) {\r\n        warnings.push('\u6279\u91CF\u5927\u5C0F\u8FC7\u5927\u53EF\u80FD\u5BFC\u81F4\u8BF7\u6C42\u963B\u585E');\r\n      }\r\n    }\r\n\r\n    // \u9A8C\u8BC1\u4E0B\u8F7D\u94FE\u63A5\u6570\u91CF\r\n    if (config.maxDownloadLinks !== undefined) {\r\n      const maxLinks = Number(config.maxDownloadLinks);\r\n      if (isNaN(maxLinks) || maxLinks < SYSTEM_VALIDATION.maxDownloadLinks.min || \r\n          maxLinks > SYSTEM_VALIDATION.maxDownloadLinks.max) {\r\n        errors.push(`\u6700\u5927\u4E0B\u8F7D\u94FE\u63A5\u6570\u5FC5\u987B\u5728 ${SYSTEM_VALIDATION.maxDownloadLinks.min}-${SYSTEM_VALIDATION.maxDownloadLinks.max} \u4E4B\u95F4`);\r\n      }\r\n    }\r\n\r\n    // \u9A8C\u8BC1\u78C1\u529B\u94FE\u63A5\u6570\u91CF\r\n    if (config.maxMagnetLinks !== undefined) {\r\n      const maxMagnets = Number(config.maxMagnetLinks);\r\n      if (isNaN(maxMagnets) || maxMagnets < SYSTEM_VALIDATION.maxMagnetLinks.min || \r\n          maxMagnets > SYSTEM_VALIDATION.maxMagnetLinks.max) {\r\n        errors.push(`\u6700\u5927\u78C1\u529B\u94FE\u63A5\u6570\u5FC5\u987B\u5728 ${SYSTEM_VALIDATION.maxMagnetLinks.min}-${SYSTEM_VALIDATION.maxMagnetLinks.max} \u4E4B\u95F4`);\r\n      }\r\n    }\r\n\r\n    // \u9A8C\u8BC1\u622A\u56FE\u6570\u91CF\r\n    if (config.maxScreenshots !== undefined) {\r\n      const maxScreenshots = Number(config.maxScreenshots);\r\n      if (isNaN(maxScreenshots) || maxScreenshots < SYSTEM_VALIDATION.maxScreenshots.min || \r\n          maxScreenshots > SYSTEM_VALIDATION.maxScreenshots.max) {\r\n        errors.push(`\u6700\u5927\u622A\u56FE\u6570\u5FC5\u987B\u5728 ${SYSTEM_VALIDATION.maxScreenshots.min}-${SYSTEM_VALIDATION.maxScreenshots.max} \u4E4B\u95F4`);\r\n      }\r\n    }\r\n\r\n    // \u9A8C\u8BC1\u5185\u5BB9\u8FC7\u6EE4\u5173\u952E\u8BCD\r\n    if (config.contentFilterKeywords !== undefined) {\r\n      if (!Array.isArray(config.contentFilterKeywords)) {\r\n        errors.push('\u5185\u5BB9\u8FC7\u6EE4\u5173\u952E\u8BCD\u5FC5\u987B\u662F\u6570\u7EC4\u683C\u5F0F');\r\n      } else if (config.contentFilterKeywords.length > 50) {\r\n        errors.push('\u5185\u5BB9\u8FC7\u6EE4\u5173\u952E\u8BCD\u6570\u91CF\u4E0D\u80FD\u8D85\u8FC750\u4E2A');\r\n      }\r\n    }\r\n\r\n    return {\r\n      valid: errors.length === 0,\r\n      errors,\r\n      warnings\r\n    };\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u914D\u7F6E\u5B57\u6BB5\u5143\u6570\u636E\r\n   */\r\n  getConfigMetadata() {\r\n    return {\r\n      groups: [\r\n        {\r\n          id: 'basic',\r\n          name: '\u57FA\u7840\u8BBE\u7F6E',\r\n          description: '\u63A7\u5236\u8BE6\u60C5\u63D0\u53D6\u7684\u57FA\u672C\u529F\u80FD',\r\n          fields: [\r\n            {\r\n              key: 'enableDetailExtraction',\r\n              name: '\u542F\u7528\u8BE6\u60C5\u63D0\u53D6',\r\n              type: 'boolean',\r\n              description: '\u5F00\u542F\u6216\u5173\u95ED\u8BE6\u60C5\u63D0\u53D6\u529F\u80FD',\r\n              default: true\r\n            },\r\n            {\r\n              key: 'autoExtractDetails',\r\n              name: '\u81EA\u52A8\u63D0\u53D6\u8BE6\u60C5',\r\n              type: 'boolean',\r\n              description: '\u5728\u641C\u7D22\u7ED3\u679C\u4E2D\u81EA\u52A8\u63D0\u53D6\u8BE6\u60C5\u4FE1\u606F',\r\n              default: false,\r\n              dependency: 'enableDetailExtraction'\r\n            },\r\n            {\r\n              key: 'maxAutoExtractions',\r\n              name: '\u6700\u5927\u81EA\u52A8\u63D0\u53D6\u6570\u91CF',\r\n              type: 'number',\r\n              min: 1,\r\n              max: 10,\r\n              description: '\u81EA\u52A8\u63D0\u53D6\u65F6\u7684\u6700\u5927\u6570\u91CF',\r\n              default: 5,\r\n              dependency: 'autoExtractDetails'\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: 'performance',\r\n          name: '\u6027\u80FD\u8BBE\u7F6E',\r\n          description: '\u63A7\u5236\u63D0\u53D6\u6027\u80FD\u548C\u8D44\u6E90\u4F7F\u7528',\r\n          fields: [\r\n            {\r\n              key: 'extractionTimeout',\r\n              name: '\u63D0\u53D6\u8D85\u65F6\u65F6\u95F4 (\u6BEB\u79D2)',\r\n              type: 'number',\r\n              min: SYSTEM_VALIDATION.extractionTimeout.min,\r\n              max: SYSTEM_VALIDATION.extractionTimeout.max,\r\n              step: 1000,\r\n              description: '\u5355\u4E2A\u8BE6\u60C5\u63D0\u53D6\u7684\u6700\u5927\u7B49\u5F85\u65F6\u95F4',\r\n              default: 15000\r\n            },\r\n            {\r\n              key: 'extractionBatchSize',\r\n              name: '\u6279\u91CF\u5904\u7406\u5927\u5C0F',\r\n              type: 'number',\r\n              min: SYSTEM_VALIDATION.extractionBatchSize.min,\r\n              max: SYSTEM_VALIDATION.extractionBatchSize.max,\r\n              description: '\u6279\u91CF\u63D0\u53D6\u65F6\u7684\u6BCF\u6279\u6570\u91CF',\r\n              default: 3\r\n            },\r\n            {\r\n              key: 'maxConcurrentExtractions',\r\n              name: '\u6700\u5927\u5E76\u53D1\u63D0\u53D6\u6570',\r\n              type: 'number',\r\n              min: 1,\r\n              max: 5,\r\n              description: '\u540C\u65F6\u8FDB\u884C\u7684\u63D0\u53D6\u4EFB\u52A1\u6570\u91CF',\r\n              default: 3\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: 'content',\r\n          name: '\u5185\u5BB9\u8BBE\u7F6E',\r\n          description: '\u63A7\u5236\u63D0\u53D6\u7684\u5185\u5BB9\u7C7B\u578B\u548C\u6570\u91CF',\r\n          fields: [\r\n            {\r\n              key: 'maxDownloadLinks',\r\n              name: '\u6700\u5927\u4E0B\u8F7D\u94FE\u63A5\u6570',\r\n              type: 'number',\r\n              min: SYSTEM_VALIDATION.maxDownloadLinks.min,\r\n              max: SYSTEM_VALIDATION.maxDownloadLinks.max,\r\n              description: '\u5355\u4E2A\u8BE6\u60C5\u9875\u6700\u5927\u4E0B\u8F7D\u94FE\u63A5\u6570',\r\n              default: 10\r\n            },\r\n            {\r\n              key: 'maxMagnetLinks',\r\n              name: '\u6700\u5927\u78C1\u529B\u94FE\u63A5\u6570',\r\n              type: 'number',\r\n              min: SYSTEM_VALIDATION.maxMagnetLinks.min,\r\n              max: SYSTEM_VALIDATION.maxMagnetLinks.max,\r\n              description: '\u5355\u4E2A\u8BE6\u60C5\u9875\u6700\u5927\u78C1\u529B\u94FE\u63A5\u6570',\r\n              default: 10\r\n            },\r\n            {\r\n              key: 'maxScreenshots',\r\n              name: '\u6700\u5927\u622A\u56FE\u6570',\r\n              type: 'number',\r\n              min: SYSTEM_VALIDATION.maxScreenshots.min,\r\n              max: SYSTEM_VALIDATION.maxScreenshots.max,\r\n              description: '\u5355\u4E2A\u8BE6\u60C5\u9875\u6700\u5927\u622A\u56FE\u6570',\r\n              default: 10\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: 'display',\r\n          name: '\u663E\u793A\u8BBE\u7F6E',\r\n          description: '\u63A7\u5236\u8BE6\u60C5\u4FE1\u606F\u7684\u663E\u793A\u65B9\u5F0F',\r\n          fields: [\r\n            {\r\n              key: 'showScreenshots',\r\n              name: '\u663E\u793A\u622A\u56FE',\r\n              type: 'boolean',\r\n              description: '\u5728\u8BE6\u60C5\u4E2D\u663E\u793A\u622A\u56FE\u56FE\u7247',\r\n              default: true\r\n            },\r\n            {\r\n              key: 'showDownloadLinks',\r\n              name: '\u663E\u793A\u4E0B\u8F7D\u94FE\u63A5',\r\n              type: 'boolean',\r\n              description: '\u5728\u8BE6\u60C5\u4E2D\u663E\u793A\u4E0B\u8F7D\u94FE\u63A5',\r\n              default: true\r\n            },\r\n            {\r\n              key: 'showMagnetLinks',\r\n              name: '\u663E\u793A\u78C1\u529B\u94FE\u63A5',\r\n              type: 'boolean',\r\n              description: '\u5728\u8BE6\u60C5\u4E2D\u663E\u793A\u78C1\u529B\u94FE\u63A5',\r\n              default: true\r\n            },\r\n            {\r\n              key: 'showActressInfo',\r\n              name: '\u663E\u793A\u6F14\u5458\u4FE1\u606F',\r\n              type: 'boolean',\r\n              description: '\u5728\u8BE6\u60C5\u4E2D\u663E\u793A\u6F14\u5458\u76F8\u5173\u4FE1\u606F',\r\n              default: true\r\n            },\r\n            {\r\n              key: 'compactMode',\r\n              name: '\u7D27\u51D1\u6A21\u5F0F',\r\n              type: 'boolean',\r\n              description: '\u4F7F\u7528\u66F4\u7D27\u51D1\u7684\u663E\u793A\u5E03\u5C40',\r\n              default: false\r\n            },\r\n            {\r\n              key: 'enableImagePreview',\r\n              name: '\u542F\u7528\u56FE\u7247\u9884\u89C8',\r\n              type: 'boolean',\r\n              description: '\u70B9\u51FB\u56FE\u7247\u65F6\u663E\u793A\u9884\u89C8',\r\n              default: true\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: 'cache',\r\n          name: '\u7F13\u5B58\u8BBE\u7F6E',\r\n          description: '\u63A7\u5236\u7F13\u5B58\u7B56\u7565\u548C\u5B58\u50A8',\r\n          fields: [\r\n            {\r\n              key: 'enableCache',\r\n              name: '\u542F\u7528\u7F13\u5B58',\r\n              type: 'boolean',\r\n              description: '\u7F13\u5B58\u63D0\u53D6\u7ED3\u679C\u4EE5\u63D0\u9AD8\u6027\u80FD',\r\n              default: true\r\n            },\r\n            {\r\n              key: 'cacheDuration',\r\n              name: '\u7F13\u5B58\u65F6\u957F (\u6BEB\u79D2)',\r\n              type: 'number',\r\n              min: SYSTEM_VALIDATION.cacheDuration.min,\r\n              max: SYSTEM_VALIDATION.cacheDuration.max,\r\n              step: 3600000,\r\n              description: '\u7F13\u5B58\u6570\u636E\u7684\u4FDD\u5B58\u65F6\u95F4',\r\n              default: 86400000,\r\n              dependency: 'enableCache'\r\n            },\r\n            {\r\n              key: 'enableLocalCache',\r\n              name: '\u542F\u7528\u672C\u5730\u7F13\u5B58',\r\n              type: 'boolean',\r\n              description: '\u5728\u6D4F\u89C8\u5668\u672C\u5730\u5B58\u50A8\u7F13\u5B58\u6570\u636E',\r\n              default: true,\r\n              dependency: 'enableCache'\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: 'advanced',\r\n          name: '\u9AD8\u7EA7\u8BBE\u7F6E',\r\n          description: '\u9AD8\u7EA7\u529F\u80FD\u548C\u8D28\u91CF\u63A7\u5236',\r\n          fields: [\r\n            {\r\n              key: 'enableRetry',\r\n              name: '\u542F\u7528\u91CD\u8BD5',\r\n              type: 'boolean',\r\n              description: '\u63D0\u53D6\u5931\u8D25\u65F6\u81EA\u52A8\u91CD\u8BD5',\r\n              default: true\r\n            },\r\n            {\r\n              key: 'maxRetryAttempts',\r\n              name: '\u6700\u5927\u91CD\u8BD5\u6B21\u6570',\r\n              type: 'number',\r\n              min: 1,\r\n              max: 5,\r\n              description: '\u5931\u8D25\u540E\u7684\u6700\u5927\u91CD\u8BD5\u6B21\u6570',\r\n              default: 2,\r\n              dependency: 'enableRetry'\r\n            },\r\n            {\r\n              key: 'enableStrictDomainCheck',\r\n              name: '\u542F\u7528\u4E25\u683C\u57DF\u540D\u68C0\u67E5',\r\n              type: 'boolean',\r\n              description: '\u4E25\u683C\u9A8C\u8BC1\u94FE\u63A5\u57DF\u540D\u4E00\u81F4\u6027',\r\n              default: true\r\n            },\r\n            {\r\n              key: 'enableSpamFilter',\r\n              name: '\u542F\u7528\u5783\u573E\u8FC7\u6EE4',\r\n              type: 'boolean',\r\n              description: '\u8FC7\u6EE4\u5DF2\u77E5\u7684\u5783\u573E\u57DF\u540D\u548C\u94FE\u63A5',\r\n              default: true\r\n            },\r\n            {\r\n              key: 'requireMinimumData',\r\n              name: '\u8981\u6C42\u6700\u5C11\u6570\u636E',\r\n              type: 'boolean',\r\n              description: '\u53EA\u4FDD\u7559\u5305\u542B\u8DB3\u591F\u4FE1\u606F\u7684\u7ED3\u679C',\r\n              default: true\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: 'filter',\r\n          name: '\u5185\u5BB9\u8FC7\u6EE4',\r\n          description: '\u8FC7\u6EE4\u548C\u7B5B\u9009\u63D0\u53D6\u7684\u5185\u5BB9',\r\n          fields: [\r\n            {\r\n              key: 'enableContentFilter',\r\n              name: '\u542F\u7528\u5185\u5BB9\u8FC7\u6EE4',\r\n              type: 'boolean',\r\n              description: '\u6839\u636E\u5173\u952E\u8BCD\u8FC7\u6EE4\u5185\u5BB9',\r\n              default: false\r\n            },\r\n            {\r\n              key: 'contentFilterKeywords',\r\n              name: '\u8FC7\u6EE4\u5173\u952E\u8BCD',\r\n              type: 'array',\r\n              itemType: 'string',\r\n              description: '\u7528\u4E8E\u8FC7\u6EE4\u7684\u5173\u952E\u8BCD\u5217\u8868',\r\n              default: [],\r\n              dependency: 'enableContentFilter'\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      systemLimits: SYSTEM_VALIDATION\r\n    };\r\n  }\r\n\r\n  /**\r\n   * \u91CD\u7F6E\u914D\u7F6E\u4E3A\u9ED8\u8BA4\u503C\r\n   */\r\n  async resetUserConfig(env, userId) {\r\n    try {\r\n      await env.DB.prepare(`\r\n        DELETE FROM detail_extraction_config WHERE user_id = ?\r\n      `).bind(userId).run();\r\n      \r\n      return { success: true, config: this.defaultConfig };\r\n    } catch (error) {\r\n      console.error('\u91CD\u7F6E\u7528\u6237\u914D\u7F6E\u5931\u8D25:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u914D\u7F6E\u9884\u8BBE\r\n   */\r\n  getConfigPresets() {\r\n    return {\r\n      conservative: {\r\n        name: '\u4FDD\u5B88\u6A21\u5F0F',\r\n        description: '\u6700\u5C0F\u5316\u8D44\u6E90\u4F7F\u7528\uFF0C\u9002\u5408\u4F4E\u914D\u8BBE\u5907',\r\n        config: {\r\n          ...this.defaultConfig,\r\n          autoExtractDetails: false,\r\n          maxAutoExtractions: 3,\r\n          extractionBatchSize: 2,\r\n          maxDownloadLinks: 5,\r\n          maxMagnetLinks: 5,\r\n          maxScreenshots: 5,\r\n          extractionTimeout: 10000,\r\n          maxConcurrentExtractions: 1,\r\n          enableImagePreview: false,\r\n          compactMode: true\r\n        }\r\n      },\r\n      balanced: {\r\n        name: '\u5E73\u8861\u6A21\u5F0F',\r\n        description: '\u6027\u80FD\u548C\u529F\u80FD\u7684\u5E73\u8861\u914D\u7F6E',\r\n        config: this.defaultConfig\r\n      },\r\n      aggressive: {\r\n        name: '\u6027\u80FD\u6A21\u5F0F',\r\n        description: '\u6700\u5927\u5316\u63D0\u53D6\u901F\u5EA6\u548C\u5185\u5BB9\uFF0C\u9002\u5408\u9AD8\u914D\u8BBE\u5907',\r\n        config: {\r\n          ...this.defaultConfig,\r\n          autoExtractDetails: true,\r\n          maxAutoExtractions: 10,\r\n          extractionBatchSize: 5,\r\n          maxDownloadLinks: 15,\r\n          maxMagnetLinks: 15,\r\n          maxScreenshots: 15,\r\n          extractionTimeout: 25000,\r\n          maxConcurrentExtractions: 5,\r\n          enableConcurrentExtraction: true,\r\n          enableSmartBatching: true,\r\n          cacheDuration: 172800000 // 48\u5C0F\u65F6\r\n        }\r\n      },\r\n      quality: {\r\n        name: '\u8D28\u91CF\u4F18\u5148',\r\n        description: '\u6CE8\u91CD\u6570\u636E\u8D28\u91CF\u548C\u51C6\u786E\u6027',\r\n        config: {\r\n          ...this.defaultConfig,\r\n          extractionTimeout: 20000,\r\n          maxRetryAttempts: 3,\r\n          requireMinimumData: true,\r\n          enableStrictDomainCheck: true,\r\n          validateImageUrls: true,\r\n          validateDownloadLinks: true,\r\n          skipLowQualityResults: true\r\n        }\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n// \u521B\u5EFA\u5355\u4F8B\u5B9E\u4F8B\r\nexport const detailConfigService = new DetailConfigService();\r\nexport default detailConfigService;", "// src/handlers/detail-helpers.js - detail.js \u7684\u8F85\u52A9\u51FD\u6570\u96C6\u5408\r\nimport { utils } from '../utils.js';\r\nimport { CONFIG } from '../constants.js';\r\n\r\n// ===================== \u8F93\u5165\u9A8C\u8BC1\u76F8\u5173\u8F85\u52A9\u51FD\u6570 =====================\r\n\r\n/**\r\n * \u9A8C\u8BC1\u6279\u91CF\u8F93\u5165\r\n */\r\nexport function validateBatchInput(searchResults, options) {\r\n  if (!Array.isArray(searchResults) || searchResults.length === 0) {\r\n    return {\r\n      valid: false,\r\n      message: '\u641C\u7D22\u7ED3\u679C\u5217\u8868\u4E0D\u80FD\u4E3A\u7A7A',\r\n      details: { type: 'empty_array' }\r\n    };\r\n  }\r\n  \r\n  // \u9650\u5236\u6279\u91CF\u5904\u7406\u6570\u91CF\r\n  const maxBatchSize = CONFIG.DETAIL_EXTRACTION.MAX_BATCH_SIZE;\r\n  if (searchResults.length > maxBatchSize) {\r\n    return {\r\n      valid: false,\r\n      message: `\u6279\u91CF\u5904\u7406\u6570\u91CF\u4E0D\u80FD\u8D85\u8FC7 ${maxBatchSize} \u4E2A`,\r\n      details: { \r\n        current: searchResults.length, \r\n        max: maxBatchSize \r\n      }\r\n    };\r\n  }\r\n  \r\n  // \u9A8C\u8BC1\u6BCF\u4E2A\u641C\u7D22\u7ED3\u679C\u683C\u5F0F\r\n  const invalidResults = [];\r\n  searchResults.forEach((result, index) => {\r\n    if (!result || !result.url) {\r\n      invalidResults.push({ index, issue: 'missing_url' });\r\n    } else {\r\n      try {\r\n        new URL(result.url);\r\n      } catch {\r\n        invalidResults.push({ index, issue: 'invalid_url', url: result.url });\r\n      }\r\n    }\r\n  });\r\n  \r\n  if (invalidResults.length > 0) {\r\n    return {\r\n      valid: false,\r\n      message: '\u5B58\u5728\u65E0\u6548\u7684\u641C\u7D22\u7ED3\u679C\u6570\u636E',\r\n      details: { invalidResults }\r\n    };\r\n  }\r\n  \r\n  return { valid: true };\r\n}\r\n\r\n/**\r\n * \u6784\u5EFA\u6279\u91CF\u63D0\u53D6\u9009\u9879\r\n */\r\nexport function buildBatchExtractionOptions(options) {\r\n  return {\r\n    enableCache: options.enableCache !== false,\r\n    timeout: Math.min(Math.max(options.timeout || CONFIG.DETAIL_EXTRACTION.DEFAULT_TIMEOUT, \r\n                                CONFIG.DETAIL_EXTRACTION.MIN_TIMEOUT), \r\n                      CONFIG.DETAIL_EXTRACTION.MAX_TIMEOUT),\r\n    enableRetry: options.enableRetry !== false,\r\n    maxConcurrency: Math.min(options.maxConcurrency || CONFIG.DETAIL_EXTRACTION.MAX_CONCURRENT_EXTRACTIONS, 10),\r\n    progressInterval: options.progressInterval || 1000,\r\n    stopOnError: options.stopOnError || false,\r\n    strictValidation: options.strictValidation !== false\r\n  };\r\n}\r\n\r\n// ===================== \u8FDB\u5EA6\u56DE\u8C03\u76F8\u5173 =====================\r\n\r\n/**\r\n * \u521B\u5EFA\u8FDB\u5EA6\u56DE\u8C03\u51FD\u6570\r\n */\r\nexport function createProgressCallback() {\r\n  return (progress) => {\r\n    console.log(`\u6279\u91CF\u63D0\u53D6\u8FDB\u5EA6: ${progress.current}/${progress.total} (${progress.status}) - ${progress.item}`);\r\n    \r\n    // \u53EF\u4EE5\u5728\u8FD9\u91CC\u6DFB\u52A0\u5B9E\u65F6\u8FDB\u5EA6\u63A8\u9001\u903B\u8F91\r\n    // \u4F8B\u5982\uFF1AWebSocket \u63A8\u9001\u3001Server-Sent Events \u7B49\r\n  };\r\n}\r\n\r\n// ===================== \u7EDF\u8BA1\u751F\u6210\u76F8\u5173 =====================\r\n\r\n/**\r\n * \u751F\u6210\u6279\u91CF\u7EDF\u8BA1\r\n */\r\nexport function generateBatchStats(detailResults, totalTime) {\r\n  const stats = {\r\n    total: detailResults.length,\r\n    successful: 0,\r\n    cached: 0,\r\n    failed: 0,\r\n    partial: 0,\r\n    totalTime,\r\n    averageTime: 0,\r\n    successRate: 0,\r\n    cacheHitRate: 0\r\n  };\r\n  \r\n  detailResults.forEach(result => {\r\n    switch (result.extractionStatus) {\r\n      case 'success':\r\n        stats.successful++;\r\n        break;\r\n      case 'cached':\r\n        stats.cached++;\r\n        stats.successful++; // \u7F13\u5B58\u4E5F\u7B97\u6210\u529F\r\n        break;\r\n      case 'partial':\r\n        stats.partial++;\r\n        break;\r\n      case 'error':\r\n      default:\r\n        stats.failed++;\r\n        break;\r\n    }\r\n  });\r\n  \r\n  if (stats.total > 0) {\r\n    stats.averageTime = Math.round(totalTime / stats.total);\r\n    stats.successRate = Math.round((stats.successful / stats.total) * 100);\r\n    stats.cacheHitRate = Math.round((stats.cached / stats.total) * 100);\r\n  }\r\n  \r\n  // \u6309\u6E90\u7C7B\u578B\u5206\u7EC4\u7EDF\u8BA1\r\n  stats.bySource = {};\r\n  detailResults.forEach(result => {\r\n    const sourceType = result.sourceType || 'unknown';\r\n    if (!stats.bySource[sourceType]) {\r\n      stats.bySource[sourceType] = {\r\n        total: 0,\r\n        successful: 0,\r\n        failed: 0,\r\n        avgTime: 0\r\n      };\r\n    }\r\n    \r\n    stats.bySource[sourceType].total++;\r\n    if (result.extractionStatus === 'success' || result.extractionStatus === 'cached') {\r\n      stats.bySource[sourceType].successful++;\r\n    } else {\r\n      stats.bySource[sourceType].failed++;\r\n    }\r\n  });\r\n  \r\n  return stats;\r\n}\r\n\r\n/**\r\n * \u6784\u5EFA\u6279\u91CF\u6210\u529F\u54CD\u5E94\r\n */\r\nexport function buildBatchSuccessResponse(detailResults, stats, originalCount) {\r\n  return utils.successResponse({\r\n    results: detailResults.map(result => ({\r\n      // \u57FA\u672C\u4FE1\u606F\r\n      title: result.title || 'unknown',\r\n      code: result.code || '',\r\n      url: result.url || result.detailUrl || result.searchUrl,\r\n      sourceType: result.sourceType || 'unknown',\r\n      \r\n      // \u63D0\u53D6\u72B6\u6001\r\n      extractionStatus: result.extractionStatus || 'unknown',\r\n      extractionTime: result.extractionTime || 0,\r\n      extractionError: result.extractionError || null,\r\n      \r\n      // \u8BE6\u60C5\u6570\u636E\uFF08\u53EA\u5728\u6210\u529F\u65F6\u5305\u542B\u5B8C\u6574\u6570\u636E\uFF09\r\n      ...(result.extractionStatus === 'success' || result.extractionStatus === 'cached' ? {\r\n        coverImage: result.coverImage,\r\n        screenshots: result.screenshots,\r\n        actresses: result.actresses,\r\n        downloadLinks: result.downloadLinks,\r\n        magnetLinks: result.magnetLinks,\r\n        description: result.description,\r\n        tags: result.tags,\r\n        rating: result.rating\r\n      } : {})\r\n    })),\r\n    \r\n    stats: {\r\n      ...stats,\r\n      performance: {\r\n        itemsPerSecond: stats.totalTime > 0 ? Math.round((stats.total * 1000) / stats.totalTime) : 0,\r\n        averageTimePerItem: stats.averageTime,\r\n        totalTime: stats.totalTime\r\n      }\r\n    },\r\n    \r\n    summary: {\r\n      processed: stats.total,\r\n      successful: stats.successful,\r\n      failed: stats.failed,\r\n      cached: stats.cached,\r\n      message: `\u6279\u91CF\u8BE6\u60C5\u63D0\u53D6\u5B8C\u6210: ${stats.successful}/${stats.total} \u6210\u529F (${stats.successRate}%)`\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * \u6784\u5EFA\u6279\u91CF\u9519\u8BEF\u54CD\u5E94\r\n */\r\nexport function buildBatchErrorResponse(error, totalTime) {\r\n  return utils.errorResponse({\r\n    message: '\u6279\u91CF\u8BE6\u60C5\u63D0\u53D6\u5931\u8D25: ' + error.message,\r\n    error: {\r\n      type: error.name || 'BatchExtractionError',\r\n      message: error.message,\r\n      totalTime\r\n    },\r\n    stats: {\r\n      total: 0,\r\n      successful: 0,\r\n      cached: 0,\r\n      failed: 0,\r\n      totalTime,\r\n      averageTime: 0\r\n    }\r\n  }, 500);\r\n}\r\n\r\n// ===================== \u5386\u53F2\u8BB0\u5F55\u5904\u7406\u76F8\u5173 =====================\r\n\r\n/**\r\n * \u89E3\u6790\u5386\u53F2\u67E5\u8BE2\u53C2\u6570\r\n */\r\nexport function parseHistoryParams(searchParams) {\r\n  return {\r\n    limit: Math.min(parseInt(searchParams.get('limit') || '20'), 100),\r\n    offset: Math.max(parseInt(searchParams.get('offset') || '0'), 0),\r\n    source: searchParams.get('source') || null,\r\n    status: searchParams.get('status') || null,\r\n    dateRange: searchParams.get('dateRange') || null,\r\n    keyword: searchParams.get('keyword') || null,\r\n    sortBy: searchParams.get('sortBy') || 'created_at',\r\n    sortOrder: searchParams.get('sortOrder') || 'DESC'\r\n  };\r\n}\r\n\r\n/**\r\n * \u6784\u5EFA\u5386\u53F2\u67E5\u8BE2\r\n */\r\nexport function buildHistoryQuery(userId, params) {\r\n  let query = `\r\n    SELECT * FROM detail_extraction_history \r\n    WHERE user_id = ?\r\n  `;\r\n  const queryParams = [userId];\r\n  \r\n  // \u6DFB\u52A0\u8FC7\u6EE4\u6761\u4EF6\r\n  if (params.source) {\r\n    query += ` AND source_type = ?`;\r\n    queryParams.push(params.source);\r\n  }\r\n  \r\n  if (params.status) {\r\n    query += ` AND extraction_status = ?`;\r\n    queryParams.push(params.status);\r\n  }\r\n  \r\n  if (params.keyword) {\r\n    query += ` AND (url LIKE ? OR keyword LIKE ?)`;\r\n    const keywordPattern = `%${params.keyword}%`;\r\n    queryParams.push(keywordPattern, keywordPattern);\r\n  }\r\n  \r\n  if (params.dateRange) {\r\n    const dateRanges = {\r\n      'today': Date.now() - 24 * 60 * 60 * 1000,\r\n      'week': Date.now() - 7 * 24 * 60 * 60 * 1000,\r\n      'month': Date.now() - 30 * 24 * 60 * 60 * 1000,\r\n      'quarter': Date.now() - 90 * 24 * 60 * 60 * 1000\r\n    };\r\n    \r\n    if (dateRanges[params.dateRange]) {\r\n      query += ` AND created_at >= ?`;\r\n      queryParams.push(dateRanges[params.dateRange]);\r\n    }\r\n  }\r\n  \r\n  // \u6392\u5E8F\r\n  const validSortColumns = ['created_at', 'extraction_time', 'extraction_status'];\r\n  const sortBy = validSortColumns.includes(params.sortBy) ? params.sortBy : 'created_at';\r\n  const sortOrder = ['ASC', 'DESC'].includes(params.sortOrder) ? params.sortOrder : 'DESC';\r\n  \r\n  query += ` ORDER BY ${sortBy} ${sortOrder} LIMIT ? OFFSET ?`;\r\n  queryParams.push(params.limit, params.offset);\r\n  \r\n  return { query, queryParams };\r\n}\r\n\r\n/**\r\n * \u6784\u5EFA\u5386\u53F2\u8BA1\u6570\u67E5\u8BE2\r\n */\r\nexport function buildHistoryCountQuery(userId, params) {\r\n  let query = `SELECT COUNT(*) as total FROM detail_extraction_history WHERE user_id = ?`;\r\n  const queryParams = [userId];\r\n  \r\n  // \u5E94\u7528\u76F8\u540C\u7684\u8FC7\u6EE4\u6761\u4EF6\r\n  if (params.source) {\r\n    query += ` AND source_type = ?`;\r\n    queryParams.push(params.source);\r\n  }\r\n  \r\n  if (params.status) {\r\n    query += ` AND extraction_status = ?`;\r\n    queryParams.push(params.status);\r\n  }\r\n  \r\n  if (params.keyword) {\r\n    query += ` AND (url LIKE ? OR keyword LIKE ?)`;\r\n    const keywordPattern = `%${params.keyword}%`;\r\n    queryParams.push(keywordPattern, keywordPattern);\r\n  }\r\n  \r\n  return { query, params: queryParams };\r\n}\r\n\r\n/**\r\n * \u589E\u5F3A\u5386\u53F2\u8BB0\u5F55\u9879\r\n */\r\nexport function enhanceHistoryItem(item) {\r\n  return {\r\n    id: item.id,\r\n    url: item.url,\r\n    sourceType: item.source_type,\r\n    keyword: item.keyword,\r\n    extractionStatus: item.extraction_status,\r\n    extractionTime: item.extraction_time,\r\n    extractionError: item.extraction_error,\r\n    dataSize: item.data_size,\r\n    createdAt: new Date(item.created_at).toISOString(),\r\n    \r\n    // \u589E\u5F3A\u5B57\u6BB5\r\n    relativeTime: getRelativeTime(item.created_at),\r\n    statusBadge: getStatusBadge(item.extraction_status),\r\n    performanceRating: getPerformanceRating(item.extraction_time),\r\n    estimatedQuality: getEstimatedQuality(item)\r\n  };\r\n}\r\n\r\n// ===================== \u7F13\u5B58\u7EDF\u8BA1\u76F8\u5173 =====================\r\n\r\n/**\r\n * \u83B7\u53D6\u7528\u6237\u7279\u5B9A\u7684\u7F13\u5B58\u7EDF\u8BA1\r\n */\r\nexport async function getUserSpecificCacheStats(env, userId) {\r\n  try {\r\n    const userCacheQuery = await env.DB.prepare(`\r\n      SELECT \r\n        COUNT(*) as userCacheItems,\r\n        AVG(cache_size) as avgUserCacheSize,\r\n        SUM(access_count) as totalUserAccess\r\n      FROM detail_cache dc\r\n      JOIN detail_extraction_history deh ON dc.url_hash = deh.url\r\n      WHERE deh.user_id = ?\r\n    `).bind(userId).first();\r\n    \r\n    return {\r\n      cacheItems: userCacheQuery?.userCacheItems || 0,\r\n      averageSize: Math.round(userCacheQuery?.avgUserCacheSize || 0),\r\n      totalAccess: userCacheQuery?.totalUserAccess || 0,\r\n      hitRate: userCacheQuery?.totalUserAccess > 0 ? \r\n        Math.round((userCacheQuery.totalUserAccess / Math.max(userCacheQuery.userCacheItems, 1)) * 100) : 0\r\n    };\r\n  } catch (error) {\r\n    console.warn('\u83B7\u53D6\u7528\u6237\u7F13\u5B58\u7EDF\u8BA1\u5931\u8D25:', error);\r\n    return { cacheItems: 0, averageSize: 0, totalAccess: 0, hitRate: 0 };\r\n  }\r\n}\r\n\r\n/**\r\n * \u83B7\u53D6\u6E90\u7C7B\u578B\u7EDF\u8BA1\r\n */\r\nexport async function getSourceTypeStats(env, userId = null) {\r\n  try {\r\n    let query = `\r\n      SELECT \r\n        source_type,\r\n        COUNT(*) as count,\r\n        AVG(extraction_time) as avg_time,\r\n        COUNT(CASE WHEN extraction_status = 'success' THEN 1 END) as success_count,\r\n        COUNT(CASE WHEN extraction_status = 'cached' THEN 1 END) as cached_count\r\n      FROM detail_extraction_history\r\n    `;\r\n    \r\n    const params = [];\r\n    if (userId) {\r\n      query += ` WHERE user_id = ?`;\r\n      params.push(userId);\r\n    }\r\n    \r\n    query += ` GROUP BY source_type ORDER BY count DESC LIMIT 10`;\r\n    \r\n    const result = await env.DB.prepare(query).bind(...params).all();\r\n    \r\n    return result.results.map(item => ({\r\n      sourceType: item.source_type,\r\n      count: item.count,\r\n      averageTime: Math.round(item.avg_time || 0),\r\n      successRate: item.count > 0 ? Math.round((item.success_count / item.count) * 100) : 0,\r\n      cacheHitRate: item.count > 0 ? Math.round((item.cached_count / item.count) * 100) : 0\r\n    }));\r\n  } catch (error) {\r\n    console.warn('\u83B7\u53D6\u6E90\u7C7B\u578B\u7EDF\u8BA1\u5931\u8D25:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\n/**\r\n * \u83B7\u53D6\u7F13\u5B58\u6548\u7387\u7EDF\u8BA1\r\n */\r\nexport async function getCacheEfficiencyStats(env, userId) {\r\n  try {\r\n    const efficiencyQuery = await env.DB.prepare(`\r\n      SELECT \r\n        COUNT(CASE WHEN extraction_status = 'cached' THEN 1 END) as cached_count,\r\n        COUNT(*) as total_count,\r\n        AVG(CASE WHEN extraction_status != 'cached' THEN extraction_time END) as avg_extraction_time,\r\n        AVG(CASE WHEN extraction_status = 'cached' THEN extraction_time END) as avg_cache_time\r\n      FROM detail_extraction_history\r\n      WHERE user_id = ? AND created_at >= ?\r\n    `).bind(userId, Date.now() - 30 * 24 * 60 * 60 * 1000).first();\r\n    \r\n    const cacheHitRate = efficiencyQuery?.total_count > 0 ? \r\n      Math.round((efficiencyQuery.cached_count / efficiencyQuery.total_count) * 100) : 0;\r\n    \r\n    const timeSaved = (efficiencyQuery?.avg_extraction_time || 0) - (efficiencyQuery?.avg_cache_time || 0);\r\n    \r\n    return {\r\n      hitRate: cacheHitRate,\r\n      timeSavedPerRequest: Math.max(0, Math.round(timeSaved)),\r\n      totalTimeSaved: Math.max(0, Math.round(timeSaved * (efficiencyQuery?.cached_count || 0))),\r\n      efficiency: cacheHitRate > 70 ? 'excellent' : cacheHitRate > 50 ? 'good' : cacheHitRate > 30 ? 'fair' : 'poor'\r\n    };\r\n  } catch (error) {\r\n    console.warn('\u83B7\u53D6\u7F13\u5B58\u6548\u7387\u7EDF\u8BA1\u5931\u8D25:', error);\r\n    return { hitRate: 0, timeSavedPerRequest: 0, totalTimeSaved: 0, efficiency: 'unknown' };\r\n  }\r\n}\r\n\r\n// ===================== \u7F13\u5B58\u6E05\u7406\u76F8\u5173 =====================\r\n\r\n/**\r\n * \u89E3\u6790\u6E05\u7406\u53C2\u6570\r\n */\r\nexport function parseClearParams(searchParams) {\r\n  return {\r\n    count: Math.min(parseInt(searchParams.get('count') || '10'), 100),\r\n    olderThan: searchParams.get('olderThan') || null,\r\n    sourceType: searchParams.get('sourceType') || null,\r\n    minSize: parseInt(searchParams.get('minSize') || '0'),\r\n    maxSize: parseInt(searchParams.get('maxSize') || '0') || null\r\n  };\r\n}\r\n\r\n/**\r\n * \u5904\u7406\u8FC7\u671F\u7F13\u5B58\u6E05\u7406\r\n */\r\nexport async function handleExpiredCacheCleanup(env, params) {\r\n  try {\r\n    const count = await cacheManager.cleanupExpiredCache();\r\n    return count;\r\n  } catch (error) {\r\n    console.warn('\u7F13\u5B58\u7BA1\u7406\u5668\u6E05\u7406\u5931\u8D25\uFF0C\u4F7F\u7528\u6570\u636E\u5E93\u6E05\u7406:', error.message);\r\n    \r\n    const result = await env.DB.prepare(`\r\n      DELETE FROM detail_cache WHERE expires_at < ?\r\n    `).bind(Date.now()).run();\r\n    \r\n    return result.changes || 0;\r\n  }\r\n}\r\n\r\n/**\r\n * \u5904\u7406\u5168\u90E8\u7F13\u5B58\u6E05\u7406\r\n */\r\nexport async function handleAllCacheCleanup(env, params) {\r\n  try {\r\n    await cacheManager.clearAllCache();\r\n    \r\n    const result = await env.DB.prepare(`DELETE FROM detail_cache`).run();\r\n    \r\n    return {\r\n      count: result.changes || 0,\r\n      details: { operation: 'clear_all', timestamp: Date.now() }\r\n    };\r\n  } catch (error) {\r\n    console.warn('\u5168\u90E8\u7F13\u5B58\u6E05\u7406\u5931\u8D25:', error);\r\n    return { count: 0, details: { error: error.message } };\r\n  }\r\n}\r\n\r\n/**\r\n * \u5904\u7406LRU\u7F13\u5B58\u6E05\u7406\r\n */\r\nexport async function handleLRUCacheCleanup(env, params) {\r\n  try {\r\n    await cacheManager.cleanupLeastRecentlyUsed(params.count);\r\n    \r\n    return {\r\n      count: params.count,\r\n      details: { \r\n        operation: 'lru_cleanup', \r\n        targetCount: params.count,\r\n        timestamp: Date.now() \r\n      }\r\n    };\r\n  } catch (error) {\r\n    console.warn('LRU\u7F13\u5B58\u6E05\u7406\u5931\u8D25\uFF0C\u4F7F\u7528\u6570\u636E\u5E93\u6E05\u7406:', error.message);\r\n    \r\n    const result = await env.DB.prepare(`\r\n      DELETE FROM detail_cache \r\n      WHERE id IN (\r\n        SELECT id FROM detail_cache \r\n        ORDER BY last_accessed ASC \r\n        LIMIT ?\r\n      )\r\n    `).bind(params.count).run();\r\n    \r\n    return {\r\n      count: result.changes || 0,\r\n      details: { operation: 'lru_fallback', error: error.message }\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * \u5904\u7406\u9009\u62E9\u6027\u7F13\u5B58\u6E05\u7406\r\n */\r\nexport async function handleSelectiveCacheCleanup(env, params) {\r\n  let query = `DELETE FROM detail_cache WHERE 1=1`;\r\n  const queryParams = [];\r\n  \r\n  if (params.olderThan) {\r\n    const olderThanTime = Date.now() - (parseInt(params.olderThan) * 24 * 60 * 60 * 1000);\r\n    query += ` AND created_at < ?`;\r\n    queryParams.push(olderThanTime);\r\n  }\r\n  \r\n  if (params.sourceType) {\r\n    query += ` AND url LIKE ?`;\r\n    queryParams.push(`%${params.sourceType}%`);\r\n  }\r\n  \r\n  if (params.minSize > 0) {\r\n    query += ` AND cache_size >= ?`;\r\n    queryParams.push(params.minSize);\r\n  }\r\n  \r\n  if (params.maxSize) {\r\n    query += ` AND cache_size <= ?`;\r\n    queryParams.push(params.maxSize);\r\n  }\r\n  \r\n  try {\r\n    const result = await env.DB.prepare(query).bind(...queryParams).run();\r\n    \r\n    return {\r\n      count: result.changes || 0,\r\n      details: {\r\n        operation: 'selective_cleanup',\r\n        criteria: params,\r\n        timestamp: Date.now()\r\n      }\r\n    };\r\n  } catch (error) {\r\n    console.warn('\u9009\u62E9\u6027\u7F13\u5B58\u6E05\u7406\u5931\u8D25:', error);\r\n    return {\r\n      count: 0,\r\n      details: { error: error.message }\r\n    };\r\n  }\r\n}\r\n\r\n// ===================== \u914D\u7F6E\u76F8\u5173\u8F85\u52A9\u51FD\u6570 =====================\r\n\r\n/**\r\n * \u83B7\u53D6\u7CFB\u7EDF\u9650\u5236\r\n */\r\nexport function getSystemLimits() {\r\n  return {\r\n    maxTimeout: CONFIG.DETAIL_EXTRACTION.MAX_TIMEOUT,\r\n    minTimeout: CONFIG.DETAIL_EXTRACTION.MIN_TIMEOUT,\r\n    maxCacheDuration: CONFIG.DETAIL_EXTRACTION.MAX_CACHE_DURATION,\r\n    minCacheDuration: CONFIG.DETAIL_EXTRACTION.MIN_CACHE_DURATION,\r\n    maxBatchSize: CONFIG.DETAIL_EXTRACTION.MAX_BATCH_SIZE,\r\n    maxDownloadLinks: CONFIG.DETAIL_EXTRACTION.MAX_DOWNLOAD_LINKS,\r\n    maxMagnetLinks: CONFIG.DETAIL_EXTRACTION.MAX_MAGNET_LINKS,\r\n    maxScreenshots: CONFIG.DETAIL_EXTRACTION.MAX_SCREENSHOTS,\r\n    maxConcurrentExtractions: CONFIG.DETAIL_EXTRACTION.MAX_CONCURRENT_EXTRACTIONS\r\n  };\r\n}\r\n\r\n/**\r\n * \u83B7\u53D6\u9ED8\u8BA4\u914D\u7F6E\r\n */\r\nexport function getDefaultConfig() {\r\n  return {\r\n    enableDetailExtraction: true,\r\n    autoExtractDetails: false,\r\n    maxAutoExtractions: 5,\r\n    extractionBatchSize: 3,\r\n    extractionTimeout: CONFIG.DETAIL_EXTRACTION.DEFAULT_TIMEOUT,\r\n    enableRetry: true,\r\n    maxRetryAttempts: CONFIG.DETAIL_EXTRACTION.MAX_RETRY_ATTEMPTS,\r\n    enableCache: true,\r\n    cacheDuration: CONFIG.DETAIL_EXTRACTION.DEFAULT_CACHE_DURATION,\r\n    enableLocalCache: true,\r\n    showScreenshots: true,\r\n    showDownloadLinks: true,\r\n    showMagnetLinks: true,\r\n    showActressInfo: true,\r\n    compactMode: false,\r\n    enableImagePreview: true,\r\n    showExtractionProgress: true,\r\n    enableContentFilter: false,\r\n    contentFilterKeywords: []\r\n  };\r\n}\r\n\r\n// ===================== \u5B9E\u7528\u5DE5\u5177\u51FD\u6570 =====================\r\n\r\n/**\r\n * \u83B7\u53D6\u76F8\u5BF9\u65F6\u95F4\r\n */\r\nfunction getRelativeTime(timestamp) {\r\n  const now = Date.now();\r\n  const diff = now - timestamp;\r\n  \r\n  if (diff < 60000) return '\u521A\u521A';\r\n  if (diff < 3600000) return `${Math.floor(diff / 60000)}\u5206\u949F\u524D`;\r\n  if (diff < 86400000) return `${Math.floor(diff / 3600000)}\u5C0F\u65F6\u524D`;\r\n  if (diff < 604800000) return `${Math.floor(diff / 86400000)}\u5929\u524D`;\r\n  return `${Math.floor(diff / 604800000)}\u5468\u524D`;\r\n}\r\n\r\n/**\r\n * \u83B7\u53D6\u72B6\u6001\u5FBD\u7AE0\r\n */\r\nfunction getStatusBadge(status) {\r\n  const badges = {\r\n    'success': { text: '\u6210\u529F', color: 'green', icon: '\u2713' },\r\n    'cached': { text: '\u7F13\u5B58', color: 'blue', icon: '\u26A1' },\r\n    'partial': { text: '\u90E8\u5206', color: 'yellow', icon: '\u26A0' },\r\n    'error': { text: '\u5931\u8D25', color: 'red', icon: '\u2717' },\r\n    'timeout': { text: '\u8D85\u65F6', color: 'orange', icon: '\u23F1' }\r\n  };\r\n  \r\n  return badges[status] || { text: '\u672A\u77E5', color: 'gray', icon: '?' };\r\n}\r\n\r\n/**\r\n * \u83B7\u53D6\u6027\u80FD\u8BC4\u7EA7\r\n */\r\nfunction getPerformanceRating(extractionTime) {\r\n  if (extractionTime < 3000) return 'excellent';\r\n  if (extractionTime < 8000) return 'good';\r\n  if (extractionTime < 15000) return 'fair';\r\n  return 'poor';\r\n}\r\n\r\n/**\r\n * \u4F30\u7B97\u8D28\u91CF\r\n */\r\nfunction getEstimatedQuality(item) {\r\n  let score = 0;\r\n  \r\n  // \u57FA\u4E8E\u63D0\u53D6\u65F6\u95F4\r\n  if (item.extraction_time < 5000) score += 2;\r\n  else if (item.extraction_time < 10000) score += 1;\r\n  \r\n  // \u57FA\u4E8E\u6570\u636E\u5927\u5C0F\r\n  if (item.data_size > 5000) score += 2;\r\n  else if (item.data_size > 2000) score += 1;\r\n  \r\n  // \u57FA\u4E8E\u72B6\u6001\r\n  if (item.extraction_status === 'success') score += 3;\r\n  else if (item.extraction_status === 'cached') score += 2;\r\n  \r\n  if (score >= 6) return 'high';\r\n  if (score >= 4) return 'medium';\r\n  if (score >= 2) return 'low';\r\n  return 'unknown';\r\n}", "// src/handlers/detail.js - \u4F18\u5316\u7248\u672C\uFF1A\u4F7F\u7528\u914D\u7F6E\u670D\u52A1\u800C\u975E\u786C\u7F16\u7801\u914D\u7F6E\r\nimport { utils } from '../utils.js';\r\nimport { authenticate } from '../middleware.js';\r\nimport { SYSTEM_VALIDATION, DETAIL_EXTRACTION_STATUS } from '../constants.js';\r\nimport { detailExtractor } from '../services/detail-extractor.js';\r\nimport { cacheManager, initializeCacheManager } from '../services/cache-manager.js';\r\nimport { extractionValidator } from '../services/extraction-validator.js';\r\nimport { detailConfigService } from '../services/detail-config-service.js';\r\n\r\n// \u5F15\u5165\u6240\u6709\u9700\u8981\u7684\u8F85\u52A9\u51FD\u6570\r\nimport {\r\n  validateBatchInput,\r\n  createProgressCallback,\r\n  generateBatchStats,\r\n  buildBatchSuccessResponse,\r\n  buildBatchErrorResponse,\r\n  parseHistoryParams,\r\n  buildHistoryQuery,\r\n  buildHistoryCountQuery,\r\n  enhanceHistoryItem,\r\n  getUserSpecificCacheStats,\r\n  getSourceTypeStats,\r\n  getCacheEfficiencyStats,\r\n  parseClearParams,\r\n  handleExpiredCacheCleanup,\r\n  handleAllCacheCleanup,\r\n  handleLRUCacheCleanup,\r\n  handleSelectiveCacheCleanup\r\n} from './detail-helpers.js';\r\n\r\n// \u5168\u5C40\u7F13\u5B58\u7BA1\u7406\u5668\u521D\u59CB\u5316\u6807\u5FD7\r\nlet cacheManagerInitialized = false;\r\n\r\n// \u786E\u4FDD\u7F13\u5B58\u7BA1\u7406\u5668\u53EA\u521D\u59CB\u5316\u4E00\u6B21\r\nasync function ensureCacheManagerInitialized(env) {\r\n  if (!cacheManagerInitialized) {\r\n    try {\r\n      await initializeCacheManager(env);\r\n      cacheManagerInitialized = true;\r\n      console.log('\u7F13\u5B58\u7BA1\u7406\u5668\u521D\u59CB\u5316\u6210\u529F');\r\n    } catch (error) {\r\n      console.warn('\u7F13\u5B58\u7BA1\u7406\u5668\u521D\u59CB\u5316\u5931\u8D25\uFF0C\u5C06\u4F7F\u7528\u964D\u7EA7\u6A21\u5F0F:', error.message);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * \u5E94\u7528\u914D\u7F6E\u9884\u8BBE - \u65B0\u589E\r\n */\r\nexport async function applyConfigPresetHandler(request, env) {\r\n  const user = await authenticate(request, env);\r\n  if (!user) {\r\n    return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n  }\r\n  \r\n  try {\r\n    const body = await utils.safeJsonParse(request, {});\r\n    const { preset } = body;\r\n    \r\n    if (!preset) {\r\n      return utils.errorResponse('\u9884\u8BBE\u540D\u79F0\u4E0D\u80FD\u4E3A\u7A7A', 400);\r\n    }\r\n    \r\n    const presets = detailConfigService.getConfigPresets();\r\n    if (!presets[preset]) {\r\n      return utils.errorResponse(`\u672A\u77E5\u7684\u914D\u7F6E\u9884\u8BBE: ${preset}`, 400);\r\n    }\r\n    \r\n    const presetConfig = presets[preset].config;\r\n    \r\n    // \u4FDD\u5B58\u9884\u8BBE\u914D\u7F6E\r\n    await detailConfigService.saveUserConfig(env, user.id, presetConfig);\r\n    \r\n    // \u8BB0\u5F55\u7528\u6237\u884C\u4E3A\r\n    try {\r\n      await utils.logUserAction(env, user.id, 'detail_config_preset_apply', {\r\n        preset,\r\n        timestamp: Date.now()\r\n      }, request);\r\n    } catch (logError) {\r\n      console.warn('\u8BB0\u5F55\u9884\u8BBE\u5E94\u7528\u5931\u8D25:', logError.message);\r\n    }\r\n    \r\n    return utils.successResponse({\r\n      message: `\u5DF2\u5E94\u7528 ${presets[preset].name} \u914D\u7F6E\u9884\u8BBE`,\r\n      preset,\r\n      config: presetConfig,\r\n      description: presets[preset].description\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('\u5E94\u7528\u914D\u7F6E\u9884\u8BBE\u5931\u8D25:', error);\r\n    return utils.errorResponse('\u5E94\u7528\u9884\u8BBE\u5931\u8D25: ' + error.message, 500);\r\n  }\r\n}\r\n\r\n// ===================== \u8F85\u52A9\u51FD\u6570 =====================\r\n\r\n/**\r\n * \u9A8C\u8BC1\u63D0\u53D6\u8F93\u5165\r\n */\r\nfunction validateExtractionInput(searchResult) {\r\n  if (!searchResult || !searchResult.url) {\r\n    return {\r\n      valid: false,\r\n      message: '\u641C\u7D22\u7ED3\u679C\u6570\u636E\u4E0D\u5B8C\u6574',\r\n      details: { missing: ['url'] }\r\n    };\r\n  }\r\n  \r\n  try {\r\n    new URL(searchResult.url);\r\n  } catch (error) {\r\n    return {\r\n      valid: false,\r\n      message: '\u65E0\u6548\u7684URL\u683C\u5F0F',\r\n      details: { invalidUrl: searchResult.url }\r\n    };\r\n  }\r\n  \r\n  return { valid: true };\r\n}\r\n\r\n/**\r\n * \u4ECE\u7528\u6237\u914D\u7F6E\u6784\u5EFA\u63D0\u53D6\u9009\u9879\r\n */\r\nfunction buildExtractionOptionsFromConfig(userConfig, overrideOptions = {}) {\r\n  return {\r\n    // \u57FA\u7840\u9009\u9879\r\n    enableCache: userConfig.enableCache && (overrideOptions.enableCache !== false),\r\n    timeout: overrideOptions.timeout || userConfig.extractionTimeout,\r\n    enableRetry: userConfig.enableRetry && (overrideOptions.enableRetry !== false),\r\n    maxRetries: overrideOptions.maxRetries || userConfig.maxRetryAttempts,\r\n    \r\n    // \u5185\u5BB9\u63A7\u5236\r\n    maxDownloadLinks: userConfig.maxDownloadLinks,\r\n    maxMagnetLinks: userConfig.maxMagnetLinks,\r\n    maxScreenshots: userConfig.maxScreenshots,\r\n    \r\n    // \u8D28\u91CF\u63A7\u5236\r\n    strictValidation: userConfig.enableStrictDomainCheck,\r\n    requireMinimumData: userConfig.requireMinimumData,\r\n    validateImageUrls: userConfig.validateImageUrls,\r\n    validateDownloadLinks: userConfig.validateDownloadLinks,\r\n    \r\n    // \u8FC7\u6EE4\u9009\u9879\r\n    enableContentFilter: userConfig.enableContentFilter,\r\n    contentFilterKeywords: userConfig.contentFilterKeywords,\r\n    enableSpamFilter: userConfig.enableSpamFilter,\r\n    \r\n    // \u5176\u4ED6\u9009\u9879\r\n    sourceType: overrideOptions.sourceType || null,\r\n    preferOriginalSources: userConfig.preferOriginalSources,\r\n    enableAutoCodeExtraction: userConfig.enableAutoCodeExtraction\r\n  };\r\n}\r\n\r\n/**\r\n * \u4ECE\u7528\u6237\u914D\u7F6E\u6784\u5EFA\u6279\u91CF\u63D0\u53D6\u9009\u9879\r\n */\r\nfunction buildBatchExtractionOptionsFromConfig(userConfig, overrideOptions = {}) {\r\n  const baseOptions = buildExtractionOptionsFromConfig(userConfig, overrideOptions);\r\n  \r\n  return {\r\n    ...baseOptions,\r\n    // \u6279\u91CF\u7279\u5B9A\u9009\u9879\r\n    batchSize: overrideOptions.batchSize || userConfig.extractionBatchSize,\r\n    maxConcurrency: userConfig.enableConcurrentExtraction ? \r\n      (overrideOptions.maxConcurrency || userConfig.maxConcurrentExtractions) : 1,\r\n    enableSmartBatching: userConfig.enableSmartBatching,\r\n    progressInterval: overrideOptions.progressInterval || 1000,\r\n    stopOnError: overrideOptions.stopOnError || false\r\n  };\r\n}\r\n\r\n/**\r\n * \u6784\u5EFA\u6210\u529F\u54CD\u5E94\r\n */\r\nfunction buildSuccessResponse(detailInfo, searchResult, startTime, userConfig) {\r\n  const extractionTime = Date.now() - startTime;\r\n  \r\n  // \u6839\u636E\u7528\u6237\u914D\u7F6E\u8FC7\u6EE4\u54CD\u5E94\u6570\u636E\r\n  const filteredDetailInfo = filterDetailInfoByConfig(detailInfo, userConfig);\r\n  \r\n  return utils.successResponse({\r\n    detailInfo: {\r\n      // \u57FA\u672C\u4FE1\u606F\r\n      title: filteredDetailInfo.title || searchResult.title || '\u672A\u77E5\u6807\u9898',\r\n      code: filteredDetailInfo.code || '',\r\n      sourceType: filteredDetailInfo.sourceType || 'unknown',\r\n      \r\n      // URL\u4FE1\u606F\r\n      detailUrl: filteredDetailInfo.detailPageUrl || filteredDetailInfo.detailUrl || searchResult.url,\r\n      searchUrl: filteredDetailInfo.searchUrl || searchResult.url,\r\n      originalUrl: searchResult.url,\r\n      \r\n      // \u6839\u636E\u914D\u7F6E\u663E\u793A\u7684\u5185\u5BB9\r\n      ...filteredDetailInfo,\r\n      \r\n      // \u63D0\u53D6\u5143\u6570\u636E\r\n      extractionStatus: detailInfo.extractionStatus || 'unknown',\r\n      extractionTime: detailInfo.extractionTime || extractionTime,\r\n      extractedAt: detailInfo.extractedAt || Date.now(),\r\n      fromCache: detailInfo.extractionStatus === 'cached'\r\n    },\r\n    metadata: {\r\n      totalTime: extractionTime,\r\n      fromCache: detailInfo.extractionStatus === 'cached',\r\n      retryCount: detailInfo.retryCount || 0,\r\n      cacheKey: detailInfo.cacheKey || null,\r\n      configApplied: true,\r\n      userConfigured: true\r\n    },\r\n    message: detailInfo.extractionStatus === 'success' ? \r\n             '\u8BE6\u60C5\u63D0\u53D6\u5B8C\u6210' : \r\n             (detailInfo.extractionStatus === 'cached' ? '\u4F7F\u7528\u7F13\u5B58\u6570\u636E' : '\u8BE6\u60C5\u63D0\u53D6\u5931\u8D25')\r\n  });\r\n}\r\n\r\n/**\r\n * \u6839\u636E\u7528\u6237\u914D\u7F6E\u8FC7\u6EE4\u8BE6\u60C5\u4FE1\u606F\r\n */\r\nfunction filterDetailInfoByConfig(detailInfo, userConfig) {\r\n  const filtered = {\r\n    title: detailInfo.title,\r\n    code: detailInfo.code,\r\n    sourceType: detailInfo.sourceType,\r\n    detailPageUrl: detailInfo.detailPageUrl,\r\n    searchUrl: detailInfo.searchUrl\r\n  };\r\n  \r\n  // \u6839\u636E\u914D\u7F6E\u51B3\u5B9A\u662F\u5426\u5305\u542B\u5404\u79CD\u5185\u5BB9\r\n  if (userConfig.showScreenshots && detailInfo.screenshots) {\r\n    filtered.screenshots = detailInfo.screenshots.slice(0, userConfig.maxScreenshots);\r\n  }\r\n  \r\n  if (userConfig.showDownloadLinks && detailInfo.downloadLinks) {\r\n    filtered.downloadLinks = detailInfo.downloadLinks.slice(0, userConfig.maxDownloadLinks);\r\n  }\r\n  \r\n  if (userConfig.showMagnetLinks && detailInfo.magnetLinks) {\r\n    filtered.magnetLinks = detailInfo.magnetLinks.slice(0, userConfig.maxMagnetLinks);\r\n  }\r\n  \r\n  if (userConfig.showActressInfo && detailInfo.actresses) {\r\n    filtered.actresses = detailInfo.actresses;\r\n  }\r\n  \r\n  if (userConfig.showExtractedTags && detailInfo.tags) {\r\n    filtered.tags = detailInfo.tags;\r\n  }\r\n  \r\n  if (userConfig.showRating && detailInfo.rating) {\r\n    filtered.rating = detailInfo.rating;\r\n  }\r\n  \r\n  if (userConfig.showDescription && detailInfo.description) {\r\n    filtered.description = detailInfo.description;\r\n  }\r\n  \r\n  // \u5176\u4ED6\u57FA\u672C\u4FE1\u606F\u59CB\u7EC8\u5305\u542B\r\n  if (detailInfo.coverImage) filtered.coverImage = detailInfo.coverImage;\r\n  if (detailInfo.director) filtered.director = detailInfo.director;\r\n  if (detailInfo.studio) filtered.studio = detailInfo.studio;\r\n  if (detailInfo.label) filtered.label = detailInfo.label;\r\n  if (detailInfo.series) filtered.series = detailInfo.series;\r\n  if (detailInfo.releaseDate) filtered.releaseDate = detailInfo.releaseDate;\r\n  if (detailInfo.duration) filtered.duration = detailInfo.duration;\r\n  if (detailInfo.quality) filtered.quality = detailInfo.quality;\r\n  if (detailInfo.fileSize) filtered.fileSize = detailInfo.fileSize;\r\n  if (detailInfo.resolution) filtered.resolution = detailInfo.resolution;\r\n  \r\n  return filtered;\r\n}\r\n\r\n/**\r\n * \u6784\u5EFA\u9519\u8BEF\u54CD\u5E94\r\n */\r\nfunction buildErrorResponse(error, extractionTime, searchResult) {\r\n  const errorType = error.name || 'UnknownError';\r\n  let statusCode = 500;\r\n  let errorCategory = 'internal';\r\n  \r\n  switch (errorType) {\r\n    case 'ValidationError':\r\n      statusCode = 400;\r\n      errorCategory = 'validation';\r\n      break;\r\n    case 'TimeoutError':\r\n      statusCode = 408;\r\n      errorCategory = 'timeout';\r\n      break;\r\n    case 'NetworkError':\r\n      statusCode = 502;\r\n      errorCategory = 'network';\r\n      break;\r\n    case 'ParseError':\r\n      statusCode = 422;\r\n      errorCategory = 'parsing';\r\n      break;\r\n  }\r\n  \r\n  const errorDetail = {\r\n    extractionStatus: 'error',\r\n    extractionError: error.message,\r\n    errorType,\r\n    errorCategory,\r\n    extractionTime,\r\n    extractedAt: Date.now(),\r\n    searchUrl: searchResult?.url || 'unknown',\r\n    retryable: ['TimeoutError', 'NetworkError'].includes(errorType)\r\n  };\r\n  \r\n  return utils.errorResponse({\r\n    message: '\u8BE6\u60C5\u63D0\u53D6\u5931\u8D25: ' + error.message,\r\n    detailInfo: errorDetail,\r\n    error: {\r\n      type: errorType,\r\n      category: errorCategory,\r\n      retryable: errorDetail.retryable,\r\n      suggestions: generateErrorSuggestions(errorType, error.message)\r\n    }\r\n  }, statusCode);\r\n}\r\n\r\n/**\r\n * \u751F\u6210\u9519\u8BEF\u5EFA\u8BAE\r\n */\r\nfunction generateErrorSuggestions(errorType, errorMessage) {\r\n  const suggestions = [];\r\n  \r\n  switch (errorType) {\r\n    case 'TimeoutError':\r\n      suggestions.push('\u5C1D\u8BD5\u589E\u52A0\u8D85\u65F6\u65F6\u95F4');\r\n      suggestions.push('\u68C0\u67E5\u7F51\u7EDC\u8FDE\u63A5');\r\n      suggestions.push('\u7A0D\u540E\u91CD\u8BD5');\r\n      break;\r\n    case 'ValidationError':\r\n      suggestions.push('\u68C0\u67E5\u8F93\u5165\u6570\u636E\u683C\u5F0F');\r\n      suggestions.push('\u786E\u4FDDURL\u6709\u6548');\r\n      break;\r\n    case 'NetworkError':\r\n      suggestions.push('\u68C0\u67E5\u7F51\u7EDC\u8FDE\u63A5');\r\n      suggestions.push('\u76EE\u6807\u7F51\u7AD9\u53EF\u80FD\u6682\u65F6\u4E0D\u53EF\u7528');\r\n      break;\r\n    case 'ParseError':\r\n      suggestions.push('\u76EE\u6807\u9875\u9762\u7ED3\u6784\u53EF\u80FD\u5DF2\u53D8\u66F4');\r\n      suggestions.push('\u5C1D\u8BD5\u4F7F\u7528\u901A\u7528\u89E3\u6790\u6A21\u5F0F');\r\n      break;\r\n  }\r\n  \r\n  return suggestions;\r\n}\r\n\r\n/**\r\n * \u68C0\u6D4B\u914D\u7F6E\u53D8\u66F4\r\n */\r\nfunction detectConfigChanges(currentConfig, newConfig) {\r\n  const changes = {\r\n    changed: [],\r\n    added: [],\r\n    removed: []\r\n  };\r\n  \r\n  const allKeys = new Set([...Object.keys(currentConfig), ...Object.keys(newConfig)]);\r\n  \r\n  for (const key of allKeys) {\r\n    if (!(key in currentConfig)) {\r\n      changes.added.push(key);\r\n    } else if (!(key in newConfig)) {\r\n      changes.removed.push(key);\r\n    } else if (JSON.stringify(currentConfig[key]) !== JSON.stringify(newConfig[key])) {\r\n      changes.changed.push({\r\n        key,\r\n        from: currentConfig[key],\r\n        to: newConfig[key]\r\n      });\r\n    }\r\n  }\r\n  \r\n  return changes;\r\n}\r\n\r\n/**\r\n * \u68C0\u67E5\u662F\u5426\u4F7F\u7528\u9ED8\u8BA4\u914D\u7F6E\r\n */\r\nasync function isUsingDefaultConfig(env, userId) {\r\n  try {\r\n    const userConfig = await env.DB.prepare(`\r\n      SELECT id FROM detail_extraction_config WHERE user_id = ?\r\n    `).bind(userId).first();\r\n    \r\n    return !userConfig;\r\n  } catch (error) {\r\n    console.error('\u68C0\u67E5\u9ED8\u8BA4\u914D\u7F6E\u72B6\u6001\u5931\u8D25:', error);\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * \u83B7\u53D6\u7528\u6237\u4F7F\u7528\u7EDF\u8BA1\r\n */\r\nasync function getUserUsageStats(env, userId) {\r\n  try {\r\n    const stats = await env.DB.prepare(`\r\n      SELECT \r\n        COUNT(*) as totalExtractions,\r\n        COUNT(CASE WHEN extraction_status = 'success' THEN 1 END) as successfulExtractions,\r\n        COUNT(CASE WHEN extraction_status = 'cached' THEN 1 END) as cachedExtractions,\r\n        AVG(extraction_time) as averageTime,\r\n        MAX(extraction_time) as maxTime,\r\n        MIN(extraction_time) as minTime\r\n      FROM detail_extraction_history \r\n      WHERE user_id = ? AND created_at >= ?\r\n    `).bind(userId, Date.now() - 30 * 24 * 60 * 60 * 1000).first();\r\n    \r\n    return {\r\n      totalExtractions: stats?.totalExtractions || 0,\r\n      successfulExtractions: stats?.successfulExtractions || 0,\r\n      cachedExtractions: stats?.cachedExtractions || 0,\r\n      averageTime: Math.round(stats?.averageTime || 0),\r\n      maxTime: stats?.maxTime || 0,\r\n      minTime: stats?.minTime || 0,\r\n      successRate: stats?.totalExtractions > 0 ? \r\n        Math.round((stats.successfulExtractions / stats.totalExtractions) * 100) : 0,\r\n      cacheHitRate: stats?.totalExtractions > 0 ? \r\n        Math.round((stats.cachedExtractions / stats.totalExtractions) * 100) : 0\r\n    };\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u7528\u6237\u4F7F\u7528\u7EDF\u8BA1\u5931\u8D25:', error);\r\n    return {\r\n      totalExtractions: 0,\r\n      successfulExtractions: 0,\r\n      cachedExtractions: 0,\r\n      averageTime: 0,\r\n      maxTime: 0,\r\n      minTime: 0,\r\n      successRate: 0,\r\n      cacheHitRate: 0\r\n    };\r\n  }\r\n}\r\n\r\n// \u5360\u4F4D\u7B26\u51FD\u6570\uFF08\u9700\u8981\u5728 detail-helpers.js \u4E2D\u5B9E\u73B0\uFF09\r\nfunction getUserDetailStats(env, userId) {\r\n  return getUserUsageStats(env, userId);\r\n}\r\n\r\nfunction getPerformanceStats(env, userId) {\r\n  return getUserUsageStats(env, userId);\r\n}\r\n\r\nfunction logUserExtractionAction(env, userId, searchResult, detailInfo, request) {\r\n  return utils.logUserAction(env, userId, 'detail_extraction', {\r\n    url: searchResult.url,\r\n    title: searchResult.title,\r\n    extractionStatus: detailInfo.extractionStatus,\r\n    extractionTime: detailInfo.extractionTime,\r\n    sourceType: detailInfo.sourceType\r\n  }, request);\r\n}\r\n\r\nfunction logBatchExtractionAction(env, userId, searchResults, detailResults, stats, request) {\r\n  return utils.logUserAction(env, userId, 'batch_detail_extraction', {\r\n    totalResults: searchResults.length,\r\n    successfulExtractions: stats.successful,\r\n    failedExtractions: stats.failed,\r\n    totalTime: stats.totalTime\r\n  }, request);\r\n}\r\n\r\n/**\r\n * \u63D0\u53D6\u5355\u4E2A\u641C\u7D22\u7ED3\u679C\u7684\u8BE6\u60C5\u4FE1\u606F - \u4F7F\u7528\u914D\u7F6E\u670D\u52A1\u7248\u672C\r\n */\r\nexport async function extractSingleDetailHandler(request, env) {\r\n  const startTime = Date.now();\r\n  let user = null;\r\n  \r\n  try {\r\n    // \u786E\u4FDD\u7F13\u5B58\u7BA1\u7406\u5668\u5DF2\u521D\u59CB\u5316\r\n    await ensureCacheManagerInitialized(env);\r\n    \r\n    const body = await utils.safeJsonParse(request, {});\r\n    const { searchResult, options = {} } = body;\r\n    \r\n    // \u9A8C\u8BC1\u8F93\u5165\r\n    const validationResult = validateExtractionInput(searchResult);\r\n    if (!validationResult.valid) {\r\n      return utils.errorResponse(validationResult.message, 400);\r\n    }\r\n    \r\n    // \u83B7\u53D6\u7528\u6237\u8BA4\u8BC1\u4FE1\u606F\r\n    user = await authenticate(request, env).catch(() => null);\r\n    \r\n    // \u83B7\u53D6\u7528\u6237\u914D\u7F6E\uFF08\u5982\u679C\u5DF2\u8BA4\u8BC1\uFF09\r\n    const userConfig = user ? \r\n      await detailConfigService.getUserConfig(env, user.id) : \r\n      detailConfigService.getDefaultUserConfig();\r\n    \r\n    // \u68C0\u67E5\u662F\u5426\u542F\u7528\u8BE6\u60C5\u63D0\u53D6\r\n    if (!userConfig.enableDetailExtraction) {\r\n      return utils.errorResponse('\u8BE6\u60C5\u63D0\u53D6\u529F\u80FD\u5DF2\u88AB\u7981\u7528', 403);\r\n    }\r\n    \r\n    // \u5408\u5E76\u914D\u7F6E\u548C\u9009\u9879\r\n    const extractOptions = buildExtractionOptionsFromConfig(userConfig, options);\r\n    \r\n    console.log(`\u5F00\u59CB\u63D0\u53D6\u8BE6\u60C5: ${searchResult.title} - ${searchResult.url}`);\r\n    console.log('\u4F7F\u7528\u914D\u7F6E:', extractOptions);\r\n    \r\n    // \u6267\u884C\u8BE6\u60C5\u63D0\u53D6\r\n    const detailInfo = await detailExtractor.extractSingleDetail(searchResult, extractOptions);\r\n    \r\n    // \u8BB0\u5F55\u7528\u6237\u884C\u4E3A\uFF08\u5982\u679C\u5DF2\u8BA4\u8BC1\uFF09\r\n    if (user) {\r\n      try {\r\n        await logUserExtractionAction(env, user.id, searchResult, detailInfo, request);\r\n      } catch (logError) {\r\n        console.warn('\u8BB0\u5F55\u7528\u6237\u884C\u4E3A\u5931\u8D25:', logError.message);\r\n      }\r\n    }\r\n    \r\n    // \u6784\u5EFA\u6210\u529F\u54CD\u5E94\r\n    return buildSuccessResponse(detailInfo, searchResult, startTime, userConfig);\r\n    \r\n  } catch (error) {\r\n    const extractionTime = Date.now() - startTime;\r\n    console.error('\u8BE6\u60C5\u63D0\u53D6\u5904\u7406\u5931\u8D25:', error);\r\n    \r\n    return buildErrorResponse(error, extractionTime, searchResult);\r\n  }\r\n}\r\n\r\n/**\r\n * \u6279\u91CF\u63D0\u53D6\u641C\u7D22\u7ED3\u679C\u7684\u8BE6\u60C5\u4FE1\u606F - \u4F7F\u7528\u914D\u7F6E\u670D\u52A1\u7248\u672C\r\n */\r\nexport async function extractBatchDetailsHandler(request, env) {\r\n  const startTime = Date.now();\r\n  let user = null;\r\n  \r\n  try {\r\n    // \u786E\u4FDD\u7F13\u5B58\u7BA1\u7406\u5668\u5DF2\u521D\u59CB\u5316\r\n    await ensureCacheManagerInitialized(env);\r\n    \r\n    const body = await utils.safeJsonParse(request, {});\r\n    const { searchResults, options = {} } = body;\r\n    \r\n    // \u6279\u91CF\u8F93\u5165\u9A8C\u8BC1\r\n    const batchValidation = validateBatchInput(searchResults, options);\r\n    if (!batchValidation.valid) {\r\n      return utils.errorResponse(batchValidation.message, 400);\r\n    }\r\n    \r\n    // \u83B7\u53D6\u7528\u6237\u8BA4\u8BC1\u4FE1\u606F\r\n    user = await authenticate(request, env).catch(() => null);\r\n    \r\n    // \u83B7\u53D6\u7528\u6237\u914D\u7F6E\r\n    const userConfig = user ? \r\n      await detailConfigService.getUserConfig(env, user.id) : \r\n      detailConfigService.getDefaultUserConfig();\r\n    \r\n    // \u68C0\u67E5\u662F\u5426\u542F\u7528\u8BE6\u60C5\u63D0\u53D6\r\n    if (!userConfig.enableDetailExtraction) {\r\n      return utils.errorResponse('\u8BE6\u60C5\u63D0\u53D6\u529F\u80FD\u5DF2\u88AB\u7981\u7528', 403);\r\n    }\r\n    \r\n    // \u6784\u5EFA\u6279\u91CF\u63D0\u53D6\u9009\u9879\r\n    const extractOptions = buildBatchExtractionOptionsFromConfig(userConfig, options);\r\n    \r\n    console.log(`\u5F00\u59CB\u6279\u91CF\u63D0\u53D6 ${searchResults.length} \u4E2A\u7ED3\u679C\u7684\u8BE6\u60C5`);\r\n    console.log('\u6279\u91CF\u63D0\u53D6\u914D\u7F6E:', extractOptions);\r\n    \r\n    // \u6267\u884C\u6279\u91CF\u8BE6\u60C5\u63D0\u53D6\r\n    const progressCallback = createProgressCallback();\r\n    const detailResults = await detailExtractor.extractBatchDetails(searchResults, {\r\n      ...extractOptions,\r\n      onProgress: progressCallback\r\n    });\r\n    \r\n    const totalTime = Date.now() - startTime;\r\n    \r\n    // \u751F\u6210\u8BE6\u7EC6\u7EDF\u8BA1\r\n    const stats = generateBatchStats(detailResults, totalTime);\r\n    \r\n    // \u8BB0\u5F55\u7528\u6237\u884C\u4E3A\uFF08\u5982\u679C\u5DF2\u8BA4\u8BC1\uFF09\r\n    if (user) {\r\n      try {\r\n        await logBatchExtractionAction(env, user.id, searchResults, detailResults, stats, request);\r\n      } catch (logError) {\r\n        console.warn('\u8BB0\u5F55\u6279\u91CF\u7528\u6237\u884C\u4E3A\u5931\u8D25:', logError.message);\r\n      }\r\n    }\r\n    \r\n    // \u6784\u5EFA\u6279\u91CF\u54CD\u5E94\r\n    return buildBatchSuccessResponse(detailResults, stats, searchResults.length);\r\n    \r\n  } catch (error) {\r\n    console.error('\u6279\u91CF\u8BE6\u60C5\u63D0\u53D6\u5931\u8D25:', error);\r\n    const totalTime = Date.now() - startTime;\r\n    \r\n    return buildBatchErrorResponse(error, totalTime);\r\n  }\r\n}\r\n\r\n// ===================== \u914D\u7F6E\u7BA1\u7406\u76F8\u5173 =====================\r\n\r\n/**\r\n * \u83B7\u53D6\u8BE6\u60C5\u63D0\u53D6\u914D\u7F6E - \u65B0\u7248\u672C\r\n */\r\nexport async function getDetailExtractionConfigHandler(request, env) {\r\n  const user = await authenticate(request, env);\r\n  if (!user) {\r\n    return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n  }\r\n  \r\n  try {\r\n    // \u83B7\u53D6\u7528\u6237\u914D\u7F6E\r\n    const userConfig = await detailConfigService.getUserConfig(env, user.id);\r\n    \r\n    // \u83B7\u53D6\u914D\u7F6E\u5143\u6570\u636E\r\n    const metadata = detailConfigService.getConfigMetadata();\r\n    \r\n    // \u83B7\u53D6\u914D\u7F6E\u9884\u8BBE\r\n    const presets = detailConfigService.getConfigPresets();\r\n    \r\n    // \u83B7\u53D6\u7528\u6237\u4F7F\u7528\u7EDF\u8BA1\r\n    const usageStats = await getUserUsageStats(env, user.id);\r\n    \r\n    return utils.successResponse({\r\n      config: userConfig,\r\n      metadata,\r\n      presets,\r\n      usage: usageStats,\r\n      isDefault: await isUsingDefaultConfig(env, user.id)\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u8BE6\u60C5\u63D0\u53D6\u914D\u7F6E\u5931\u8D25:', error);\r\n    return utils.errorResponse('\u83B7\u53D6\u914D\u7F6E\u5931\u8D25: ' + error.message, 500);\r\n  }\r\n}\r\n\r\n/**\r\n * \u66F4\u65B0\u8BE6\u60C5\u63D0\u53D6\u914D\u7F6E - \u65B0\u7248\u672C\r\n */\r\nexport async function updateDetailExtractionConfigHandler(request, env) {\r\n  const user = await authenticate(request, env);\r\n  if (!user) {\r\n    return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n  }\r\n  \r\n  try {\r\n    const body = await utils.safeJsonParse(request, {});\r\n    const { config, validateOnly = false, preset = null } = body;\r\n    \r\n    let configToSave;\r\n    \r\n    // \u5982\u679C\u4F7F\u7528\u9884\u8BBE\r\n    if (preset) {\r\n      const presets = detailConfigService.getConfigPresets();\r\n      if (!presets[preset]) {\r\n        return utils.errorResponse(`\u672A\u77E5\u7684\u914D\u7F6E\u9884\u8BBE: ${preset}`, 400);\r\n      }\r\n      configToSave = presets[preset].config;\r\n    } else {\r\n      configToSave = config;\r\n    }\r\n    \r\n    if (!configToSave || typeof configToSave !== 'object') {\r\n      return utils.errorResponse('\u914D\u7F6E\u6570\u636E\u683C\u5F0F\u9519\u8BEF', 400);\r\n    }\r\n    \r\n    // \u9A8C\u8BC1\u914D\u7F6E\r\n    const validation = detailConfigService.validateConfig(configToSave);\r\n    if (!validation.valid) {\r\n      return utils.errorResponse({\r\n        message: '\u914D\u7F6E\u9A8C\u8BC1\u5931\u8D25',\r\n        errors: validation.errors,\r\n        warnings: validation.warnings\r\n      }, 400);\r\n    }\r\n    \r\n    // \u5982\u679C\u53EA\u662F\u9A8C\u8BC1\uFF0C\u8FD4\u56DE\u9A8C\u8BC1\u7ED3\u679C\r\n    if (validateOnly) {\r\n      return utils.successResponse({\r\n        valid: true,\r\n        warnings: validation.warnings\r\n      });\r\n    }\r\n    \r\n    // \u83B7\u53D6\u5F53\u524D\u914D\u7F6E\u7528\u4E8E\u6BD4\u8F83\r\n    const currentConfig = await detailConfigService.getUserConfig(env, user.id);\r\n    const changes = detectConfigChanges(currentConfig, configToSave);\r\n    \r\n    // \u4FDD\u5B58\u914D\u7F6E\r\n    const saveResult = await detailConfigService.saveUserConfig(env, user.id, configToSave);\r\n    \r\n    // \u8BB0\u5F55\u7528\u6237\u884C\u4E3A\r\n    try {\r\n      await utils.logUserAction(env, user.id, 'detail_config_update', {\r\n        preset,\r\n        changes,\r\n        validation: validation.warnings,\r\n        timestamp: Date.now()\r\n      }, request);\r\n    } catch (logError) {\r\n      console.warn('\u8BB0\u5F55\u914D\u7F6E\u66F4\u65B0\u5931\u8D25:', logError.message);\r\n    }\r\n    \r\n    return utils.successResponse({\r\n      message: '\u914D\u7F6E\u66F4\u65B0\u6210\u529F',\r\n      config: configToSave,\r\n      changes,\r\n      warnings: saveResult.warnings,\r\n      preset: preset || null\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('\u66F4\u65B0\u8BE6\u60C5\u63D0\u53D6\u914D\u7F6E\u5931\u8D25:', error);\r\n    return utils.errorResponse('\u66F4\u65B0\u914D\u7F6E\u5931\u8D25: ' + error.message, 500);\r\n  }\r\n}\r\n\r\n/**\r\n * \u91CD\u7F6E\u8BE6\u60C5\u63D0\u53D6\u914D\u7F6E - \u65B0\u589E\r\n */\r\nexport async function resetDetailExtractionConfigHandler(request, env) {\r\n  const user = await authenticate(request, env);\r\n  if (!user) {\r\n    return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n  }\r\n  \r\n  try {\r\n    const result = await detailConfigService.resetUserConfig(env, user.id);\r\n    \r\n    // \u8BB0\u5F55\u7528\u6237\u884C\u4E3A\r\n    try {\r\n      await utils.logUserAction(env, user.id, 'detail_config_reset', {\r\n        timestamp: Date.now()\r\n      }, request);\r\n    } catch (logError) {\r\n      console.warn('\u8BB0\u5F55\u914D\u7F6E\u91CD\u7F6E\u5931\u8D25:', logError.message);\r\n    }\r\n    \r\n    return utils.successResponse({\r\n      message: '\u914D\u7F6E\u5DF2\u91CD\u7F6E\u4E3A\u9ED8\u8BA4\u503C',\r\n      config: result.config\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('\u91CD\u7F6E\u8BE6\u60C5\u63D0\u53D6\u914D\u7F6E\u5931\u8D25:', error);\r\n    return utils.errorResponse('\u91CD\u7F6E\u914D\u7F6E\u5931\u8D25: ' + error.message, 500);\r\n  }\r\n}\r\n\r\n\r\n// ===================== \u5176\u4ED6\u5904\u7406\u5668\u4FDD\u6301\u4E0D\u53D8 =====================\r\n\r\nexport async function getDetailExtractionHistoryHandler(request, env) {\r\n  const user = await authenticate(request, env);\r\n  if (!user) {\r\n    return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n  }\r\n  \r\n  try {\r\n    const url = new URL(request.url);\r\n    const params = parseHistoryParams(url.searchParams);\r\n    \r\n    const { query, queryParams } = buildHistoryQuery(user.id, params);\r\n    const result = await env.DB.prepare(query).bind(...queryParams).all();\r\n    \r\n    const history = result.results.map(item => enhanceHistoryItem(item));\r\n    \r\n    const countQuery = buildHistoryCountQuery(user.id, params);\r\n    const countResult = await env.DB.prepare(countQuery.query).bind(...countQuery.params).first();\r\n    const totalCount = countResult?.total || 0;\r\n    \r\n    return utils.successResponse({\r\n      history,\r\n      pagination: {\r\n        total: totalCount,\r\n        limit: params.limit,\r\n        offset: params.offset,\r\n        hasMore: result.results.length === params.limit,\r\n        currentPage: Math.floor(params.offset / params.limit) + 1,\r\n        totalPages: Math.ceil(totalCount / params.limit)\r\n      },\r\n      filters: {\r\n        source: params.source,\r\n        status: params.status,\r\n        dateRange: params.dateRange\r\n      }\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u8BE6\u60C5\u63D0\u53D6\u5386\u53F2\u5931\u8D25:', error);\r\n    return utils.errorResponse('\u83B7\u53D6\u5386\u53F2\u5931\u8D25: ' + error.message, 500);\r\n  }\r\n}\r\n\r\nexport async function getDetailCacheStatsHandler(request, env) {\r\n  const user = await authenticate(request, env);\r\n  if (!user) {\r\n    return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n  }\r\n  \r\n  try {\r\n    await ensureCacheManagerInitialized(env);\r\n    \r\n    const stats = await cacheManager.getCacheStats();\r\n    const userStats = await getUserSpecificCacheStats(env, user.id);\r\n    const sourceTypeStats = await getSourceTypeStats(env);\r\n    const efficiencyStats = await getCacheEfficiencyStats(env, user.id);\r\n    \r\n    return utils.successResponse({\r\n      global: {\r\n        totalItems: stats.totalItems || 0,\r\n        expiredItems: stats.expiredItems || 0,\r\n        totalSize: stats.totalSize || 0,\r\n        averageSize: Math.round(stats.averageSize || 0),\r\n        hitRate: parseFloat((stats.hitRate || 0).toFixed(1))\r\n      },\r\n      user: userStats,\r\n      sourceTypes: sourceTypeStats,\r\n      efficiency: efficiencyStats\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u7F13\u5B58\u7EDF\u8BA1\u5931\u8D25:', error);\r\n    return utils.errorResponse('\u83B7\u53D6\u7F13\u5B58\u7EDF\u8BA1\u5931\u8D25: ' + error.message, 500);\r\n  }\r\n}\r\n\r\nexport async function clearDetailCacheHandler(request, env) {\r\n  const user = await authenticate(request, env);\r\n  if (!user) {\r\n    return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n  }\r\n  \r\n  try {\r\n    await ensureCacheManagerInitialized(env);\r\n    \r\n    const url = new URL(request.url);\r\n    const operation = url.searchParams.get('operation') || 'expired';\r\n    const params = parseClearParams(url.searchParams);\r\n    \r\n    let cleanedCount = 0;\r\n    let message = '';\r\n    let details = {};\r\n    \r\n    const beforeStats = await cacheManager.getCacheStats();\r\n    \r\n    switch (operation) {\r\n      case 'expired':\r\n        cleanedCount = await handleExpiredCacheCleanup(env, params);\r\n        message = `\u5DF2\u6E05\u7406 ${cleanedCount} \u4E2A\u8FC7\u671F\u7F13\u5B58\u9879`;\r\n        break;\r\n      case 'all':\r\n        const result = await handleAllCacheCleanup(env, params);\r\n        cleanedCount = result.count;\r\n        details = result.details;\r\n        message = `\u5DF2\u6E05\u7A7A\u6240\u6709\u7F13\u5B58 (${cleanedCount} \u9879)`;\r\n        break;\r\n      case 'lru':\r\n        const lruResult = await handleLRUCacheCleanup(env, params);\r\n        cleanedCount = lruResult.count;\r\n        details = lruResult.details;\r\n        message = `\u5DF2\u6E05\u7406 ${cleanedCount} \u4E2A\u6700\u8FD1\u6700\u5C11\u4F7F\u7528\u7684\u7F13\u5B58\u9879`;\r\n        break;\r\n      case 'selective':\r\n        const selectiveResult = await handleSelectiveCacheCleanup(env, params);\r\n        cleanedCount = selectiveResult.count;\r\n        details = selectiveResult.details;\r\n        message = `\u5DF2\u9009\u62E9\u6027\u6E05\u7406 ${cleanedCount} \u4E2A\u7F13\u5B58\u9879`;\r\n        break;\r\n      default:\r\n        return utils.errorResponse('\u65E0\u6548\u7684\u6E05\u7406\u64CD\u4F5C\u7C7B\u578B', 400);\r\n    }\r\n    \r\n    const afterStats = await cacheManager.getCacheStats();\r\n    \r\n    try {\r\n      await utils.logUserAction(env, user.id, 'detail_cache_clear', {\r\n        operation,\r\n        params,\r\n        cleanedCount,\r\n        timestamp: Date.now()\r\n      }, request);\r\n    } catch (logError) {\r\n      console.warn('\u8BB0\u5F55\u6E05\u7406\u64CD\u4F5C\u5931\u8D25:', logError.message);\r\n    }\r\n    \r\n    return utils.successResponse({\r\n      operation,\r\n      cleanedCount,\r\n      message,\r\n      details,\r\n      stats: {\r\n        before: {\r\n          totalItems: beforeStats.totalItems || 0,\r\n          totalSize: beforeStats.totalSize || 0\r\n        },\r\n        after: {\r\n          totalItems: afterStats.totalItems || 0,\r\n          totalSize: afterStats.totalSize || 0\r\n        }\r\n      }\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('\u6E05\u7406\u7F13\u5B58\u5931\u8D25:', error);\r\n    return utils.errorResponse('\u6E05\u7406\u7F13\u5B58\u5931\u8D25: ' + error.message, 500);\r\n  }\r\n}\r\n\r\nexport async function deleteDetailCacheHandler(request, env) {\r\n  const user = await authenticate(request, env);\r\n  if (!user) {\r\n    return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n  }\r\n  \r\n  try {\r\n    await ensureCacheManagerInitialized(env);\r\n    \r\n    const body = await utils.safeJsonParse(request, {});\r\n    const { url, urls } = body;\r\n    \r\n    const urlsToDelete = urls && Array.isArray(urls) ? urls : (url ? [url] : []);\r\n    \r\n    if (urlsToDelete.length === 0) {\r\n      return utils.errorResponse('URL\u53C2\u6570\u4E0D\u80FD\u4E3A\u7A7A', 400);\r\n    }\r\n    \r\n    const deleteResults = await Promise.allSettled(\r\n      urlsToDelete.map(async (targetUrl) => {\r\n        const success = await cacheManager.deleteDetailCache(targetUrl);\r\n        return { url: targetUrl, success };\r\n      })\r\n    );\r\n    \r\n    const successful = deleteResults\r\n      .filter(result => result.status === 'fulfilled' && result.value.success)\r\n      .map(result => result.value.url);\r\n    \r\n    const failed = deleteResults\r\n      .filter(result => result.status === 'rejected' || !result.value.success)\r\n      .map(result => result.status === 'fulfilled' ? result.value.url : 'Unknown');\r\n    \r\n    try {\r\n      await utils.logUserAction(env, user.id, 'detail_cache_delete', {\r\n        urls: urlsToDelete,\r\n        successful: successful.length,\r\n        failed: failed.length,\r\n        timestamp: Date.now()\r\n      }, request);\r\n    } catch (logError) {\r\n      console.warn('\u8BB0\u5F55\u5220\u9664\u64CD\u4F5C\u5931\u8D25:', logError.message);\r\n    }\r\n    \r\n    return utils.successResponse({\r\n      message: `\u7F13\u5B58\u5220\u9664\u5B8C\u6210: ${successful.length} \u6210\u529F, ${failed.length} \u5931\u8D25`,\r\n      results: {\r\n        successful,\r\n        failed,\r\n        total: urlsToDelete.length\r\n      }\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('\u5220\u9664\u7F13\u5B58\u5931\u8D25:', error);\r\n    return utils.errorResponse('\u5220\u9664\u7F13\u5B58\u5931\u8D25: ' + error.message, 500);\r\n  }\r\n}\r\n\r\nexport async function getDetailExtractionStatsHandler(request, env) {\r\n  const user = await authenticate(request, env);\r\n  if (!user) {\r\n    return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n  }\r\n  \r\n  try {\r\n    const [userStats, sourceStats, performanceStats, cacheStats] = await Promise.all([\r\n      getUserDetailStats(env, user.id),\r\n      getSourceTypeStats(env, user.id),\r\n      getPerformanceStats(env, user.id),\r\n      getCacheEfficiencyStats(env, user.id)\r\n    ]);\r\n    \r\n    return utils.successResponse({\r\n      user: userStats,\r\n      sources: sourceStats,\r\n      performance: performanceStats,\r\n      cache: cacheStats\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u8BE6\u60C5\u63D0\u53D6\u7EDF\u8BA1\u5931\u8D25:', error);\r\n    return utils.errorResponse('\u83B7\u53D6\u7EDF\u8BA1\u5931\u8D25: ' + error.message, 500);\r\n  }\r\n}\r\n\r\n", "// src/handlers/proxy.js - \u4FEE\u590D\u7248\u4EE3\u7406\u670D\u52A1\u5904\u7406\u5668\r\nimport { utils } from '../utils.js';\r\nimport { authenticate } from '../middleware.js';\r\n\r\n// \u5141\u8BB8\u4EE3\u7406\u7684\u57DF\u540D\u767D\u540D\u5355 - \u53EA\u5141\u8BB8\u641C\u7D22\u6E90\u57DF\u540D\r\nconst ALLOWED_DOMAINS = [\r\n  'javbus.com',\r\n  'www.javbus.com',\r\n  'javdb.com',\r\n  'www.javdb.com',\r\n  'jable.tv',\r\n  'www.jable.tv',\r\n  'javmost.com',\r\n  'www.javmost.com',\r\n  'javgg.net',\r\n  'www.javgg.net',\r\n  'sukebei.nyaa.si',\r\n  'jav.guru',\r\n  'www.jav.guru',\r\n  'javlibrary.com',\r\n  'www.javlibrary.com',\r\n  'btsow.com',\r\n  'www.btsow.com'\r\n];\r\n\r\n// \u5783\u573E\u57DF\u540D\u9ED1\u540D\u5355\r\nconst SPAM_DOMAINS = [\r\n  'seedmm.cyou', 'busfan.cyou', 'dmmsee.ink', 'ph7zhi.vip', '8pla6t.vip',\r\n  'ltrpvkga.com', 'frozaflurkiveltra.com', 'shvaszc.cc', 'fpnylxm.cc',\r\n  'mvqttfwf.com', 'jempoprostoklimor.com', '128zha.cc', 'aciyopg.cc',\r\n  'mnaspm.com', 'asacp.org', 'pr0rze.vip', 'go.mnaspm.com'\r\n];\r\n\r\n/**\r\n * \u4EE3\u7406\u670D\u52A1\u4E3B\u5904\u7406\u5668\r\n */\r\nexport async function proxyHandler(request, env) {\r\n  try {\r\n    const url = new URL(request.url);\r\n    const pathname = url.pathname;\r\n\r\n    // \u63D0\u53D6\u76EE\u6807URL - \u6539\u8FDB\u5904\u7406\u65B9\u5F0F\r\n    const proxyPath = pathname.replace('/api/proxy/', '');\r\n    \r\n    if (!proxyPath) {\r\n      return utils.errorResponse('\u7F3A\u5C11\u76EE\u6807URL', 400);\r\n    }\r\n\r\n    // \u89E3\u7801URL\r\n    let targetUrl;\r\n    try {\r\n      // \u5904\u7406\u53EF\u80FD\u7684\u53CC\u91CD\u7F16\u7801\u95EE\u9898\r\n      targetUrl = decodeURIComponent(proxyPath);\r\n      // \u5982\u679C\u8FD8\u662F\u7F16\u7801\u72B6\u6001\uFF0C\u518D\u6B21\u89E3\u7801\r\n      if (targetUrl.includes('%')) {\r\n        targetUrl = decodeURIComponent(targetUrl);\r\n      }\r\n    } catch (error) {\r\n      return utils.errorResponse('\u65E0\u6548\u7684URL\u7F16\u7801', 400);\r\n    }\r\n\r\n    // \u786E\u4FDDURL\u6709\u534F\u8BAE\r\n    if (!targetUrl.startsWith('http://') && !targetUrl.startsWith('https://')) {\r\n      targetUrl = 'https://' + targetUrl;\r\n    }\r\n\r\n    // \u9A8C\u8BC1\u76EE\u6807URL\r\n    const validation = validateTargetUrl(targetUrl);\r\n    if (!validation.valid) {\r\n      return utils.errorResponse(validation.error, 403);\r\n    }\r\n\r\n    // \u8BB0\u5F55\u8BBF\u95EE\u65E5\u5FD7\uFF08\u5982\u679C\u7528\u6237\u5DF2\u767B\u5F55\uFF09\r\n    const user = await authenticate(request, env).catch(() => null);\r\n    if (user && env.ENABLE_ACTION_LOGGING === 'true') {\r\n      await utils.logUserAction(env, user.id, 'proxy_access', {\r\n        targetUrl: targetUrl,\r\n        userAgent: request.headers.get('User-Agent'),\r\n        timestamp: Date.now()\r\n      }, request);\r\n    }\r\n\r\n    // \u6267\u884C\u4EE3\u7406\u8BF7\u6C42\r\n    return await executeProxy(request, targetUrl, url);\r\n\r\n  } catch (error) {\r\n    console.error('\u4EE3\u7406\u8BF7\u6C42\u5931\u8D25:', error);\r\n    return utils.errorResponse('\u4EE3\u7406\u670D\u52A1\u6682\u65F6\u4E0D\u53EF\u7528: ' + error.message, 500);\r\n  }\r\n}\r\n\r\n/**\r\n * \u9A8C\u8BC1\u76EE\u6807URL\u662F\u5426\u5141\u8BB8\u4EE3\u7406\r\n */\r\nfunction validateTargetUrl(targetUrl) {\r\n  try {\r\n    const urlObj = new URL(targetUrl);\r\n    const hostname = urlObj.hostname.toLowerCase();\r\n\r\n    // \u68C0\u67E5\u662F\u5426\u5728\u9ED1\u540D\u5355\u4E2D\r\n    if (SPAM_DOMAINS.some(domain => hostname.includes(domain))) {\r\n      return { valid: false, error: '\u8BE5\u57DF\u540D\u5DF2\u88AB\u5217\u5165\u9ED1\u540D\u5355' };\r\n    }\r\n\r\n    // \u68C0\u67E5\u662F\u5426\u5728\u767D\u540D\u5355\u4E2D\r\n    const isAllowed = ALLOWED_DOMAINS.some(domain => {\r\n      return hostname === domain || hostname.endsWith('.' + domain);\r\n    });\r\n\r\n    if (!isAllowed) {\r\n      return { valid: false, error: '\u8BE5\u57DF\u540D\u4E0D\u5728\u5141\u8BB8\u7684\u4EE3\u7406\u8303\u56F4\u5185' };\r\n    }\r\n\r\n    return { valid: true };\r\n  } catch (error) {\r\n    return { valid: false, error: '\u65E0\u6548\u7684URL\u683C\u5F0F' };\r\n  }\r\n}\r\n\r\n/**\r\n * \u6267\u884C\u4EE3\u7406\u8BF7\u6C42\r\n */\r\nasync function executeProxy(originalRequest, targetUrl, originalUrlObj) {\r\n  try {\r\n    // \u521B\u5EFA\u65B0\u7684\u8BF7\u6C42\u5934\uFF0C\u8FC7\u6EE4\u4E0D\u5FC5\u8981\u7684\u5934\u90E8\r\n    const newHeaders = new Headers();\r\n    \r\n    // \u590D\u5236\u5FC5\u8981\u7684\u8BF7\u6C42\u5934\r\n    const allowedHeaders = [\r\n      'accept', 'accept-language', 'cache-control', 'content-type',\r\n      'range', 'user-agent'\r\n    ];\r\n\r\n    allowedHeaders.forEach(headerName => {\r\n      const headerValue = originalRequest.headers.get(headerName);\r\n      if (headerValue) {\r\n        newHeaders.set(headerName, headerValue);\r\n      }\r\n    });\r\n\r\n    // \u8BBE\u7F6E\u81EA\u5B9A\u4E49Referer\u4EE5\u7ED5\u8FC7\u67D0\u4E9B\u53CD\u722C\u9650\u5236\r\n    const targetUrlObj = new URL(targetUrl);\r\n    newHeaders.set('Referer', `${targetUrlObj.protocol}//${targetUrlObj.hostname}/`);\r\n\r\n    // \u521B\u5EFA\u4EE3\u7406\u8BF7\u6C42\r\n    const proxyRequest = new Request(targetUrl, {\r\n      method: originalRequest.method,\r\n      headers: newHeaders,\r\n      body: originalRequest.method !== 'GET' ? originalRequest.body : null,\r\n      redirect: 'manual' // \u624B\u52A8\u5904\u7406\u91CD\u5B9A\u5411\r\n    });\r\n\r\n    // \u53D1\u8D77\u8BF7\u6C42\r\n    const response = await fetch(proxyRequest);\r\n\r\n    // \u5904\u7406\u91CD\u5B9A\u5411\r\n    if ([301, 302, 303, 307, 308].includes(response.status)) {\r\n      const locationHeader = response.headers.get('location');\r\n      if (locationHeader) {\r\n        const redirectUrl = new URL(locationHeader, targetUrl);\r\n        const newProxyPath = `/api/proxy/${encodeURIComponent(redirectUrl.toString())}`;\r\n        \r\n        return new Response(response.body, {\r\n          status: response.status,\r\n          statusText: response.statusText,\r\n          headers: {\r\n            ...Object.fromEntries(response.headers.entries()),\r\n            'Location': `${originalUrlObj.origin}${newProxyPath}`\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    // \u83B7\u53D6\u539F\u59CB\u5185\u5BB9\u7C7B\u578B\r\n    const originalContentType = response.headers.get('content-type') || '';\r\n    \r\n    // \uD83D\uDD27 \u5173\u952E\u4FEE\u590D\uFF1A\u6839\u636E\u5185\u5BB9\u7C7B\u578B\u51B3\u5B9A\u662F\u5426\u5904\u7406\r\n    const isHtmlContent = originalContentType.toLowerCase().includes('text/html');\r\n    const isTextContent = originalContentType.toLowerCase().includes('text/') && !isHtmlContent;\r\n    \r\n    let responseBody = response.body;\r\n    let modifiedContentType = originalContentType;\r\n\r\n    // \u53EA\u5BF9HTML\u5185\u5BB9\u8FDB\u884CURL\u91CD\u5199\r\n    if (isHtmlContent) {\r\n      try {\r\n        const htmlContent = await response.text();\r\n        const modifiedHtml = rewriteHtmlContent(htmlContent, targetUrl, originalUrlObj.origin);\r\n        responseBody = modifiedHtml;\r\n        // \u786E\u4FDDContent-Type\u6B63\u786E\r\n        modifiedContentType = 'text/html; charset=utf-8';\r\n      } catch (error) {\r\n        console.error('\u5904\u7406HTML\u5185\u5BB9\u5931\u8D25:', error);\r\n        responseBody = response.body; // \u56DE\u9000\u5230\u539F\u59CB\u5185\u5BB9\r\n      }\r\n    }\r\n    // \u5BF9\u5176\u4ED6\u6587\u672C\u5185\u5BB9\uFF08\u5982CSS\u3001JS\uFF09\u4E0D\u8FDB\u884C\u5904\u7406\uFF0C\u76F4\u63A5\u4F20\u9012\r\n    else {\r\n      // \u4FDD\u6301\u539F\u59CB\u5185\u5BB9\u548CContent-Type\r\n      responseBody = response.body;\r\n    }\r\n\r\n    // \u521B\u5EFA\u54CD\u5E94\r\n    const modifiedResponse = new Response(responseBody, {\r\n      status: response.status,\r\n      statusText: response.statusText,\r\n      headers: createResponseHeaders(response.headers, modifiedContentType)\r\n    });\r\n\r\n    return modifiedResponse;\r\n\r\n  } catch (error) {\r\n    console.error('\u4EE3\u7406\u8BF7\u6C42\u6267\u884C\u5931\u8D25:', error);\r\n    \r\n    // \u8FD4\u56DE\u53CB\u597D\u7684\u9519\u8BEF\u9875\u9762\r\n    return new Response(createErrorPage(targetUrl, error.message), {\r\n      status: 502,\r\n      headers: {\r\n        'Content-Type': 'text/html; charset=utf-8',\r\n        'Access-Control-Allow-Origin': '*'\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * \u91CD\u5199HTML\u5185\u5BB9\u4E2D\u7684\u94FE\u63A5\r\n */\r\nfunction rewriteHtmlContent(htmlContent, originalUrl, proxyOrigin) {\r\n  const originalUrlObj = new URL(originalUrl);\r\n  const baseUrl = `${originalUrlObj.protocol}//${originalUrlObj.hostname}`;\r\n\r\n  // \u66FF\u6362\u76F8\u5BF9\u8DEF\u5F84\u94FE\u63A5\r\n  let modifiedHtml = htmlContent;\r\n\r\n  // \uD83D\uDD27 \u66F4\u7CBE\u786E\u7684URL\u91CD\u5199\uFF0C\u907F\u514D\u5F71\u54CDCSS\u548CJS\u6587\u4EF6\r\n  const replacements = [\r\n    // href=\"/path\" -> href=\"/api/proxy/https://domain.com/path\" (\u6392\u9664CSS\u6587\u4EF6)\r\n    {\r\n      pattern: /href=[\"']\\/(?!\\/|http|#)([^\"']*?)[\"']/g,\r\n      replacement: (match, path) => {\r\n        // \u5982\u679C\u662FCSS\u6587\u4EF6\uFF0C\u8F6C\u6362\u4E3A\u4EE3\u7406URL\r\n        if (path.endsWith('.css') || path.includes('.css?')) {\r\n          return `href=\"${proxyOrigin}/api/proxy/${encodeURIComponent(baseUrl + '/' + path)}\"`;\r\n        }\r\n        // \u5176\u4ED6\u94FE\u63A5\u4E5F\u8F6C\u6362\u4E3A\u4EE3\u7406URL\r\n        return `href=\"${proxyOrigin}/api/proxy/${encodeURIComponent(baseUrl + '/' + path)}\"`;\r\n      }\r\n    },\r\n    // src=\"/path\" -> src=\"/api/proxy/https://domain.com/path\" (\u6392\u9664JS\u6587\u4EF6)\r\n    {\r\n      pattern: /src=[\"']\\/(?!\\/|http)([^\"']*?)[\"']/g,\r\n      replacement: (match, path) => {\r\n        // \u5982\u679C\u662FJS\u6587\u4EF6\uFF0C\u8F6C\u6362\u4E3A\u4EE3\u7406URL\r\n        if (path.endsWith('.js') || path.includes('.js?')) {\r\n          return `src=\"${proxyOrigin}/api/proxy/${encodeURIComponent(baseUrl + '/' + path)}\"`;\r\n        }\r\n        // \u5176\u4ED6\u8D44\u6E90\u4E5F\u8F6C\u6362\u4E3A\u4EE3\u7406URL\r\n        return `src=\"${proxyOrigin}/api/proxy/${encodeURIComponent(baseUrl + '/' + path)}\"`;\r\n      }\r\n    },\r\n    // action=\"/path\" -> action=\"/api/proxy/https://domain.com/path\"\r\n    {\r\n      pattern: /action=[\"']\\/(?!\\/|http)([^\"']*?)[\"']/g,\r\n      replacement: (match, path) => {\r\n        return `action=\"${proxyOrigin}/api/proxy/${encodeURIComponent(baseUrl + '/' + path)}\"`;\r\n      }\r\n    }\r\n  ];\r\n\r\n  replacements.forEach(({ pattern, replacement }) => {\r\n    if (typeof replacement === 'function') {\r\n      modifiedHtml = modifiedHtml.replace(pattern, replacement);\r\n    } else {\r\n      modifiedHtml = modifiedHtml.replace(pattern, replacement);\r\n    }\r\n  });\r\n\r\n  // \u6DFB\u52A0 base\u6807\u7B7E\u9632\u6B62\u76F8\u5BF9\u8DEF\u5F84\u95EE\u9898\r\n  const baseTagPattern = /<base[^>]*>/i;\r\n  if (!baseTagPattern.test(modifiedHtml)) {\r\n    const headPattern = /<head[^>]*>/i;\r\n    if (headPattern.test(modifiedHtml)) {\r\n      modifiedHtml = modifiedHtml.replace(headPattern, \r\n        `$&\\n<base href=\"${proxyOrigin}/api/proxy/${encodeURIComponent(baseUrl)}/\">`\r\n      );\r\n    }\r\n  }\r\n\r\n  return modifiedHtml;\r\n}\r\n\r\n/**\r\n * \u521B\u5EFA\u54CD\u5E94\u5934\r\n */\r\nfunction createResponseHeaders(originalHeaders, contentType) {\r\n  const headers = new Headers();\r\n\r\n  // \u590D\u5236\u5927\u90E8\u5206\u539F\u59CB\u5934\u90E8\r\n  for (const [key, value] of originalHeaders.entries()) {\r\n    const lowerKey = key.toLowerCase();\r\n    \r\n    // \u8DF3\u8FC7\u53EF\u80FD\u5BFC\u81F4\u95EE\u9898\u7684\u5934\u90E8\r\n    if (!['content-encoding', 'content-security-policy', 'x-frame-options', \r\n          'strict-transport-security', 'content-length'].includes(lowerKey)) {\r\n      headers.set(key, value);\r\n    }\r\n  }\r\n\r\n  // \uD83D\uDD27 \u786E\u4FDD\u6B63\u786E\u8BBE\u7F6EContent-Type\r\n  if (contentType) {\r\n    headers.set('Content-Type', contentType);\r\n  }\r\n\r\n  // \u6DFB\u52A0CORS\u5934\u90E8\r\n  headers.set('Access-Control-Allow-Origin', '*');\r\n  headers.set('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');\r\n  headers.set('Access-Control-Allow-Headers', '*');\r\n\r\n  // \u7981\u7528\u7F13\u5B58\u4EE5\u786E\u4FDD\u5B9E\u65F6\u6027\r\n  headers.set('Cache-Control', 'no-store, no-cache, must-revalidate');\r\n  headers.set('Pragma', 'no-cache');\r\n\r\n  return headers;\r\n}\r\n\r\n/**\r\n * \u521B\u5EFA\u9519\u8BEF\u9875\u9762\r\n */\r\nfunction createErrorPage(targetUrl, errorMessage) {\r\n  return `\r\n    <!DOCTYPE html>\r\n    <html lang=\"zh-CN\">\r\n    <head>\r\n      <meta charset=\"UTF-8\">\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n      <title>\u4EE3\u7406\u8BBF\u95EE\u5931\u8D25</title>\r\n      <style>\r\n        body {\r\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n          max-width: 600px;\r\n          margin: 0 auto;\r\n          padding: 40px 20px;\r\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n          color: white;\r\n          text-align: center;\r\n        }\r\n        .error-container {\r\n          background: rgba(255, 255, 255, 0.1);\r\n          backdrop-filter: blur(10px);\r\n          padding: 30px;\r\n          border-radius: 15px;\r\n          border: 1px solid rgba(255, 255, 255, 0.2);\r\n        }\r\n        h1 { margin: 0 0 20px 0; font-size: 2em; }\r\n        .error-message { \r\n          margin: 20px 0;\r\n          padding: 15px;\r\n          background: rgba(255, 255, 255, 0.1);\r\n          border-radius: 8px;\r\n          font-family: monospace;\r\n        }\r\n        .target-url {\r\n          word-break: break-all;\r\n          margin: 15px 0;\r\n          opacity: 0.8;\r\n        }\r\n        .retry-btn {\r\n          display: inline-block;\r\n          padding: 12px 24px;\r\n          background: rgba(255, 255, 255, 0.2);\r\n          color: white;\r\n          text-decoration: none;\r\n          border-radius: 25px;\r\n          margin: 20px 10px;\r\n          transition: all 0.3s;\r\n        }\r\n        .retry-btn:hover {\r\n          background: rgba(255, 255, 255, 0.3);\r\n          transform: translateY(-2px);\r\n        }\r\n      </style>\r\n    </head>\r\n    <body>\r\n      <div class=\"error-container\">\r\n        <h1>\uD83D\uDEAB \u4EE3\u7406\u8BBF\u95EE\u5931\u8D25</h1>\r\n        <div class=\"error-message\">${errorMessage}</div>\r\n        <div class=\"target-url\">\u76EE\u6807\u5730\u5740: ${targetUrl}</div>\r\n        <a href=\"javascript:history.back()\" class=\"retry-btn\">\u8FD4\u56DE\u4E0A\u9875</a>\r\n        <a href=\"javascript:location.reload()\" class=\"retry-btn\">\u91CD\u8BD5</a>\r\n      </div>\r\n    </body>\r\n    </html>\r\n  `;\r\n}\r\n\r\n/**\r\n * \u4EE3\u7406\u5065\u5EB7\u68C0\u67E5\r\n */\r\nexport async function proxyHealthCheckHandler(request, env) {\r\n  try {\r\n    // \u6D4B\u8BD5\u4EE3\u7406\u4E00\u4E2A\u7B80\u5355\u7684\u8BF7\u6C42\r\n    const testUrl = 'https://www.javbus.com';\r\n    const testRequest = new Request(testUrl, {\r\n      method: 'HEAD',\r\n      headers: { 'User-Agent': 'Mozilla/5.0 (compatible; ProxyHealthCheck)' }\r\n    });\r\n\r\n    const startTime = Date.now();\r\n    const response = await fetch(testRequest);\r\n    const responseTime = Date.now() - startTime;\r\n\r\n    const isHealthy = response.ok || response.status === 403; // 403\u4E5F\u7B97\u6B63\u5E38\uFF0C\u53EF\u80FD\u662F\u53CD\u722C\u9650\u5236\r\n\r\n    return utils.successResponse({\r\n      healthy: isHealthy,\r\n      responseTime,\r\n      testUrl,\r\n      statusCode: response.status,\r\n      allowedDomains: ALLOWED_DOMAINS.length,\r\n      timestamp: Date.now()\r\n    });\r\n\r\n  } catch (error) {\r\n    return utils.successResponse({\r\n      healthy: false,\r\n      error: error.message,\r\n      allowedDomains: ALLOWED_DOMAINS.length,\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * \u83B7\u53D6\u4EE3\u7406\u7EDF\u8BA1\u4FE1\u606F\r\n */\r\nexport async function proxyStatsHandler(request, env) {\r\n  const user = await authenticate(request, env);\r\n  if (!user) {\r\n    return utils.errorResponse('\u8BA4\u8BC1\u5931\u8D25', 401);\r\n  }\r\n\r\n  try {\r\n    // \u83B7\u53D6\u7528\u6237\u7684\u4EE3\u7406\u8BBF\u95EE\u7EDF\u8BA1\r\n    const stats = await env.DB.prepare(`\r\n      SELECT \r\n        COUNT(*) as totalAccess,\r\n        COUNT(DISTINCT JSON_EXTRACT(data, '$.targetUrl')) as uniqueUrls,\r\n        MAX(created_at) as lastAccess\r\n      FROM user_actions \r\n      WHERE user_id = ? AND action = 'proxy_access' AND created_at > datetime('now', '-7 days')\r\n    `).bind(user.id).first();\r\n\r\n    // \u83B7\u53D6\u6700\u8FD1\u8BBF\u95EE\u7684\u57DF\u540D\u7EDF\u8BA1\r\n    const domainStats = await env.DB.prepare(`\r\n      SELECT \r\n        JSON_EXTRACT(data, '$.targetUrl') as url,\r\n        COUNT(*) as count\r\n      FROM user_actions \r\n      WHERE user_id = ? AND action = 'proxy_access' AND created_at > datetime('now', '-7 days')\r\n      GROUP BY JSON_EXTRACT(data, '$.targetUrl')\r\n      ORDER BY count DESC\r\n      LIMIT 10\r\n    `).bind(user.id).all();\r\n\r\n    return utils.successResponse({\r\n      userStats: {\r\n        totalAccess: stats.totalAccess || 0,\r\n        uniqueUrls: stats.uniqueUrls || 0,\r\n        lastAccess: stats.lastAccess\r\n      },\r\n      topDomains: domainStats.results || [],\r\n      allowedDomains: ALLOWED_DOMAINS,\r\n      timestamp: Date.now()\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('\u83B7\u53D6\u4EE3\u7406\u7EDF\u8BA1\u5931\u8D25:', error);\r\n    return utils.errorResponse('\u83B7\u53D6\u7EDF\u8BA1\u4FE1\u606F\u5931\u8D25', 500);\r\n  }\r\n}\r\n\r\nexport default {\r\n  proxyHandler,\r\n  proxyHealthCheckHandler,\r\n  proxyStatsHandler\r\n};", "// src/router.js - \u96C6\u6210\u4EE3\u7406\u529F\u80FD\u7684\u8DEF\u7531\u5668\u66F4\u65B0\r\nimport { utils } from './utils.js';\r\n\r\n// \u5BFC\u5165\u6240\u6709\u5904\u7406\u5668\uFF08\u5305\u62EC\u65B0\u7684\u4EE3\u7406\u5904\u7406\u5668\uFF09\r\nimport {\r\n    authRegisterHandler,\r\n    authLoginHandler,\r\n    authVerifyTokenHandler,\r\n    authRefreshTokenHandler,\r\n    authChangePasswordHandler,\r\n    authLogoutHandler,\r\n    authDeleteAccountHandler,\r\n    authSendRegistrationCodeHandler,\r\n    authSendPasswordResetCodeHandler,\r\n    authRequestEmailChangeHandler,\r\n    authSendEmailChangeCodeHandler,\r\n    authVerifyEmailChangeCodeHandler,\r\n    authSendAccountDeleteCodeHandler,\r\n    authForgotPasswordHandler,\r\n    authResetPasswordHandler,\r\n    authCheckVerificationStatusHandler,\r\n    authGetUserVerificationStatusHandler,\r\n    authSmartSendVerificationCodeHandler\r\n} from './handlers/auth.js';\r\n\r\nimport {\r\n    communityGetTagsHandler,\r\n    communityCreateTagHandler,\r\n    communityUpdateTagHandler,\r\n    communityDeleteTagHandler,\r\n    communityGetSourcesHandler,\r\n    communityCreateSourceHandler,\r\n    communityGetSourceDetailHandler,\r\n    communityUpdateSourceHandler,\r\n    communityDeleteSourceHandler,\r\n    communityDownloadSourceHandler,\r\n    communityLikeSourceHandler,\r\n    communityReviewSourceHandler,\r\n    communityReportSourceHandler,\r\n    communityUserStatsHandler,\r\n    communitySearchHandler\r\n} from './handlers/community.js';\r\n\r\nimport {\r\n    userGetSettingsHandler,\r\n    userUpdateSettingsHandler,\r\n    userSyncFavoritesHandler,\r\n    userGetFavoritesHandler,\r\n    userSaveSearchHistoryHandler,\r\n    userGetSearchHistoryHandler,\r\n    userDeleteSearchHistoryHandler,\r\n    userClearSearchHistoryHandler,\r\n    userGetSearchStatsHandler\r\n} from './handlers/user.js';\r\n\r\nimport {\r\n    getMajorCategoriesHandler,\r\n    createMajorCategoryHandler,\r\n    getSourceCategoriesHandler,\r\n    createSourceCategoryHandler,\r\n    updateSourceCategoryHandler,\r\n    deleteSourceCategoryHandler,\r\n    getSearchSourcesHandler,\r\n    createSearchSourceHandler,\r\n    updateSearchSourceHandler,\r\n    deleteSearchSourceHandler,\r\n    getUserSourceConfigsHandler,\r\n    updateUserSourceConfigHandler,\r\n    batchUpdateUserSourceConfigsHandler,\r\n    getSearchSourceStatsHandler,\r\n    exportUserSearchSourcesHandler\r\n} from './handlers/search-sources.js';\r\n\r\nimport {\r\n    healthCheckHandler,\r\n    sourceStatusCheckHandler,\r\n    sourceStatusHistoryHandler,\r\n    getConfigHandler,\r\n    recordActionHandler,\r\n    defaultHandler\r\n} from './handlers/system.js';\r\n\r\nimport {\r\n    extractSingleDetailHandler,\r\n    extractBatchDetailsHandler,\r\n    getDetailExtractionHistoryHandler,\r\n    getDetailCacheStatsHandler,\r\n    clearDetailCacheHandler,\r\n    deleteDetailCacheHandler,\r\n    getDetailExtractionConfigHandler,\r\n    updateDetailExtractionConfigHandler,\r\n    resetDetailExtractionConfigHandler,\r\n    applyConfigPresetHandler,\r\n    getDetailExtractionStatsHandler\r\n} from './handlers/detail.js';\r\n\r\n// \uD83C\uDD95 \u5BFC\u5165\u4EE3\u7406\u5904\u7406\u5668\r\nimport {\r\n    proxyHandler,\r\n    proxyHealthCheckHandler,\r\n    proxyStatsHandler\r\n} from './handlers/proxy.js';\r\n\r\nexport class Router {\r\n    constructor() {\r\n        this.routes = new Map();\r\n        this.paramRoutes = [];\r\n        this.setupRoutes();\r\n    }\r\n\r\n    addRoute(method, path, handler) {\r\n        const key = `${method}:${path}`;\r\n        this.routes.set(key, handler);\r\n        \r\n        if (path.includes(':')) {\r\n            this.paramRoutes.push({\r\n                method,\r\n                path,\r\n                handler,\r\n                pattern: this.createPattern(path)\r\n            });\r\n        }\r\n    }\r\n\r\n    get(path, handler) { this.addRoute('GET', path, handler); }\r\n    post(path, handler) { this.addRoute('POST', path, handler); }\r\n    put(path, handler) { this.addRoute('PUT', path, handler); }\r\n    delete(path, handler) { this.addRoute('DELETE', path, handler); }\r\n    options(path, handler) { this.addRoute('OPTIONS', path, handler); }\r\n\r\n    createPattern(path) {\r\n        const parts = path.split('/');\r\n        return {\r\n            parts,\r\n            paramNames: parts.filter(part => part.startsWith(':')).map(part => part.substring(1))\r\n        };\r\n    }\r\n\r\n    async handle(request, env) {\r\n        const url = new URL(request.url);\r\n        const method = request.method;\r\n        const pathname = url.pathname;\r\n\r\n        // \u5904\u7406CORS\u9884\u68C0\u8BF7\u6C42\r\n        if (method === 'OPTIONS') {\r\n            return new Response(null, {\r\n                status: 204,\r\n                headers: utils.getCorsHeaders(request.headers.get('Origin') || '*')\r\n            });\r\n        }\r\n\r\n        // \uD83D\uDD27 \u5173\u952E\u4FEE\u590D\uFF1A\u4EE3\u7406\u8BF7\u6C42\u5FC5\u987B\u5728\u6240\u6709\u5176\u4ED6\u8DEF\u7531\u4E4B\u524D\u5904\u7406\r\n        if (pathname.startsWith('/api/proxy/')) {\r\n            console.log(`\u4EE3\u7406\u8BF7\u6C42: ${pathname}`);\r\n            return await this.executeHandler(proxyHandler, request, env);\r\n        }\r\n\r\n        // 1. \u4F18\u5148\u5C1D\u8BD5\u7CBE\u786E\u5339\u914D\r\n        const exactKey = `${method}:${pathname}`;\r\n        if (this.routes.has(exactKey)) {\r\n            console.log(`\u7CBE\u786E\u5339\u914D\u8DEF\u7531: ${exactKey}`);\r\n            return await this.executeHandler(this.routes.get(exactKey), request, env);\r\n        }\r\n\r\n        // 2. \u5C1D\u8BD5\u53C2\u6570\u8DEF\u7531\u5339\u914D\r\n        for (const route of this.paramRoutes) {\r\n            if (route.method === method) {\r\n                const match = this.matchRoute(route.pattern, pathname);\r\n                if (match.success) {\r\n                    console.log(`\u53C2\u6570\u8DEF\u7531\u5339\u914D: ${route.path}, \u53C2\u6570:`, match.params);\r\n                    request.params = match.params;\r\n                    return await this.executeHandler(route.handler, request, env);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 3. \u5C1D\u8BD5\u901A\u914D\u7B26\u8DEF\u7531\r\n        const wildcardKey = `${method}:/*`;\r\n        if (this.routes.has(wildcardKey)) {\r\n            return await this.executeHandler(this.routes.get(wildcardKey), request, env);\r\n        }\r\n\r\n        console.error(`\u672A\u627E\u5230\u5339\u914D\u7684\u8DEF\u7531: ${method} ${pathname}`);\r\n        return utils.errorResponse(`API\u8DEF\u5F84\u4E0D\u5B58\u5728: ${pathname}`, 404);\r\n    }\r\n\r\n    matchRoute(pattern, pathname) {\r\n        const requestParts = pathname.split('/');\r\n        const routeParts = pattern.parts;\r\n\r\n        if (requestParts.length !== routeParts.length) {\r\n            return { success: false, params: {} };\r\n        }\r\n\r\n        const params = {};\r\n        \r\n        for (let i = 0; i < routeParts.length; i++) {\r\n            const routePart = routeParts[i];\r\n            const requestPart = requestParts[i];\r\n\r\n            if (routePart.startsWith(':')) {\r\n                const paramName = routePart.substring(1);\r\n                params[paramName] = requestPart;\r\n            } else if (routePart !== requestPart) {\r\n                return { success: false, params: {} };\r\n            }\r\n        }\r\n\r\n        return { success: true, params };\r\n    }\r\n\r\n    async executeHandler(handler, request, env) {\r\n        try {\r\n            const result = await handler(request, env);\r\n            if (result instanceof Response) {\r\n                const corsHeaders = utils.getCorsHeaders(request.headers.get('Origin') || '*');\r\n                Object.entries(corsHeaders).forEach(([key, value]) => {\r\n                    result.headers.set(key, value);\r\n                });\r\n            }\r\n            return result;\r\n        } catch (error) {\r\n            console.error('\u8DEF\u7531\u5904\u7406\u5668\u9519\u8BEF:', error);\r\n            return utils.errorResponse('\u5185\u90E8\u670D\u52A1\u5668\u9519\u8BEF', 500);\r\n        }\r\n    }\r\n\r\n    setupRoutes() {\r\n        // \u5065\u5EB7\u68C0\u67E5\r\n        this.get('/api/health', healthCheckHandler);\r\n\r\n        // ===============================================\r\n        // \uD83C\uDD95 \u4EE3\u7406\u670D\u52A1\u76F8\u5173\u8DEF\u7531 - \u5FC5\u987B\u5728\u6700\u524D\u9762\u5B9A\u4E49\r\n        // ===============================================\r\n        \r\n        // \u4EE3\u7406\u5065\u5EB7\u68C0\u67E5\r\n        this.get('/api/proxy/health', proxyHealthCheckHandler);\r\n        \r\n        // \u4EE3\u7406\u7EDF\u8BA1\u4FE1\u606F\r\n        this.get('/api/proxy/stats', proxyStatsHandler);\r\n\r\n        // ===============================================\r\n        // \u8BA4\u8BC1\u76F8\u5173\u8DEF\u7531\uFF08\u589E\u5F3A\u7248\u672C\uFF0C\u5305\u542B\u90AE\u7BB1\u9A8C\u8BC1\u548C\u5FD8\u8BB0\u5BC6\u7801\uFF09\r\n        // ===============================================\r\n        \r\n        // \u57FA\u7840\u8BA4\u8BC1\r\n        this.post('/api/auth/register', authRegisterHandler);\r\n        this.post('/api/auth/login', authLoginHandler);\r\n        this.post('/api/auth/verify-token', authVerifyTokenHandler);\r\n        this.post('/api/auth/refresh', authRefreshTokenHandler);\r\n        this.post('/api/auth/logout', authLogoutHandler);\r\n        \r\n        // \u5BC6\u7801\u7BA1\u7406\uFF08\u96C6\u6210\u90AE\u7BB1\u9A8C\u8BC1\uFF09\r\n        this.put('/api/auth/change-password', authChangePasswordHandler);\r\n        this.post('/api/auth/send-password-reset-code', authSendPasswordResetCodeHandler);\r\n        \r\n        // \u5FD8\u8BB0\u5BC6\u7801\u529F\u80FD\r\n        this.post('/api/auth/forgot-password', authForgotPasswordHandler);\r\n        this.post('/api/auth/reset-password', authResetPasswordHandler);\r\n        \r\n        // \u8D26\u6237\u5220\u9664\uFF08\u96C6\u6210\u90AE\u7BB1\u9A8C\u8BC1\uFF09\r\n        this.post('/api/auth/delete-account', authDeleteAccountHandler);\r\n        this.post('/api/auth/send-account-delete-code', authSendAccountDeleteCodeHandler);\r\n\r\n        // \u90AE\u7BB1\u9A8C\u8BC1\u72B6\u6001\u68C0\u67E5\u548C\u667A\u80FD\u53D1\u9001\r\n        this.get('/api/auth/verification-status', authCheckVerificationStatusHandler);\r\n        this.get('/api/auth/user-verification-status', authGetUserVerificationStatusHandler);\r\n        this.post('/api/auth/smart-send-code', authSmartSendVerificationCodeHandler);\r\n\r\n        // \u90AE\u7BB1\u9A8C\u8BC1\u76F8\u5173\u8DEF\u7531\r\n        this.post('/api/auth/send-registration-code', authSendRegistrationCodeHandler);\r\n        this.post('/api/auth/request-email-change', authRequestEmailChangeHandler);\r\n        this.post('/api/auth/send-email-change-code', authSendEmailChangeCodeHandler);\r\n        this.post('/api/auth/verify-email-change-code', authVerifyEmailChangeCodeHandler);\r\n\r\n        // ===============================================\r\n        // \u72EC\u7ACB\u7684\u641C\u7D22\u6E90\u7BA1\u7406API\u8DEF\u7531\r\n        // ===============================================\r\n        \r\n        // \u641C\u7D22\u6E90\u5927\u7C7B\u7BA1\u7406\r\n        this.get('/api/search-sources/major-categories', getMajorCategoriesHandler);\r\n        this.post('/api/search-sources/major-categories', createMajorCategoryHandler);\r\n        \r\n        // \u641C\u7D22\u6E90\u5206\u7C7B\u7BA1\u7406\r\n        this.get('/api/search-sources/categories', getSourceCategoriesHandler);\r\n        this.post('/api/search-sources/categories', createSourceCategoryHandler);\r\n        this.put('/api/search-sources/categories/:id', updateSourceCategoryHandler);\r\n        this.delete('/api/search-sources/categories/:id', deleteSourceCategoryHandler);\r\n        \r\n        // \u641C\u7D22\u6E90\u7BA1\u7406\r\n        this.get('/api/search-sources/sources', getSearchSourcesHandler);\r\n        this.post('/api/search-sources/sources', createSearchSourceHandler);\r\n        this.put('/api/search-sources/sources/:id', updateSearchSourceHandler);\r\n        this.delete('/api/search-sources/sources/:id', deleteSearchSourceHandler);\r\n        \r\n        // \u7528\u6237\u641C\u7D22\u6E90\u914D\u7F6E\u7BA1\u7406\r\n        this.get('/api/search-sources/user-configs', getUserSourceConfigsHandler);\r\n        this.post('/api/search-sources/user-configs', updateUserSourceConfigHandler);\r\n        this.post('/api/search-sources/user-configs/batch', batchUpdateUserSourceConfigsHandler);\r\n        \r\n        // \u641C\u7D22\u6E90\u7EDF\u8BA1\u548C\u5BFC\u51FA\r\n        this.get('/api/search-sources/stats', getSearchSourceStatsHandler);\r\n        this.get('/api/search-sources/export', exportUserSearchSourcesHandler);\r\n\r\n        // ===============================================\r\n        // \u6807\u7B7E\u7BA1\u7406API\r\n        // ===============================================\r\n        this.get('/api/community/tags', communityGetTagsHandler);\r\n        this.post('/api/community/tags', communityCreateTagHandler);\r\n        this.put('/api/community/tags/:id', communityUpdateTagHandler);\r\n        this.delete('/api/community/tags/:id', communityDeleteTagHandler);\r\n\r\n        // ===============================================\r\n        // \u641C\u7D22\u6E90\u72B6\u6001\u68C0\u67E5\uFF08\u7CFB\u7EDF\u7EA7\u522B\u670D\u52A1\uFF09\r\n        // ===============================================\r\n        this.post('/api/source-status/check', sourceStatusCheckHandler);\r\n        this.get('/api/source-status/history', sourceStatusHistoryHandler);\r\n\r\n        // ===============================================\r\n        // \u793E\u533A\u641C\u7D22\u6E90\u76F8\u5173API\r\n        // ===============================================\r\n        this.get('/api/community/sources', communityGetSourcesHandler);\r\n        this.post('/api/community/sources', communityCreateSourceHandler);\r\n        this.get('/api/community/sources/:id', communityGetSourceDetailHandler);\r\n        this.put('/api/community/sources/:id', communityUpdateSourceHandler);\r\n        this.delete('/api/community/sources/:id', communityDeleteSourceHandler);\r\n        this.post('/api/community/sources/:id/download', communityDownloadSourceHandler);\r\n        this.post('/api/community/sources/:id/like', communityLikeSourceHandler);\r\n        this.post('/api/community/sources/:id/review', communityReviewSourceHandler);\r\n        this.post('/api/community/sources/:id/report', communityReportSourceHandler);\r\n\r\n        // \u7528\u6237\u793E\u533A\u7EDF\u8BA1\r\n        this.get('/api/community/user/stats', communityUserStatsHandler);\r\n        this.get('/api/community/search', communitySearchHandler);\r\n\r\n        // ===============================================\r\n        // \u8BE6\u60C5\u63D0\u53D6\u76F8\u5173API\u8DEF\u7531\r\n        // ===============================================\r\n        \r\n        // \u57FA\u7840\u8BE6\u60C5\u63D0\u53D6\u529F\u80FD\r\n        this.post('/api/detail/extract-single', extractSingleDetailHandler);\r\n        this.post('/api/detail/extract-batch', extractBatchDetailsHandler);\r\n        this.get('/api/detail/history', getDetailExtractionHistoryHandler);\r\n        this.get('/api/detail/stats', getDetailExtractionStatsHandler);\r\n        \r\n        // \u7F13\u5B58\u7BA1\u7406\r\n        this.get('/api/detail/cache/stats', getDetailCacheStatsHandler);\r\n        this.delete('/api/detail/cache/clear', clearDetailCacheHandler);\r\n        this.delete('/api/detail/cache/delete', deleteDetailCacheHandler);\r\n        \r\n        // \u914D\u7F6E\u7BA1\u7406\u76F8\u5173API\u8DEF\u7531\r\n        this.get('/api/detail/config', getDetailExtractionConfigHandler);\r\n        this.put('/api/detail/config', updateDetailExtractionConfigHandler);\r\n        this.post('/api/detail/config/reset', resetDetailExtractionConfigHandler);\r\n        this.post('/api/detail/config/preset', applyConfigPresetHandler);\r\n\r\n        // ===============================================\r\n        // \u7528\u6237\u8BBE\u7F6E\uFF08\u5DF2\u79FB\u9664\u641C\u7D22\u6E90\u7BA1\u7406\u529F\u80FD\uFF0C\u73B0\u5728\u901A\u8FC7\u72EC\u7ACBAPI\u5904\u7406\uFF09\r\n        // ===============================================\r\n        this.get('/api/user/settings', userGetSettingsHandler);\r\n        this.put('/api/user/settings', userUpdateSettingsHandler);\r\n\r\n        // ===============================================\r\n        // \u6536\u85CF\u76F8\u5173\r\n        // ===============================================\r\n        this.post('/api/user/favorites', userSyncFavoritesHandler);\r\n        this.get('/api/user/favorites', userGetFavoritesHandler);\r\n\r\n        // ===============================================\r\n        // \u641C\u7D22\u5386\u53F2\r\n        // ===============================================\r\n        this.post('/api/user/search-history', userSaveSearchHistoryHandler);\r\n        this.get('/api/user/search-history', userGetSearchHistoryHandler);\r\n        this.delete('/api/user/search-history/:id', userDeleteSearchHistoryHandler);\r\n        this.delete('/api/user/search-history', userClearSearchHistoryHandler);\r\n\r\n        // ===============================================\r\n        // \u641C\u7D22\u7EDF\u8BA1\r\n        // ===============================================\r\n        this.get('/api/user/search-stats', userGetSearchStatsHandler);\r\n\r\n        // ===============================================\r\n        // \u5176\u4ED6API\r\n        // ===============================================\r\n        this.post('/api/actions/record', recordActionHandler);\r\n        this.get('/api/config', getConfigHandler);\r\n\r\n        // ===============================================\r\n        // \u9ED8\u8BA4\u5904\u7406\u5668\r\n        // ===============================================\r\n        this.get('/*', defaultHandler);\r\n    }\r\n}\r\n\r\n// ===============================================\r\n// \uD83C\uDD95 \u4EE3\u7406\u529F\u80FD\u96C6\u6210\u8BF4\u660E\r\n// ===============================================\r\n// \r\n// \u672C\u6B21\u66F4\u65B0\u6DFB\u52A0\u4E86\u5B8C\u6574\u7684\u4EE3\u7406\u529F\u80FD\uFF1A\r\n// \r\n// 1. \u4EE3\u7406\u8DEF\u7531\uFF1A\r\n//    - GET/POST/PUT/DELETE /api/proxy/* - \u901A\u7528\u4EE3\u7406\u670D\u52A1\r\n//    - GET /api/proxy/health - \u4EE3\u7406\u5065\u5EB7\u68C0\u67E5\r\n//    - GET /api/proxy/stats - \u4EE3\u7406\u4F7F\u7528\u7EDF\u8BA1\r\n//\r\n// 2. \u5B89\u5168\u7279\u6027\uFF1A\r\n//    - \u57DF\u540D\u767D\u540D\u5355\u9650\u5236\r\n//    - \u5783\u573E\u57DF\u540D\u9ED1\u540D\u5355\u8FC7\u6EE4\r\n//    - \u7528\u6237\u8BBF\u95EE\u65E5\u5FD7\u8BB0\u5F55\r\n//    - CORS\u5934\u90E8\u5904\u7406\r\n//\r\n// 3. \u529F\u80FD\u7279\u6027\uFF1A\r\n//    - \u81EA\u52A8\u5904\u7406\u91CD\u5B9A\u5411\r\n//    - HTML\u5185\u5BB9\u4E2D\u94FE\u63A5\u91CD\u5199\r\n//    - \u9519\u8BEF\u9875\u9762\u53CB\u597D\u663E\u793A\r\n//    - \u54CD\u5E94\u5934\u4F18\u5316\r\n//\r\n// 4. \u4F7F\u7528\u65B9\u5F0F\uFF1A\r\n//    - \u539F\u59CBURL: https://javbus.com/search/MIMK-186\r\n//    - \u4EE3\u7406URL: https://your-domain.com/api/proxy/https%3A//javbus.com/search/MIMK-186\r\n//\r\n// 5. \u4E0E\u641C\u7D22\u529F\u80FD\u96C6\u6210\uFF1A\r\n//    - \u641C\u7D22\u670D\u52A1\u4F1A\u81EA\u52A8\u5C06\u7ED3\u679CURL\u5305\u88C5\u4E3A\u4EE3\u7406URL\r\n//    - \u7528\u6237\u70B9\u51FB\u641C\u7D22\u7ED3\u679C\u65F6\u901A\u8FC7\u4EE3\u7406\u8BBF\u95EE\r\n//    - \u89E3\u51B3\u533A\u57DF\u9650\u5236\u548C\u8BBF\u95EE\u95EE\u9898", "// src/index.js - \u4E3B\u5165\u53E3\u6587\u4EF6\uFF08Cloudflare Workers \u517C\u5BB9\u7248\u672C\uFF09\r\nimport { Router } from './router.js';\r\nimport { utils } from './utils.js';\r\nimport { initializeCacheManager } from './services/cache-manager.js';\r\n\r\nexport default {\r\n    async fetch(request, env, ctx) {\r\n        try {\r\n            // \u73AF\u5883\u53D8\u91CF\u68C0\u67E5\r\n            const requiredEnvVars = ['JWT_SECRET', 'DB'];\r\n            const missing = requiredEnvVars.filter(key => !env[key]);\r\n            \r\n            if (missing.length > 0) {\r\n                console.error(`\u7F3A\u5C11\u5FC5\u9700\u7684\u73AF\u5883\u53D8\u91CF: ${missing.join(', ')}`);\r\n                return utils.errorResponse(`\u670D\u52A1\u5668\u914D\u7F6E\u9519\u8BEF: \u7F3A\u5C11${missing.join(', ')}`, 500);\r\n            }\r\n\r\n            // \u521D\u59CB\u5316\u7F13\u5B58\u7BA1\u7406\u5668\uFF08\u4F20\u5165 env \u5BF9\u8C61\uFF09\r\n            await initializeCacheManager(env);\r\n\r\n            const router = new Router();\r\n            return await router.handle(request, env);\r\n        } catch (error) {\r\n            console.error('Worker\u9519\u8BEF:', error);\r\n            return utils.errorResponse('\u670D\u52A1\u5668\u5185\u90E8\u9519\u8BEF', 500);\r\n        }\r\n    }\r\n};"],
  "mappings": "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",
  "names": ["backup", "searchResult", "cacheManager", "searchResult", "linkDomain", "cacheManager", "searchResult", "cacheManager", "SPAM_DOMAINS"]
}
